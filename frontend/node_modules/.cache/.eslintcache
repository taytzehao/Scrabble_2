[{"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\index.js":"1","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Login.js":"2","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Signup.js":"4","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Title_div.js":"5","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Main_page\\Mainpage.js":"6","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\UserContext.js":"7","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Header.js":"8","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\App.js":"9","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Gamespage.js":"10","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Main_page\\Rooms.js":"11","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Joingame.js":"12","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Player.js":"13","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Actionbar.js":"14","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Sachet.js":"15","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Alphabet_analytics\\Alphabet_analytics.js":"16","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Main_game.js":"17","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Board.js":"18","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Tile_container.js":"19","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Tile_container_other.js":"20","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\GamesContext.js":"21","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Draw_button.js":"22","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Score_button.js":"23","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Delete_logo.js":"24","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Challenge_button.js":"25","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Challenge_status.js":"26","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Forgotpassword.js":"27","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Resetpassword.js":"28"},{"size":504,"mtime":1633253734629,"results":"29","hashOfConfig":"30"},{"size":3743,"mtime":1634908827340,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":3437,"mtime":1634898679842,"results":"33","hashOfConfig":"30"},{"size":567,"mtime":1629035344668,"results":"34","hashOfConfig":"30"},{"size":1628,"mtime":1634888013865,"results":"35","hashOfConfig":"30"},{"size":155,"mtime":1633055359674,"results":"36","hashOfConfig":"30"},{"size":288,"mtime":1629862528770,"results":"37","hashOfConfig":"30"},{"size":1894,"mtime":1633974871938,"results":"38","hashOfConfig":"30"},{"size":6168,"mtime":1634817469368,"results":"39","hashOfConfig":"30"},{"size":2948,"mtime":1634042008794,"results":"40","hashOfConfig":"30"},{"size":1976,"mtime":1633190535779,"results":"41","hashOfConfig":"30"},{"size":1415,"mtime":1634814214561,"results":"42","hashOfConfig":"30"},{"size":3738,"mtime":1633419468316,"results":"43","hashOfConfig":"30"},{"size":7514,"mtime":1634819913322,"results":"44","hashOfConfig":"30"},{"size":1055,"mtime":1633415847020,"results":"45","hashOfConfig":"30"},{"size":3459,"mtime":1634650080099,"results":"46","hashOfConfig":"30"},{"size":10169,"mtime":1634818560891,"results":"47","hashOfConfig":"30"},{"size":3117,"mtime":1633494140453,"results":"48","hashOfConfig":"30"},{"size":1663,"mtime":1633258758097,"results":"49","hashOfConfig":"30"},{"size":488,"mtime":1632792496004,"results":"50","hashOfConfig":"30"},{"size":3815,"mtime":1634808736837,"results":"51","hashOfConfig":"30"},{"size":15007,"mtime":1634810842872,"results":"52","hashOfConfig":"30"},{"size":4438,"mtime":1634799485926,"results":"53","hashOfConfig":"30"},{"size":4174,"mtime":1634829894209,"results":"54","hashOfConfig":"30"},{"size":1252,"mtime":1634058218205,"results":"55","hashOfConfig":"30"},{"size":1949,"mtime":1634019253075,"results":"56","hashOfConfig":"30"},{"size":2559,"mtime":1634015095118,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"pmbwvm",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"60"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"60"},"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\index.js",[],["136","137"],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Login.js",["138","139","140","141"],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Signup.js",[],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Title_div.js",[],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Main_page\\Mainpage.js",["142","143","144"],"import './Mainpage.css';\r\nimport React, {useState,useContext,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {UserContext} from '../UserContext.js'\r\nimport Rooms from './Rooms.js';\r\nimport {Link, useParams, useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Mainpage() {\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const history=useHistory()\r\n  const [rooms,setrooms] =useState([])\r\n\r\n  useEffect(()=>{\r\n    axios.get('http://localhost:5500/search_rooms').then((res)=>{\r\n        console.log(res)\r\n        setrooms(res.data)})\r\n  },[])\r\n  function create_new_game(){\r\n    console.log(\"NEW GAME\")\r\n    axios.post('http://localhost:5500/new_game',{username:profile.username}).then((res)=>{\r\n    history.push('/Gamespage/'+res.data) })\r\n  }\r\n\r\nfunction random_room(){\r\n  let room_selected=rooms[rooms.length*Math.random()<<0].Room_id\r\n  axios.put('http://localhost:5500/join_room',{username:profile.username,room_id:room_selected}).then(history.push('/Gamespage/'+room_selected))\r\n}\r\n\r\nfunction logout(){\r\n  setprofile(null)\r\n  history.push(\"/\")\r\n}\r\n\r\n    return (\r\n      <div className=\"main\">\r\n            <div className=\"main-section\">\r\n                <div id=\"menu\">\r\n                  <div className=\"pageitem\" onClick={create_new_game}>New Game</div>\r\n                  <div className=\"pageitem\" onClick={random_room}>Random Room</div>\r\n                  <Rooms history={history}/>\r\n                  <div className=\"pageitem\" onClick={logout}>Logout</div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\n  export default Mainpage;\r\n  ","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\UserContext.js",[],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Header.js",["145"],"import React, {useContext} from 'react';\r\nimport {UserContext} from './UserContext.js'\r\n\r\nfunction Header(){\r\n    const {profile,setprofile}=useContext(UserContext)\r\n\r\n    return (<div className=\"Header\">\r\n        <p>{profile.username}</p>\r\n    </div>   \r\n  )\r\n}\r\n\r\nexport default Header;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\App.js",[],"C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Gamespage.js",["146","147","148","149","150","151","152","153","154","155","156","157","158"],"import './Gamespage.css';\r\nimport React, {useState,useContext,useEffect,useRef,useMemo} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {SocketContext, UserContext} from '../UserContext.js';\r\nimport {Player} from './Player.js'\r\nimport {Link,useParams} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Joingame from './Main_game/Joingame.js'\r\nimport Action_bar from './Action/Actionbar.js'\r\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js'\r\nimport Main_game from './Main_game/Main_game.js' \r\nimport Sachet, { analytics_data } from './Sachet.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from './GamesContext.js'\r\nimport {Blocks} from './Main_game/Board.js'\r\n\r\nfunction Gamespage() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const websocket=useContext(SocketContext)\r\n    const [boardState,setboardState]=useState(new Blocks())\r\n    const [renderAction,setrenderAction]=useState(false)\r\n    const [gameState,setgameState]=useState({\r\n      room_id:useParams().room_id,\r\n      gamestarted:false,\r\n      turn_num:0,\r\n      player_turn:0,\r\n      player_num:0, \r\n      your_index:0,\r\n      skip_indexes:[],\r\n      challenge_index:undefined,\r\n      challenge_words:[],\r\n      endgame:false,\r\n      just_added:[]\r\n    })\r\n    const [playerlistState,setplayerlistState]=useState([])\r\n    const [analyticsdataState,setanalyticsdataState]=useState(analytics_data)\r\n    const [sachetState,setsachetState]=useState(new Sachet())\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    const sachetstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    sachetstateRef.current=sachetState\r\n    useEffect(()=>{\r\n      \r\n      axios.get('http://localhost:5500/get_added_players',{params: {room_id:gameState.room_id,username:profile.username}}).then((res)=>{\r\n        let sachet={...sachetstateRef.current}\r\n        Object.setPrototypeOf( sachet,sachetstateRef.current )\r\n\r\n        let temp_player_list=[]\r\n        for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].Username)\r\n          temp_player.draw_by_tiles(res.data[i].Tiles)\r\n          sachet.remove_by_tiles(res.data[i].Tiles)\r\n          temp_player_list.push(temp_player)\r\n        }\r\n\r\n        const your_player=new Player(profile.username,true)\r\n        let drawn_tiles=your_player.draw(sachet)\r\n        your_player.tiles=drawn_tiles\r\n        axios.put(\"http://localhost:5500/add_player\",{\r\n          username:your_player.username,\r\n          tiles:drawn_tiles,\r\n          room_id:gamestateRef.current.room_id\r\n        })\r\n        temp_player_list.push(your_player)\r\n        \r\n        \r\n        websocket.current.emit(\"emit_new_player\",{\r\n          username:your_player.username,\r\n          tiles:your_player.tiles,\r\n          room_id:gamestateRef.current.room_id})\r\n        \r\n        websocket.current.on(\"incoming_new_player\", (res)=>{\r\n          let sachet2={...sachetstateRef}\r\n          Object.setPrototypeOf( sachet2,sachetstateRef.current )\r\n          console.log(\"INCOMING NEW PLAYER\",res)\r\n          let temp_player=new Player(res.username)\r\n          temp_player.draw_by_tiles(res.tiles)\r\n          sachet2.remove_by_tiles(res.tiles)\r\n          \r\n          let lis=[...playerlistRef.current,temp_player]\r\n          console.log(\"TEMP PLAYER\",lis)\r\n\r\n          setplayerlistState(lis)\r\n          setgameState(prevgamestate=>({...prevgamestate,\r\n            player_num: prevgamestate.player_num+1\r\n          }))\r\n          setsachetState(sachet2)\r\n        })\r\n        \r\n        setgameState(prevgamestate=>({...prevgamestate,\r\n          player_num: prevgamestate.player_num+temp_player_list.length,\r\n          your_index:temp_player_list.length-1,\r\n          player_turn:prevgamestate.turn_num%(prevgamestate.player_num+temp_player_list.length)\r\n        }))\r\n        \r\n        setplayerlistState(prevplayerlist=>[...prevplayerlist,...temp_player_list])\r\n        setsachetState(sachet)\r\n        setrenderAction(true)\r\n        \r\n    \r\n    })},[])\r\n\r\n    useEffect(()=>{\r\n      setgameState( prevgamestate=>({...prevgamestate,\r\n      player_turn:prevgamestate.turn_num%prevgamestate.player_num\r\n    }))}\r\n    ,[,gameState.turn_num])\r\n    \r\n    useEffect(()=>{\r\n      if (gamestateRef.current.skip_indexes.includes(gamestateRef.current.player_turn)){\r\n        setgameState(prevgamestate=>({...prevgamestate,\r\n          turn_num:prevgamestate.turn_num+1,\r\n          skip_indexes:prevgamestate.skip_indexes.filter(index=>index!=prevgamestate.player_turn)\r\n        }))\r\n      }else{\r\n      setplayerlistState(prevplayerlist=>{\r\n        let newplayerlist=[...prevplayerlist]\r\n        for (let i=0;i<newplayerlist.length;i++){\r\n          (i==gameState.player_turn) ? newplayerlist[i].active=true : newplayerlist[i].active=false\r\n        }\r\n        return newplayerlist\r\n    })}}\r\n    ,[gamestateRef.current.player_turn])\r\n\r\n    \r\n    \r\n      return (     \r\n        <div className=\"Games_page\">\r\n            <Joingame/>\r\n            <SachetContext.Provider value={{sachetState,setsachetState}}>\r\n              <AnalyticsDataContext.Provider value={{analyticsdataState,setanalyticsdataState}}>\r\n                <GamesContext.Provider value={{gameState,setgameState}}>\r\n                  <PlayerListContext.Provider value={{playerlistState,setplayerlistState}}>\r\n                    <BlocksContext.Provider value={{boardState,setboardState}}>\r\n                      <div className=\"Main_divider\">\r\n                        <Alphabet_analytics />\r\n                        <Main_game />\r\n                        {renderAction && <Action_bar />}\r\n                      </div> \r\n                    </BlocksContext.Provider>\r\n                  </PlayerListContext.Provider>   \r\n                </GamesContext.Provider>   \r\n              </AnalyticsDataContext.Provider>  \r\n              </SachetContext.Provider>                \r\n        </div>\r\n      );\r\n  }\r\n\r\n  \r\nexport default Gamespage;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Main_page\\Rooms.js",["159","160"],"import React, {useState,useContext,useRef,useEffect} from 'react';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios';\r\nimport {UserContext} from '../UserContext.js';\r\nimport './Rooms.css'\r\nimport './Mainpage.css'\r\nimport Draggable from 'react-draggable';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\nfunction Rooms(prop) {\r\n    const [room_modal_open,set_room_modal_open] = useState(false)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const [rooms,setrooms] =useState([])\r\n    let [room_selected,setroom_selected] =useState('')\r\n    const [fresh,setfresh] =useState(true)\r\n    let room_focus =useRef()\r\n    \r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5500/search_rooms').then((res)=>{\r\n            console.log(res)\r\n            setrooms(res.data)})\r\n    },[fresh])\r\n\r\n    function room_select(server_element){\r\n        if (room_focus.current) \r\n          room_focus.current.style.backgroundColor=\"white\"\r\n        room_focus.current = server_element.target\r\n        setroom_selected(room_focus.current.innerHTML)\r\n       \r\n        room_focus.current.style.backgroundColor=\"green\"       \r\n    }\r\n\r\n    function join_room(){\r\n        if (room_selected){\r\n            axios.put('http://localhost:5500/join_room',{username:profile.username,room_id:room_selected}).then(prop.history.push('/Gamespage/'+room_selected))\r\n                    \r\n        }else{\r\n            alert(\"Please select a room to join first!\")\r\n        }\r\n    }\r\n\r\n      return (\r\n        <div>\r\n        <div className=\"pageitem\" onClick={()=> set_room_modal_open(true)}> Join server </div>\r\n        \r\n        <Modal \r\n            \r\n            style={customStyles}\r\n            isOpen={room_modal_open}\r\n            shouldCloseOnOverlayClick={false}\r\n            ariaHideApp={false}\r\n            onRequestClose={()=>set_room_modal_open(false)\r\n            \r\n            }>\r\n            \r\n            <div className=\"Room_container\">\r\n                <div onClick={()=>set_room_modal_open(false)} className=\"close_modal\" title=\"Close Modal\">&times;</div>\r\n                <div className=\"Room_holder\">\r\n                    {rooms.map((room,pos)=>(\r\n                        <div className=\"room\" key={pos} onClick={(e)=>room_select(e)}>{room.Room_id}</div>\r\n                    ))} \r\n                </div>\r\n                <button type=\"button\" className=\"refreshbtn\" onClick={()=>{setfresh(!fresh)}}>Refresh</button> \r\n                <button type=\"submit\" className=\"joinbtn\" onClick={join_room}>Join Room</button> \r\n                <button type=\"button\" className=\"cancelbtn mainpage\" onClick={()=>set_room_modal_open(false)}>Cancel</button>   \r\n            </div>\r\n            \r\n        </Modal>\r\n        \r\n        </div>\r\n      );\r\n  }\r\n    \r\n    export default Rooms;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Joingame.js",["161","162","163","164"],"import {UserContext,SocketContext} from '../../UserContext.js'\r\nimport io from 'socket.io-client'\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction usePrevious(value) {\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = useRef();\r\n  \r\n    // Store current value in ref\r\n    useEffect(() => {\r\n      if (value.length){\r\n        ref.current = value\r\n      }else{\r\n        ref.current = [1]\r\n        ref.current.pop()\r\n        \r\n        \r\n      }\r\n      ;\r\n    }, [value]); // Only re-run if value changes\r\n    \r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n  }\r\n\r\nfunction Joingame() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const [other_player,set_other_player] = useState([])\r\n    const room_id=useParams().room_id\r\n    let prev_other_player = usePrevious(other_player);\r\n    const websocket=useContext(SocketContext)\r\n\r\n\r\n    useEffect(() => {\r\n        websocket.current.emit(\"emit_join_game\",profile.username,room_id)\r\n        websocket.current.on(\"join_game\", username=>{set_other_player(oldArray => [...oldArray,username + \" has joined the game\"])})\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n      \r\n        if(prev_other_player){\r\n        if (other_player.length > prev_other_player.length) {\r\n          setTimeout(() => {\r\n            set_other_player(prevActions => (\r\n              // Filter out the item with the matching index\r\n              prevActions.filter((value, i) => i !== 0)))\r\n          }, 3000);\r\n        }}\r\n      }, [other_player]);\r\n    \r\n    if(other_player){\r\n      return (\r\n        <div className=\"Joingame\">\r\n              {other_player.map((Sentence)=><span>{Sentence}</span>)}              \r\n        </div>\r\n      )}else{return(null)}\r\n  }\r\n\r\nexport default Joingame;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Player.js",["165"],"\r\nclass Player{\r\n    constructor(username,yours=false){\r\n      this.username=username;\r\n      this.score=0;\r\n      this.tiles=[];\r\n      this.delete_list=[]\r\n      this.active=false\r\n      this.delete_active=false;\r\n      this.challenge_active=false;   \r\n      this.yours=yours\r\n    }\r\n  \r\n    draw(sachet){\r\n        let chosen_tile_list=[]\r\n\r\n        for (let i=this.tiles.length;i<7 ;i++){\r\n            let index=sachet.tiles.length*Math.random()<<0\r\n            chosen_tile_list.push(sachet.tiles[index])\r\n            sachet.tiles.splice(index,1)\r\n            if(this.yours){\r\n                chosen_tile_list[chosen_tile_list.length-1].canDrag=true\r\n                chosen_tile_list[chosen_tile_list.length-1].canDrop=true\r\n                chosen_tile_list[chosen_tile_list.length-1].container_index=i\r\n                \r\n            }\r\n            if(sachet.tiles.length==0) {break}      \r\n        } \r\n      \r\n        return chosen_tile_list \r\n    }\r\n\r\n    draw_by_tiles(drawn_tiles){\r\n        \r\n            for(let i =0;i<drawn_tiles.length;i++){\r\n                if(!this.yours){\r\n                drawn_tiles[i].canDrag=false\r\n                drawn_tiles[i].canDrop=false\r\n                }else{\r\n                drawn_tiles[i].canDrag=true\r\n                drawn_tiles[i].canDrop=true\r\n            }\r\n        }\r\n        this.tiles=this.tiles.concat(drawn_tiles)\r\n        \r\n    }\r\n  \r\n  }\r\n\r\n  export {Player}","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Actionbar.js",["166","167","168","169","170","171","172","173"],"import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport Challenge_status from \"./Challenge_status.js\";\r\nimport Draw_button from \"./Draw_button.js\";\r\nimport Score_button from \"./Score_button.js\";\r\n\r\nfunction Action_bar() {\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const {analyticsdataState,setanalyticsdataState}=useContext(AnalyticsDataContext)\r\n  const {sachetState,setsachetState}=useContext(SachetContext)  \r\n  const websocket=useContext(SocketContext) \r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  const sachetstateRef=useRef(null);\r\n  const analyticsdataRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n  sachetstateRef.current=sachetState\r\n  analyticsdataRef.current=analyticsdataState\r\n  \r\n  function next_turn(updated_sachet,challenged_words=[],challenge_index=undefined){\r\n    let newanalyticsdata=[...analyticsdataRef.current];\r\n      let analytics_index;\r\n      let just_added_list=gamestateRef.current.just_added;\r\n      for (let index of just_added_list){\r\n        analytics_index=newanalyticsdata.findIndex(data=>{\r\n          return data.alphabet==boardstateRef.current.blocks[index].content.alphabet;})\r\n\r\n        if(newanalyticsdata[analytics_index].num==1) { newanalyticsdata.splice(analytics_index,1)}else{newanalyticsdata[analytics_index].num-=1}\r\n      }\r\n    setboardState((prevboardState=>{\r\n      let tempboardState={...prevboardState}\r\n      gamestateRef.current.just_added.forEach(index=>{\r\n          tempboardState.blocks[index].content.just_added=false\r\n          tempboardState.blocks[index].content.challenge=true\r\n          tempboardState.blocks[index].content.active=false\r\n          tempboardState.blocks[index].content.canDrag=false\r\n          tempboardState.blocks[index].content.canDrop=false\r\n          tempboardState.blocks[index].content.index=null\r\n      })\r\n      return tempboardState\r\n  }))\r\n    setanalyticsdataState(newanalyticsdata)\r\n    setgameState((prevgameState=>({...prevgameState,\r\n      turn_num:prevgameState.turn_num+1, \r\n      challenge_words:challenged_words,\r\n      challenge_index:challenge_index,\r\n      just_added:[]     \r\n  }))) \r\n    setsachetState(updated_sachet)\r\n  }\r\n  function fail_return_state(player_turn,return_tiles,just_added){\r\n    setplayerlistState((prevplayerlistState=>{\r\n      let newplayerlistState=[...prevplayerlistState]\r\n      newplayerlistState[player_turn].tiles=newplayerlistState[player_turn].tiles.concat(return_tiles)\r\n      return newplayerlistState\r\n    }))\r\n    setboardState((prevboardState=>{\r\n      let newboardState={...prevboardState}\r\n      just_added.forEach(index=>{\r\n        newboardState.blocks[index].content=null\r\n      })\r\n      return newboardState\r\n    }))\r\n    setgameState((prevgameState=>({...prevgameState,\r\n      just_added:[]     \r\n  }))) \r\n  }\r\n\r\n  useEffect(()=>{\r\n    websocket.current.on(\"fail_return\",(socket_out)=>{\r\n      fail_return_state(socket_out.player_turn,socket_out.return_tiles,socket_out.just_added)\r\n  })},[])\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Challenge_status />\r\n    <div className=\"Action_bar\">\r\n      <Score_button next_funct={next_turn} fail_return_funct={fail_return_state}/>\r\n      <Draw_button next_funct={next_turn}/>   \r\n    </div>\r\n    </div>)\r\n     \r\n}\r\n\r\nexport default Action_bar;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Sachet.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React,{useContext,useEffect,useRef} from 'react';\r\nimport './Sachet.css';\r\nimport {Invisible_tile_context,GamesContext,PlayerListContext,BlocksContext,TileDropContext} from './GamesContext.js';\r\nimport {useDrag,useDrop} from 'react-dnd'\r\nimport { games_sachet } from './Gamespage';\r\nimport {SocketContext} from '../UserContext.js';\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\nconst alphabet_data = [[\"A\",9,1],[\"B\",2,3],[\"C\",2,3],[\"D\",4,2],[\"E\",12,1],[\"F\",2,4],[\"G\",3,2],\r\n                        [\"H\",2,4],[\"I\",9,1],[\"J\",1,8],[\"K\",1,5],[\"L\",4,1],[\"M\",2,3],[\"N\",6,1],\r\n                        [\"O\",8,1],[\"P\",2,3],[\"Q\",1,10],[\"R\",6,1],[\"S\",4,1],[\"T\",6,1],[\"U\",4,1],\r\n                        [\"V\",2,4],[\"W\",2,4],[\"X\",1,8],[\"Y\",2,4],[\"Z\",1,10],[\" \",2,0]]\r\n\r\nfunction Tile (values){\r\n    const {tile_visibility,set_tile_visibility}=useContext(Invisible_tile_context)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)   \r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const {board_container_state,container_container_state}=useContext(TileDropContext)\r\n    const websocket=useContext(SocketContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n\r\n    playerlistRef.current=playerlistState\r\n\r\n\r\n    const ref = useRef(null)\r\n   \r\n    const [{isDragging},drag]=useDrag({\r\n        type: (values.tile.active) ? \"active\":\"inactive\",\r\n        item:{\r\n            type:(values.tile.active) ? \"active\":\"inactive\",\r\n            id:values.tile.id,\r\n            container_index: values.tile.container_index,\r\n            board_index: values.tile.board_index\r\n        },\r\n        canDrag:()=>values.tile.canDrag,\r\n        collect: monitor => ({\r\n            isDragging: !! monitor.isDragging()\r\n        })\r\n    })\r\n    \r\n    const [,drop]=useDrop({\r\n        accept: [\"active\",\"inactive\"],\r\n        canDrop:()=>values.tile.canDrop,\r\n        drop(item, monitor) {\r\n            if (!ref.current || item.id==values.tile.id) {\r\n                return;\r\n            }\r\n            let dragIndex=item.container_index;\r\n            let hoverIndex = values.tile.container_index;\r\n\r\n            let drop_container=playerlistRef.current[gamestateRef.current.your_index].tiles;\r\n            let drag_container;\r\n            let drag_block;\r\n            let update_just_added;\r\n\r\n            let drag_coordinate;\r\n            let hover_coordinate;\r\n            let drag_tile;\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();            \r\n            const clientOffset = monitor.getClientOffset();\r\n            if(values.orientation==\"horizontal\"){\r\n                drag_coordinate=clientOffset.x;\r\n                hover_coordinate=hoverBoundingRect.left+hoverBoundingRect.width/2\r\n            }else{\r\n                drag_coordinate=clientOffset.y;\r\n                hover_coordinate=hoverBoundingRect.top-hoverBoundingRect.height/2\r\n            }\r\n            if(item.container_index || item.container_index==0){\r\n                let hoverTile=playerlistRef.current[gamestateRef.current.your_index].tiles[hoverIndex]\r\n                drag_tile=playerlistRef.current[gamestateRef.current.your_index].tiles[dragIndex]\r\n                \r\n                drop_container.splice(dragIndex,1)\r\n                hoverIndex=drop_container.findIndex(tile=>tile.id==hoverTile.id)\r\n                \r\n                if(drag_coordinate<hover_coordinate){\r\n                    drop_container.splice(hoverIndex,0,drag_tile)\r\n                }else{\r\n                    drop_container.splice(hoverIndex+1,0,drag_tile)\r\n                }\r\n\r\n                for (let i=0;i<drop_container.length;i++){drop_container[i].container_index=i}\r\n                container_container_state(gamestateRef.current.your_index,drop_container)\r\n                \r\n            }else{\r\n                drag_tile=boardstateRef.current.blocks[item.board_index].content\r\n\r\n                \r\n\r\n                if(drag_tile.score==0){drag_tile.alphabet=\" \"};\r\n                drag_tile.canDrop=true;\r\n                drag_tile.placed=false\r\n                drag_tile.just_added=false;\r\n                drag_tile.board_index=undefined;\r\n\r\n                drag_block=boardstateRef.current.blocks[item.board_index]\r\n                drag_block.content=null\r\n\r\n                if(drag_coordinate<hover_coordinate){\r\n                    drop_container.splice(hoverIndex,0,drag_tile)\r\n                }else{\r\n                    drop_container.splice(hoverIndex+1,0,drag_tile)\r\n                }\r\n                for (let i=hoverIndex;i<drop_container.length;i++){drop_container[i].container_index=i}\r\n                update_just_added=gamestateRef.current.just_added.filter(index=>index!=item.board_index)\r\n                board_container_state(gamestateRef.current.your_index,drag_block,drop_container,update_just_added)\r\n                \r\n            }\r\n            let tempdropcontainer=_.cloneDeep(drop_container)\r\n\r\n            for (let i=0;i<tempdropcontainer.length;i++){\r\n                tempdropcontainer[i].canDrag=false\r\n                tempdropcontainer[i].canDrop=false\r\n            }\r\n            websocket.current.emit(\"emit_drop_container\",{\r\n                room_id:gamestateRef.current.room_id,\r\n                player_index:gamestateRef.current.your_index,\r\n                drag_block:(item.board_index==0 || item.board_index) ? drag_block : item.board_index,\r\n                drop_container:tempdropcontainer,\r\n                just_added:(item.board_index==0 || item.board_index) ? update_just_added: item.board_index\r\n            })\r\n        },\r\n    })\r\n    \r\n    let tile_name=\"game_tile\"\r\n    if(values.tile.placed){tile_name = tile_name + \" placed\"}\r\n    const content_style={visibility:tile_visibility}\r\n    const dragstyle={opacity:(isDragging) ? 0.5 : 1}\r\n    drop(drag(ref))\r\n    return(\r\n        <div className={tile_name} ref={ref} style={dragstyle}>\r\n        <p style={content_style}>{values.tile.alphabet}</p>\r\n        <p style={content_style}>{values.tile.score}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Sachet{\r\n    constructor(){\r\n        this.tiles=[]\r\n        this.initialize()\r\n    }\r\n    initialize(){\r\n        let tile_id=0\r\n        for (let i=0;i<alphabet_data.length;i++){\r\n            for (let j=0;j<alphabet_data[i][1];j++){\r\n                this.tiles.push({\r\n                    alphabet:alphabet_data[i][0],\r\n                    score:alphabet_data[i][2],\r\n                    id:tile_id,\r\n                    placed:false,\r\n                    just_added:false,\r\n                    challenge:false,\r\n                    active:true,\r\n                    canDrag:false,\r\n                    canDrop:false,\r\n                    container_index:undefined,\r\n                    board_index:undefined\r\n                }) \r\n                tile_id+=1 \r\n            } \r\n        }\r\n    }\r\n    remove_by_tiles(tiles){    \r\n        this.tiles=this.tiles.filter(function(e) {return this.findIndex(tile=>tile.id==e.id) < 0;},tiles)\r\n    }\r\n    add_by_tiles(tiles){\r\n        this.tiles=this.tiles.concat(tiles)\r\n    }\r\n} \r\nconst analytics_data = []\r\nfor (let i=0;i<alphabet_data.length;i++){\r\n    analytics_data.push({alphabet:alphabet_data[i][0],num:alphabet_data[i][1]})\r\n}\r\nexport {analytics_data,Tile}\r\n\r\nexport default Sachet;\r\n\r\n","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Alphabet_analytics\\Alphabet_analytics.js",["190","191"],"import {analytics_data} from '../Sachet.js'\r\nimport React,{useRef,useContext} from 'react';\r\nimport './Alphabet_analytics.css'\r\nimport { AnalyticsDataContext } from '../GamesContext.js';\r\n\r\nfunction Alphabet_analytics(){\r\n    const {analyticsdataState,setanalyticsdataState}=useContext(AnalyticsDataContext)\r\n    const analyticsdataRef=useRef(null);\r\n    analyticsdataRef.current=analyticsdataState\r\n\r\n    const analytics_style={\r\n        display:\"grid\",\r\n        gridTemplateColumns:\"repeat(2,1fr)\",\r\n        gridTemplateRows:\"repeat(\"+analyticsdataRef.length/2+\",1fr)\",\r\n        gridColumn:\"1\",\r\n        gridRow:\"1\",\r\n        height:\"95%\",\r\n        width:\"100%\",\r\n        alignItems: \"center\",\r\n        justifyItems: \"center\",\r\n      }\r\n    \r\n    return(<div className=\"analytics_container\" style={analytics_style}>\r\n        {analyticsdataRef.current.map((alphabet_data,pos)=>(\r\n            <div className=\"remainder_holder\" key={pos}>{alphabet_data.alphabet} - {alphabet_data.num}</div>\r\n        ))}\r\n    </div>)\r\n}\r\n\r\nexport default Alphabet_analytics","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Main_game.js",["192","193","194","195","196","197"],"import {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {Board} from './Board.js'\r\nimport Tile_container from './Tile_container.js'\r\nimport Tile_container_other from './Tile_container_other.js'\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {GamesContext,Invisible_tile_context,BlocksContext,PlayerListContext,TileDropContext} from '../GamesContext.js'\r\nimport './Main_game.css';\r\nimport {DndProvider} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\n\r\n\r\n\r\n\r\nfunction Main_game() {\r\n    const [tile_visibility,set_tile_visibility]=useState(\"visible\")\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const websocket=useContext(SocketContext)\r\n\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    function container_container_state(player_index,drop_container){\r\n      setplayerlistState((prevplayerlist=>{\r\n        let temp_playerlist=[...prevplayerlist]\r\n        temp_playerlist[player_index].tiles=drop_container\r\n        return temp_playerlist\r\n    }))\r\n    }\r\n\r\n    function board_container_state(player_index,drag_block,drop_container,just_added){\r\n      console.log(\"DRAG BLOCk\", drag_block)\r\n      setboardState((prevblockstate=>{\r\n        let tempblockstate={...prevblockstate}\r\n        tempblockstate.blocks[drag_block.index]=drag_block\r\n        return tempblockstate\r\n        }))\r\n\r\n\r\n      setplayerlistState((prevplayerlist=>{\r\n          let temp_playerlist=[...prevplayerlist]\r\n          temp_playerlist[player_index].tiles=[...drop_container]\r\n          console.log(\"TEMP PLAYER LIST\",temp_playerlist)\r\n          return temp_playerlist\r\n      }))\r\n      setgameState(prevgamestate=>({\r\n          ...prevgamestate,\r\n          just_added:just_added      \r\n        }))\r\n    }\r\n\r\n    useEffect(()=>{\r\n      websocket.current.on(\"drop_tile_container\",(socket_out)=>{\r\n          if(socket_out.drag_block){\r\n            console.log(\"DROP CoNTAINER\",socket_out.drop_container)\r\n            board_container_state(socket_out.player_index,socket_out.drag_block,socket_out.drop_container,socket_out.just_added)\r\n          }else{\r\n            container_container_state(socket_out.player_index,socket_out.drop_container)\r\n          } \r\n      })\r\n    },[])\r\n\r\n      return (\r\n        \r\n        <div className=\"main_game\">\r\n          <TileDropContext.Provider value={{board_container_state,container_container_state}}>\r\n            <Invisible_tile_context.Provider value={{tile_visibility,set_tile_visibility}}>\r\n                <DndProvider backend={HTML5Backend}>\r\n                  {playerlistState.map((Player,pos)=>(\r\n                  (Player.username==profile.username)?\r\n                  <Tile_container player_num={pos} key={pos}/>:\r\n                  <Tile_container_other player_num={pos} key={pos}/>))}\r\n                  <Board blocks_class={boardState}/>  \r\n                </DndProvider>\r\n            </Invisible_tile_context.Provider>    \r\n          </TileDropContext.Provider>                                   \r\n        </div>\r\n      );\r\n  }\r\n    \r\nexport default Main_game;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Board.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {useDrop} from 'react-dnd';\r\nimport './Board.css'\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js';\r\nimport {Tile} from '../Sachet.js'\r\nimport io from 'socket.io-client';\r\nimport _ from \"lodash\";\r\n\r\n\r\nconst block_type = {\r\n  dw:{className:\"bl dw\",innerHTML:\"Double Word Score\"},\r\n  tw:{className:\"bl tw\",innerHTML:\"Triple Word Score\"},\r\n  dl:{className:\"bl dl\",innerHTML:\"Double Letter Score\"},\r\n  tl:{className:\"bl tl\",innerHTML:\"Triple Letter Score\"},\r\n  st:{className:\"bl dw st\",innerHTML:\"\"},\r\n  default:{className:\"bl default\",innerHTML:\"\"},\r\n};\r\n\r\nfunction Block(values){ \r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)   \r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    \r\n    const [{isOver},drop] = useDrop(()=>({\r\n        accept: \"active\",\r\n        collect:monitor=>({\r\n            isOver:!!monitor.isOver(),\r\n        }),\r\n        canDrop: ()=> !values.block.content && gamestateRef.current.player_turn==gamestateRef.current.your_index ,\r\n        drop: (tile)=> addTile(tile),\r\n    })); \r\n    const dragOverstyle={\r\n        backgroundColor: isOver && \"grey\"\r\n    } \r\n    \r\n    const addTile=(tile_drag)=>{\r\n        let drag_block;\r\n        let drag_container;\r\n        let tempdragcontainer;\r\n        let drop_block=boardstateRef.current.blocks[values.block.index];\r\n        let update_just_added=gamestateRef.current.just_added;\r\n        if (tile_drag.container_index || tile_drag.container_index==0){\r\n            let tile=playerlistRef.current[gamestateRef.current.your_index].tiles[tile_drag.container_index]\r\n            if(tile.alphabet==\" \"){\r\n                \r\n                let wrong_input=true;\r\n                while(wrong_input){\r\n                    let alphabet=window.prompt(\"Please enter your desired alphabet\");\r\n                    if (alphabet.length == 1 && alphabet.toLowerCase() != alphabet.toUpperCase()){\r\n                        alphabet = alphabet.toUpperCase();\r\n                        tile.alphabet=alphabet\r\n                        wrong_input = false;\r\n                    }\r\n                }\r\n            }  \r\n            tile.placed=true\r\n            tile.just_added=true\r\n            tile.container_index=undefined\r\n            tile.board_index=values.block.index\r\n            tile.canDrop=false\r\n\r\n            \r\n            drop_block.content=tile\r\n            drag_container=playerlistRef.current[gamestateRef.current.your_index].tiles\r\n            drag_container.splice(tile_drag.container_index,1)\r\n            for (let i=0;i<drag_container.length;i++){drag_container[i].container_index=i}\r\n\r\n           update_just_added.push(values.block.index)\r\n           \r\n            values.container_board(drag_container,drop_block,update_just_added)\r\n            tempdragcontainer=_.cloneDeep(drag_container)\r\n\r\n            for (let i=0;i<tempdragcontainer.length;i++){\r\n                tempdragcontainer[i].canDrag=false\r\n                tempdragcontainer[i].canDrop=false\r\n        }\r\n        }else{\r\n            \r\n            drag_block=boardstateRef.current.blocks[tile_drag.board_index]\r\n            let tile=drag_block.content\r\n\r\n            tile.container_index=undefined\r\n            tile.board_index=values.block.index\r\n            drop_block.content=tile\r\n            drag_block.content=null\r\n\r\n            let initial_index=update_just_added.indexOf(drag_block.index)\r\n\r\n            update_just_added.splice(initial_index,1)\r\n            update_just_added.push(drop_block.index)\r\n\r\n            values.board_board(drag_block,drop_block,update_just_added)\r\n            \r\n        }\r\n        \r\n        websocket.current.emit(\"emit_drop_block\",{\r\n            room_id:gamestateRef.current.room_id,\r\n            drag_container:(tile_drag.container_index==0 || tile_drag.container_index)? tempdragcontainer : tile_drag.container_index,\r\n            drag_block:(tile_drag.board_index==0 || tile_drag.board_index) ? drag_block : tile_drag.board_index,\r\n            drop_block:drop_block,\r\n            just_added:update_just_added,\r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n    return(\r\n        <div className={block_type[values.block.type].className} ref={drop} style={dragOverstyle}>\r\n            {values.block.content &&  <Tile tile={values.block.content}/>}\r\n            {block_type[values.block.type].innerHTML}\r\n        </div>)   \r\n    \r\n}\r\n\r\n\r\n\r\nclass Blocks{\r\n    constructor(){\r\n        this.blocks=[]\r\n        this.row_length = 15;\r\n        this.column_length = 15;\r\n        this.tw_coordinate=['14,14','7,14','0,14','14,7','0,7','14,0','7,0','0,0']\r\n        this.dw_coordinate=[,'13,13','1,13','12,12','2,12','11,11','3,11','10,10',\r\n                '4,10','10,4','4,4','11,3','3,3','12,2','2,2','13,1','1,1']\r\n\r\n        this.dl_coordinate=['11,14', '3,14', '8,12', '6,12', '14,11', '7,11', '0,11', \r\n                '12,8', '8,8', '6,8', '2,8', '11,7', '3,7', '12,6', '8,6', '6,6', \r\n                '2,6', '14,3', '7,3', '0,3', '8,2', '6,2', '11,0', '3,0']\r\n\r\n\r\n        this.tl_coordinate=['9,13', '5,13', '13,9', '9,9', '5,9', '1,9', '13,5', '9,5',\r\n                  '5,5', '1,5', '9,1', '5,1']\r\n\r\n        this.st_coordinate=['7,7']\r\n        this.construct_blocks()\r\n    }\r\n    construct_blocks(){\r\n        let pos=0\r\n        for (let y=0 ; y<this.row_length ; ++y){  \r\n\r\n            for (let x=0 ; x<this.column_length ; ++x){\r\n                \r\n                let temp_coord=x.toString() + \",\" + y.toString();    \r\n                switch(temp_coord){\r\n                    case this.tw_coordinate[this.tw_coordinate.length-1]:\r\n                        this.blocks.push({type:\"tw\",content:null,index:pos,})       \r\n                        this.tw_coordinate.pop();\r\n                        break;\r\n                    case this.dw_coordinate[this.dw_coordinate.length-1]:\r\n                        this.blocks.push({type:\"dw\",content:null,index:pos})   \r\n                        this.dw_coordinate.pop();\r\n                        break;\r\n                    case this.dl_coordinate[this.dl_coordinate.length-1]:\r\n                        this.blocks.push({type:\"dl\",content:null,index:pos})   \r\n                        this.dl_coordinate.pop();\r\n                        break;\r\n                    case this.tl_coordinate[this.tl_coordinate.length-1]:\r\n                        this.blocks.push({type:\"tl\",content:null,index:pos})   \r\n                        this.tl_coordinate.pop();\r\n                        break;\r\n                    case this.st_coordinate[this.st_coordinate.length-1]:\r\n                        this.blocks.push({type:\"st\",content:null,index:pos})   \r\n                        this.st_coordinate.pop();\r\n                        break;\r\n                    default:\r\n                        this.blocks.push({type:\"default\",content:null,index:pos})   \r\n                        break;\r\n                } \r\n                pos+=1\r\n            }\r\n        }\r\n        delete this.tw_coordinate\r\n        delete this.dw_coordinate\r\n        delete this.dl_coordinate\r\n        delete this.tl_coordinate\r\n        delete this.st_coordinate\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction Board(values) {\r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const socket2=useRef()\r\n    socket2.current=io.connect(\"http://localhost:5500\")\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n\r\n    function container_board_state(drag_container,drop_block,just_added){\r\n      setboardState((prevblockstate=>{\r\n        let tempblockstate={...prevblockstate}\r\n        tempblockstate.blocks[drop_block.index]=drop_block\r\n        return tempblockstate\r\n        }))\r\n      setgameState(prevgamestate=>({\r\n          ...prevgamestate,\r\n          just_added:just_added,      \r\n      }))\r\n      setplayerlistState((prevplayerlist=>{\r\n          let temp_playerlist=[...prevplayerlist]\r\n          temp_playerlist[gamestateRef.current.player_turn].tiles=drag_container\r\n          return temp_playerlist\r\n      }))\r\n    }\r\n\r\n    function board_board_state(drag_block,drop_block,just_added){\r\n      setboardState((prevblockstate=>{\r\n        let tempblockstate={...prevblockstate}\r\n        tempblockstate.blocks[drag_block.index]=drag_block\r\n        tempblockstate.blocks[drop_block.index]=drop_block\r\n        return tempblockstate\r\n        }))\r\n      setgameState(prevgamestate=>({\r\n        ...prevgamestate,\r\n        just_added:just_added,      \r\n      }))\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        websocket.current.on(\"drop_tile_block\",(socket_out)=>{\r\n          console.log(\"SOCKET OUT DROP TILE BLOCK\",socket_out)\r\n          if(socket_out.drag_container){\r\n            container_board_state(socket_out.drag_container,socket_out.drop_block,socket_out.just_added)\r\n          }else{\r\n            board_board_state(socket_out.drag_block,socket_out.drop_block,socket_out.just_added)\r\n          } \r\n        })\r\n      \r\n    },[])\r\n\r\n    return (\r\n    <div className=\"board_holder\">\r\n    <div className=\"board\">\r\n        {values.blocks_class.blocks.map((block,pos)=>(\r\n    <Block block={block} \r\n           container_board={container_board_state} \r\n           board_board={board_board_state} \r\n           key={pos}/>\r\n    ))}\r\n    </div>\r\n    </div>)\r\n     \r\n  }\r\n\r\nexport {Board,Blocks}","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Tile_container.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React,{useContext,useState,useEffect,useRef} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\nimport Delete_logo from './Delete_logo.js'\r\nimport Challenge_button from './Challenge_button.js'\r\nimport {SocketContext, UserContext} from '../../UserContext.js';\r\n\r\n\r\nconst positions=[[2,1,\"row\",\"horizontal\"],[1,2,\"column\",\"vertical\"],[2,3,\"row\",\"horizontal\"],[3,2,\"column\",\"vertical\"]];\r\n\r\nfunction Tile_container(value) {\r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n\r\n    const container_name=\"tile_container \"+positions[value.player_num][3]\r\n    const containerstyle={\r\n      gridColumn:positions[value.player_num][0],\r\n      gridRow:positions[value.player_num][1],\r\n    }\r\n    const holderstyle={\r\n      display:\"flex\",\r\n      flexDirection:positions[value.player_num][2]\r\n    }\r\n    useEffect(()=>{\r\n      \r\n      let temp_playerlist=[...playerlistState]\r\n     \r\n      if(gamestateRef.current.player_turn==gamestateRef.current.your_index){\r\n        temp_playerlist[gamestateRef.current.your_index].active=true\r\n        temp_playerlist[gamestateRef.current.your_index].delete_active=true\r\n        temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile=>{tile.active=true})\r\n        setplayerlistState(temp_playerlist)\r\n      }else{\r\n        temp_playerlist[gamestateRef.current.your_index].active=false\r\n        temp_playerlist[gamestateRef.current.your_index].delete_active=false\r\n        temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile=>{tile.active=false})\r\n        setplayerlistState(temp_playerlist)\r\n      }\r\n    },[,gameState.player_turn])\r\n\r\n    \r\n    return (\r\n      \r\n      <div className={container_name} style={containerstyle}>\r\n          <div className=\"name_display\">{playerlistState[value.player_num].username}</div>   \r\n          <div className=\"score_display\">{playerlistState[value.player_num].score}</div> \r\n          <div className=\"tile_holder\" style={holderstyle}>\r\n              \r\n                {playerlistState[value.player_num].tiles.map((tile,pos)=>(\r\n                  <Tile tile={tile} orientation={positions[value.player_num][3]} key={pos}/>\r\n                ))}  \r\n              \r\n          </div>\r\n          <Challenge_button player_num={value.player_num}/>\r\n          <Delete_logo player_num={value.player_num}/>               \r\n      </div>\r\n    );\r\n    \r\n  }\r\n    \r\nexport default Tile_container;","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Tile_container_other.js",["230","231","232","233","234","235"],"import React, {useContext,useState} from 'react';\r\nimport './Tile_container.css'\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext,Invisible_tile_context,PlayerListContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\n\r\nconst positions=[[2,1,\"row\",\"horizontal\"],[1,2,\"column\",\"vertical\"],[2,3,\"row\",\"horizontal\"],[3,2,\"column\",\"vertical\"]];\r\n\r\nfunction Tile_container_other(value) {\r\n  const [tile_visibility,set_tile_visibility]=useState(\"hidden\")\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)  \r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const container_name=\"tile_container \"+positions[value.player_num][3]\r\n  const containerstyle={\r\n    gridColumn:positions[value.player_num][0],\r\n    gridRow:positions[value.player_num][1],\r\n  }\r\n  const holderstyle={\r\n    display:\"flex\",\r\n    flexDirection:positions[value.player_num][2]\r\n  }\r\n  \r\n\r\n  return (\r\n    \r\n    <div className={container_name} style={containerstyle}>\r\n        <div className=\"name_display\">{playerlistState[value.player_num].username}</div>   \r\n        <div className=\"score_display\">{playerlistState[value.player_num].score}</div> \r\n        <div className=\"tile_holder\" style={holderstyle}>  \r\n          <Invisible_tile_context.Provider value={{tile_visibility,set_tile_visibility}}>\r\n            {playerlistState[value.player_num].tiles.map((tile,pos)=>(\r\n            <Tile tile={tile} key={pos}/>\r\n            ))}        \r\n          </Invisible_tile_context.Provider>\r\n        </div>      \r\n    </div>\r\n  );\r\n  }\r\n\r\nexport default Tile_container_other","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\GamesContext.js",["236"],"import react,{createContext} from 'react';\r\n\r\nconst GamesContext=createContext(null);\r\nconst BlocksContext=createContext(null)\r\nconst PlayerListContext=createContext(null)\r\nconst Invisible_tile_context=createContext(null);\r\nconst AnalyticsDataContext=createContext(null);\r\nconst TileDropContext=createContext(null)\r\nconst SachetContext=createContext(null)\r\n\r\nexport {GamesContext,Invisible_tile_context,BlocksContext,PlayerListContext,AnalyticsDataContext,TileDropContext,SachetContext}\r\n","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Draw_button.js",["237","238","239","240","241","242","243","244","245"],"import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,SachetContext} from '../GamesContext.js'\r\nimport {games_sachet} from '../Gamespage.js'\r\nimport './Actionbar.css'\r\n\r\nfunction Draw_button(values){\r\n    const [drawActive,setdrawActive]=useState(false) \r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)   \r\n    const {sachetState,setsachetState}=useContext(SachetContext)   \r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const sachetstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    sachetstateRef.current=sachetState\r\n    \r\n    const drawstyle={opacity:(drawActive) ?  1: 0.5 }\r\n\r\n\r\n    function Draw(){\r\n      let sachet={...sachetstateRef.current}\r\n      Object.setPrototypeOf( sachet,sachetstateRef.current )\r\n      var drawn_tiles=playerlistRef.current[gamestateRef.current.player_turn].draw(sachet)\r\n      let return_tiles=playerlistRef.current[gamestateRef.current.player_turn].delete_list\r\n      for (let i=0;i<return_tiles.length;i++){\r\n        return_tiles[i].canDrop=false\r\n        return_tiles[i].canDrag=false\r\n        return_tiles[i].container_index=undefined\r\n        return_tiles[i].board_index=undefined\r\n        return_tiles[i].placed=false\r\n        return_tiles[i].just_added=false\r\n      }\r\n      console.log(\"DRAWN TILES\",drawn_tiles)\r\n      \r\n      sachet.add_by_tiles(return_tiles)\r\n      let tempdeletelist=playerlistRef.current[gamestateRef.current.player_turn].delete_list\r\n      setplayerlistState((prevplayerlist=>{\r\n        let newplayerlist=[...prevplayerlist]\r\n        newplayerlist[gamestateRef.current.player_turn].tiles=newplayerlist[gamestateRef.current.player_turn].tiles.concat(drawn_tiles)\r\n        newplayerlist[gamestateRef.current.player_turn].delete_list=[]\r\n        return newplayerlist\r\n      }))\r\n     \r\n      values.next_funct(sachet)\r\n      \r\n      websocket.current.emit(\"emit_draw\",{  \r\n        room_id:gamestateRef.current.room_id,\r\n        player_turn:gamestateRef.current.player_turn,\r\n        drawn_tiles:drawn_tiles,\r\n        return_tiles:tempdeletelist\r\n      })\r\n      }\r\n      useEffect(()=>{\r\n        console.log(\"WEBSOCKET ONE\",websocket.current)\r\n        \r\n        websocket.current.on(\"update_player_draw\",(socket_out)=>{\r\n          let sachet2={...sachetstateRef.current}\r\n          Object.setPrototypeOf( sachet2,sachetstateRef.current )\r\n          sachet2.add_by_tiles(socket_out.return_tiles)\r\n          sachet2.remove_by_tiles(socket_out.drawn_tiles)\r\n          setplayerlistState((prevplayerlist=>{\r\n            let newplayerlist=[...prevplayerlist]\r\n            newplayerlist[gamestateRef.current.player_turn].draw_by_tiles(socket_out.drawn_tiles)\r\n            newplayerlist[gamestateRef.current.player_turn].delete_list=[]\r\n            return newplayerlist\r\n          }))\r\n        values.next_funct(sachet2)\r\n      })},[])\r\n\r\n    useEffect(()=>{\r\n     \r\n        if(gamestateRef.current.player_turn==gamestateRef.current.your_index && \r\n          !gamestateRef.current.just_added.length && \r\n          playerlistState[gameState.your_index].delete_list.length){\r\n        \r\n          setdrawActive(true)\r\n        }else{\r\n         \r\n          setdrawActive(false)\r\n        }\r\n      },[,gameState,playerlistState])\r\n\r\n    return(\r\n        <div>\r\n            <button type=\"button\" className=\"draw_button gamesbtn\" style={drawstyle} onClick={Draw} disabled={!drawActive}>Draw</button> \r\n        </div>)\r\n}\r\n\r\nexport default Draw_button","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Score_button.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport sachet, { analytics_data } from '../Sachet.js';\r\nimport {games_sachet} from '../Gamespage.js'\r\nimport './Actionbar.css'\r\n\r\nfunction Score_button(values){\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const {analyticsdataState,setanalyticsdataState}=useContext(AnalyticsDataContext)\r\n  const {sachetState,setsachetState}=useContext(SachetContext)   \r\n  const websocket=useContext(SocketContext)\r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  const sachetstateRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n  sachetstateRef.current=sachetState\r\n  const [scoreActive,setscoreActive]=useState(false)\r\n  const scorestyle={opacity:(scoreActive) ? 1 : 0.5}\r\n    useEffect(()=>{ \r\n        if(gameState.player_turn==gameState.your_index && !playerlistState[gameState.your_index].delete_list.length && gamestateRef.current.just_added.length){\r\n          setscoreActive(true)\r\n        }else{\r\n          setscoreActive(false)\r\n        }\r\n      },[,gameState])\r\n    \r\n    function fail_return(player_turn){\r\n      let return_tiles=[]\r\n      for (let i=0;i<gamestateRef.current.just_added.length;i++){\r\n        return_tiles.push(boardstateRef.current.blocks[gamestateRef.current.just_added[i]].content)\r\n        return_tiles[i].just_added=false\r\n        return_tiles[i].placed=false\r\n        return_tiles[i].canDrop=true\r\n        return_tiles[i].container_index=playerlistRef.current[player_turn].tiles.length+i\r\n      }\r\n      websocket.current.emit(\"emit_fail_return\",{\r\n        return_tiles:return_tiles,\r\n        room_id:gamestateRef.current.room_id,\r\n        just_added:gamestateRef.current.just_added,\r\n        player_turn:gamestateRef.current.player_turn\r\n      })\r\n      values.fail_return_funct(gamestateRef.current.player_turn,return_tiles,gamestateRef.current.just_added)\r\n      \r\n    }\r\n    function tile_coordinate(index){\r\n      let row = Math.floor(index / boardstateRef.current.column_length)\r\n      let column=index%boardstateRef.current.column_length\r\n      return [row,column]\r\n    }\r\n    function tile_index(coordinate){\r\n      return coordinate[0]*boardstateRef.current.column_length+coordinate[1];\r\n    }\r\n    function check_board(coordinate){\r\n      if (coordinate[0]<0 || coordinate[0]>=boardstateRef.current.row_length || coordinate[1]<0 || coordinate[1]>=boardstateRef.current.column_length){\r\n        return false\r\n    }\r\n      let index=tile_index(coordinate)\r\n      if(boardstateRef.current.blocks[index].content){\r\n        if(boardstateRef.current.blocks[index].content.placed){return true}\r\n      }\r\n      return false\r\n\r\n    }\r\n\r\n    function check_validity(){\r\n      if (gamestateRef.current.turn_num==0){\r\n        let start_block=boardstateRef.current.blocks.find(block=>block.type==\"st\")\r\n        if(!start_block.content){\r\n          alert(\"Please place the tile on the start block.\")\r\n          fail_return(gamestateRef.current.player_turn)\r\n          return false\r\n        }\r\n      }else{\r\n        let attached=false;\r\n        for(let i=0;i<gamestateRef.current.just_added.length;i++){\r\n          let coor=tile_coordinate(gamestateRef.current.just_added[i])\r\n          let up,down,left,right;\r\n          up=down=left=right=coor;\r\n\r\n          up[0]=up[0]-1;\r\n          down[0]=down[0]+1;\r\n          left[1]=left[1]-1;\r\n          right[1]=right[1]+1;\r\n\r\n            if (check_board(up)||check_board(down)||check_board(left)||check_board(right)){\r\n                attached=true;\r\n                break;\r\n            }    \r\n        }\r\n        if (attached==false){\r\n          alert (\"Please place your tiles adjacent to an existing tile.\")\r\n          fail_return(gamestateRef.current.player_turn)\r\n          return false;\r\n        }\r\n      }\r\n      if(gamestateRef.current.just_added.length>1){\r\n        let first_coordinate=tile_coordinate(gamestateRef.current.just_added[0]);\r\n        let second_coordinate=tile_coordinate(gamestateRef.current.just_added[1]);\r\n\r\n        if (first_coordinate[0]==second_coordinate[0] ){\r\n          var direction =\"horizontal\";\r\n      } else if (first_coordinate[1]==second_coordinate[1]){\r\n          var direction =\"vertical\";\r\n      } else {\r\n          alert (\"Your sequence of tiles must either be in horizontal or vertical form, adjacent to each other.\")\r\n          fail_return(gamestateRef.current.player_turn)\r\n          return false;\r\n      }\r\n      for (let i =1 ; i<gamestateRef.current.just_added;i++){\r\n        if (direction==\"horizontal\"){\r\n             if ((first_coordinate[1]+1)!=second_coordinate[1] && first_coordinate[0]==second_coordinate[0]){\r\n                \r\n                let temp_second_coord=first_coordinate;\r\n                temp_second_coord[1]=temp_second_coord[1]+1;\r\n                while(temp_second_coord[1]<=second_coordinate[1]){\r\n                    if (!check_board(temp_second_coord)){\r\n                        alert(\"Please do not skip\");\r\n                        fail_return(gamestateRef.current.player_turn)\r\n                        return false;\r\n                        }\r\n                    temp_second_coord[1]=temp_second_coord[1]+1;\r\n                    }\r\n                    \r\n                }\r\n\r\n             else if(first_coordinate[0]!=second_coordinate[0]){\r\n                alert(\"Please place all in horizontal\")\r\n                fail_return(gamestateRef.current.player_turn)\r\n                return false;\r\n            } \r\n        } else if (direction==\"vertical\"){\r\n            if((first_coordinate[0]+1)!=second_coordinate[0] && first_coordinate[1]==second_coordinate[1]){\r\n                \r\n                let temp_second_coord=first_coordinate;\r\n                temp_second_coord[0]=temp_second_coord[0]+1;\r\n                while(temp_second_coord[0]<=second_coordinate[0]){\r\n                    if (!check_board(temp_second_coord)){\r\n                        alert(\"Please do not skip\");\r\n                        fail_return(gamestateRef.current.player_turn)\r\n                        return false;\r\n                        }\r\n                    temp_second_coord[0]=temp_second_coord[0]+1;\r\n                    }\r\n                    \r\n                }\r\n            } else if ((first_coordinate[1])!=second_coordinate[1]){\r\n                alert(\"Please place all in vertical\")\r\n                fail_return(gamestateRef.current.player_turn)\r\n                return false;\r\n            }\r\n        \r\n        \r\n        first_coordinate=second_coordinate;\r\n        if ((i+1)!=gamestateRef.current.just_added.length){\r\n            second_coordinate=tile_coordinate(gamestateRef.current.just_added[i+1])\r\n            }\r\n        }\r\n      }\r\n      return true\r\n    }\r\n\r\n    function vertical_words(new_tile,up,down){\r\n\r\n      let vertical_word_tile=[];\r\n      let prepend_up=false;\r\n  \r\n      if (check_board(up)){\r\n          prepend_up=true\r\n          vertical_word_tile.push([boardstateRef.current.blocks[new_tile]])\r\n              while(check_board(up)){\r\n                  vertical_word_tile[vertical_word_tile.length-1].unshift(boardstateRef.current.blocks[tile_index(up)])\r\n                  up[0]=up[0]-1;\r\n          }\r\n          \r\n      } \r\n      if (check_board(down)){\r\n          if (prepend_up==false){\r\n              vertical_word_tile.push([boardstateRef.current.blocks[new_tile]])}\r\n  \r\n          while(check_board(down)){\r\n              vertical_word_tile[vertical_word_tile.length-1].push(boardstateRef.current.blocks[tile_index(down)])\r\n              down[0]=down[0]+1;\r\n          }\r\n      }\r\n      return vertical_word_tile\r\n  }\r\n  function horizontal_words(new_tile,left,right){\r\n  \r\n      let horizontal_word_tile=[];\r\n      let prepend_left=false;\r\n      \r\n      if (check_board(left)) {\r\n          prepend_left=true\r\n          horizontal_word_tile.push([boardstateRef.current.blocks[new_tile]])\r\n          while(check_board(left)){\r\n              horizontal_word_tile[horizontal_word_tile.length-1].unshift(boardstateRef.current.blocks[tile_index(left)])\r\n              left[1]=left[1]-1;\r\n              }\r\n          }\r\n          \r\n      if (check_board(right)){\r\n  \r\n          if (prepend_left==false){\r\n          horizontal_word_tile.push([boardstateRef.current.blocks[new_tile]])}\r\n  \r\n          while(check_board(right)){\r\n              horizontal_word_tile[horizontal_word_tile.length-1].push(boardstateRef.current.blocks[tile_index(right)])\r\n              right[1]=right[1]+1;\r\n              }\r\n          }\r\n      return horizontal_word_tile\r\n          \r\n      }\r\n\r\n    function set_words_block(new_tiles){\r\n      let words=[];\r\n  \r\n      let coor=tile_coordinate(gamestateRef.current.just_added[0])\r\n      let up,down,left,right\r\n      up=coor.slice(0);\r\n      down=coor.slice(0);\r\n      left=coor.slice(0);\r\n      right=coor.slice(0);\r\n  \r\n      up[0]=up[0]-1;\r\n      down[0]=down[0]+1;\r\n      left[1]=left[1]-1;\r\n      right[1]=right[1]+1;\r\n      \r\n      if(new_tiles.length==1){      \r\n  \r\n          horizontal_words(gamestateRef.current.just_added[0],left,right).forEach(horizontal_word=>words.push(horizontal_word));\r\n          vertical_words(gamestateRef.current.just_added[0],up,down).forEach(vertical_word=>words.push(vertical_word));\r\n          \r\n      }else{\r\n       \r\n          if (tile_coordinate(gamestateRef.current.just_added[0])[0]==tile_coordinate(gamestateRef.current.just_added[1])[0]){\r\n              //horizontal\r\n              horizontal_words(gamestateRef.current.just_added[0],left,right).forEach(horizontal_word=>words.push(horizontal_word));\r\n              for (let i =0 ; i<new_tiles.length;i++){\r\n                  \r\n                  vertical_words(new_tiles[i],up,down).forEach(vertical_word=>words.push(vertical_word));\r\n          \r\n              }\r\n          }else{\r\n              //vertical\r\n              vertical_words(new_tiles[0],up,down).forEach(vertical_word=>words.push(vertical_word));\r\n              for (let i =0 ; i<new_tiles.length;i++){\r\n                  horizontal_words(new_tiles[i],left,right).forEach(horizontal_word=>words.push(horizontal_word));       \r\n              }\r\n          } \r\n          }\r\n  \r\n      return words\r\n  }\r\n\r\n  function new_block_score(new_block){\r\n    let new_block_s=0\r\n    let double_word=0;\r\n    let triple_word=0;\r\n    \r\n    if (new_block.type==\"dw\" || new_block.type==\"st\"){\r\n        new_block_s += new_block.content.score;\r\n        double_word += 1;\r\n    } else if (new_block.type==\"tw\"){\r\n        new_block_s += new_block.content.score;\r\n        triple_word += 1;\r\n    } else if (new_block.type==\"dl\"){\r\n        new_block_s += new_block.content.score*2\r\n    } else if (new_block.type==\"tl\"){\r\n        new_block_s += new_block.content.score*3\r\n    }else{\r\n        new_block_s += new_block.content.score\r\n    }\r\n    return [new_block_s,double_word,triple_word]\r\n}\r\nfunction old_block_score(old_block){  \r\n    let old_tile_s=0;\r\n    old_tile_s += old_block.content.score\r\n    return old_tile_s\r\n\r\n}\r\n\r\nfunction word_score(word_blocks){\r\n\r\n    let individual_word_score=0;\r\n    var double_word=0;\r\n    var triple_word=0;\r\n  \r\n    for (let z=0; z<word_blocks.length; z++){\r\n\r\n        if (word_blocks[z].content.just_added==true){\r\n            let scores=new_block_score(word_blocks[z])\r\n            individual_word_score+=scores[0];\r\n            double_word+=scores[1];\r\n            triple_word+=scores[2]\r\n        } else{\r\n            individual_word_score+=old_block_score(word_blocks[z]);\r\n        }}\r\n    \r\n    if (double_word!=0){\r\n        individual_word_score = individual_word_score * 2 * double_word;\r\n    }\r\n\r\n    if (triple_word!=0){\r\n        individual_word_score = individual_word_score * 3 * triple_word;\r\n    }\r\n\r\n    \r\n    return individual_word_score \r\n}\r\n\r\n  function additionalscore(words){\r\n  \r\n    let extra_score=0; \r\n    \r\n    for (let y=0;y<words.length;y++){\r\n        extra_score+=word_score(words[y])\r\n    }\r\n\r\n    if (gamestateRef.current.just_added.length==7){\r\n        extra_score+=50;\r\n    }  \r\n    return extra_score\r\n}\r\n\r\n    function Score(){\r\n      \r\n      if(check_validity()){\r\n          let words_block=set_words_block(gamestateRef.current.just_added)\r\n          let updated_score=playerlistRef.current[gamestateRef.current.player_turn].score+additionalscore(words_block);\r\n          let sachet={...sachetstateRef.current}\r\n          Object.setPrototypeOf( sachet,sachetstateRef.current )\r\n          let drawn_tiles=playerlistRef.current[gamestateRef.current.player_turn].draw(sachet)   \r\n\r\n          setplayerlistState(prevplayerlistState=>{\r\n            let newplayerlistState=[...prevplayerlistState]\r\n            newplayerlistState[gamestateRef.current.player_turn].score=updated_score\r\n            newplayerlistState[gamestateRef.current.player_turn].draw_by_tiles(drawn_tiles);\r\n            return newplayerlistState\r\n          })\r\n          let words_alphabet=[]\r\n          for (let i=0;i<words_block.length;i++){\r\n            words_alphabet.push([\"\"])\r\n            for(let y=0;y<words_block[i].length;y++){\r\n              words_alphabet[i]+=words_block[i][y].content.alphabet\r\n            }\r\n          }\r\n          values.next_funct(sachet,words_alphabet,gamestateRef.current.player_turn)\r\n          \r\n          websocket.current.emit(\"emit_updated_score\",{\r\n            room_id:gamestateRef.current.room_id,\r\n            player_turn:gamestateRef.current.player_turn,\r\n            score:updated_score,\r\n            challenge_words:words_alphabet,\r\n            challenge_index:gamestateRef.current.player_turn,\r\n            drawn_tiles:drawn_tiles})\r\n      }\r\n\r\n    }\r\n    useEffect(()=>{\r\n      websocket.current.on(\"update_player_score\",(socket_out)=>{\r\n        \r\n        let sachet2={...sachetstateRef.current}\r\n       \r\n        Object.setPrototypeOf( sachet2,sachetstateRef.current )\r\n        \r\n\r\n        sachet2.remove_by_tiles(socket_out.drawn_tiles)\r\n        setplayerlistState(prevplayerlistState=>{\r\n          let newplayerlistState=[...prevplayerlistState]\r\n          newplayerlistState[socket_out.player_turn].score=socket_out.score\r\n          newplayerlistState[gamestateRef.current.player_turn].draw_by_tiles(socket_out.drawn_tiles)\r\n          return newplayerlistState\r\n        })\r\n\r\n        values.next_funct(sachet2,socket_out.challenge_words,socket_out.challenge_index)\r\n      })\r\n    },[])\r\n    return(\r\n        <div>\r\n            <button type=\"button\" className=\"score_button gamesbtn\" style={scorestyle} onClick={Score} disabled={!scoreActive}>Score</button> \r\n        </div>)\r\n}\r\n\r\nexport default Score_button","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Delete_logo.js",["288","289","290","291","292","293","294","295","296","297","298","299","300","301"],"import React,{useContext,useState,useEffect,useRef} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\nimport {SocketContext, UserContext} from '../../UserContext.js';\r\nimport delete_logo from '../../UI_component/delete.png';\r\n\r\nfunction Delete_logo(value){\r\n  const websocket=useContext(SocketContext)\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const drawstyle={opacity:(playerlistState[value.player_num].delete_active) ?  1: 0.5 }\r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n\r\n    const [{isOver},drop] = useDrop(()=>({\r\n      accept: \"active\",\r\n      collect:monitor=>({\r\n          isOver:!!monitor.isOver(),\r\n      }),\r\n      canDrop: ()=>playerlistRef.current[gamestateRef.current.your_index].active,\r\n      drop: (tile)=> addDelete(tile),\r\n    })); \r\n    function container_delete_state(drag_container,delete_tile){\r\n      setplayerlistState(prevplayerlistState=>{\r\n        let newplayerlistState=[...prevplayerlistState]\r\n        newplayerlistState[gamestateRef.current.player_turn].tiles=drag_container\r\n        newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile)    \r\n        return newplayerlistState\r\n      })\r\n    }\r\n\r\n    function board_delete_state(drag_block,delete_tile){\r\n      setboardState(prevboardState=>{\r\n        let newboardState={...prevboardState}\r\n        newboardState.blocks[drag_block.index]=drag_block\r\n        return newboardState\r\n      })\r\n      setplayerlistState(prevplayerlistState=>{\r\n        let newplayerlistState=[...prevplayerlistState] \r\n        newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile) \r\n        return newplayerlistState\r\n      })\r\n      setgameState((prevgameState=>({...prevgameState,\r\n        just_added:prevgameState.just_added.filter(board_index=>board_index!=drag_block.index)    \r\n      }))) \r\n    }\r\n  \r\n      function addDelete(drop_tile){\r\n        let drag_block\r\n        let drag_container\r\n        let delete_tile\r\n        if (drop_tile.board_index) {\r\n          delete_tile=boardstateRef.current.blocks[drop_tile.board_index].content \r\n          delete_tile.container_index=undefined\r\n          delete_tile.board_index=undefined\r\n          delete_tile.placed=false\r\n          delete_tile.just_added=false\r\n          drag_block=boardstateRef.current.blocks[drop_tile.board_index]\r\n          drag_block.content=null\r\n        }else{\r\n          delete_tile=playerlistRef.current[gamestateRef.current.player_turn].tiles[drop_tile.container_index]\r\n          delete_tile.container_index=undefined\r\n          drag_container=playerlistRef.current[gamestateRef.current.player_turn].tiles.filter(tile=>tile.id!=drop_tile.id);\r\n          for (let i=0;i<drag_container.length;i++){drag_container[i].container_index=i}\r\n        }\r\n\r\n        websocket.current.emit(\"emit_delete_tile\",{\r\n          room_id:gamestateRef.current.room_id,\r\n          player_turn:gamestateRef.current.player_turn,\r\n          drag_block:(drop_tile.board_index==0 || drop_tile.board_index) ? drag_block : drop_tile.board_index,   \r\n          drag_container:(drop_tile.container_index==0 || drop_tile.container_index) ? drag_container : drop_tile.container_index,\r\n          delete_tile:delete_tile,\r\n        })\r\n      }\r\n      useEffect(()=>{\r\n        websocket.current.on(\"delete_tile\",(socket_out)=>{\r\n          console.log(socket_out)\r\n          if(socket_out.hasOwnProperty(\"drag_block\")){\r\n            board_delete_state(socket_out.drag_block,socket_out.delete_tile)\r\n          }else{\r\n            container_delete_state(socket_out.drag_container,socket_out.delete_tile)\r\n          } \r\n      })\r\n      },[])\r\n    \r\n      return(\r\n          <div>\r\n              <img src={delete_logo} ref={drop} className=\"delete_img\" visibility={drawstyle} />\r\n          </div>\r\n      )\r\n}\r\n\r\nexport default Delete_logo","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Main_game\\Challenge_button.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React,{useContext,useState,useEffect,useRef} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport axios from 'axios';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\nimport {SocketContext, UserContext} from '../../UserContext.js';\r\nimport _ from \"lodash\";\r\n\r\n\r\nfunction Challenge_button(value){\r\n\r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    const challengestyle={\r\n        opacity:(playerlistState[value.player_num].challenge_active) ?  1: 0.5 \r\n    }\r\n\r\n    function challenge(){\r\n        websocket.current.emit('emit_challenge_player',\r\n        {\r\n            room_id:gamestateRef.current.room_id,\r\n            challenger_username:playerlistRef.current[gamestateRef.current.your_index].username,\r\n            challenge_index:gamestateRef.current.challenge_index,\r\n            challenge_words:gamestateRef.current.challenge_words,\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        websocket.current.on(\"challenge_player\",(socket_out)=>{\r\n            let alert_string\r\n            if(socket_out.result.find(element=>element.result==false)){\r\n                alert_string=playerlistRef.current[gamestateRef.current.challenge_index].username +\" cannot play for the next turn. The following words are invalid: \\n\"\r\n                for (let false_word of socket_out.result){alert_string+= false_word.word+\"\\n\"}\r\n                alert(alert_string)\r\n                setgameState(prevgamestate=>({...prevgamestate,\r\n                    challenge_index:undefined,\r\n                    challenge_words:[],\r\n                    skip_indexes:[...prevgamestate.skip_indexes,prevgamestate.challenge_index]\r\n                }))\r\n            }else{\r\n                alert_string=\"Challenge attempted on \"+\r\n                            playerlistRef.current[gamestateRef.current.challenge_index].username +\" by \"+\r\n                            socket_out.challenger_username+\". All words placed by \"+\r\n                            playerlistRef.current[gamestateRef.current.challenge_index].username + \" are correct.\"\r\n                alert(alert_string)\r\n                setgameState(prevgamestate=>({...prevgamestate,\r\n                    challenge_index:undefined,\r\n                    challenge_words:[],\r\n                }))\r\n            }\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        let your_index_challenge = (gamestateRef.current.your_index==playerlistState.length-1) ? 0 :\r\n                                    gamestateRef.current.your_index+1\r\n        let temp_playerlist=[...playerlistRef.current]\r\n        console.log(\"CHANGE CHALLENGE STATE\",temp_playerlist)\r\n        if(gamestateRef.current.your_index!=gamestateRef.current.challenge_index && \r\n            (gamestateRef.current.challenge_index || gamestateRef.current.challenge_index==0)){ \r\n            temp_playerlist[gamestateRef.current.your_index].challenge_active=true\r\n            setplayerlistState(temp_playerlist)\r\n          }else{\r\n            temp_playerlist[gamestateRef.current.your_index].challenge_active=false\r\n            setplayerlistState(temp_playerlist)\r\n          }\r\n    },[,gameState])\r\n    \r\n    return(\r\n        <div>\r\n            <button type=\"button\" \r\n                    className=\"challengebtn gamesbtn\" \r\n                    onClick={challenge}\r\n                    style={challengestyle} \r\n                    disabled={!playerlistState[value.player_num].challenge_active} >\r\n            Challenge</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Challenge_button","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Games_page\\Action\\Challenge_status.js",["321","322","323","324","325","326","327","328","329","330","331","332","333"],"import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport Draw_button from \"./Draw_button.js\";\r\nimport Score_button from \"./Score_button.js\";\r\n\r\nfunction Faulty_word(value){\r\n\r\n  return(\r\n    <div>{value.word}</div>\r\n  )\r\n}\r\n\r\nfunction Challenge_status() {\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n\r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n\r\n  let challenged_username=(gamestateRef.current.challenge_index || gamestateRef.current.challenge_index==0)&&\r\n                            playerlistRef.current[gamestateRef.current.challenge_index].username\r\n\r\n  return (\r\n    <div className=\"Challenge_status\">\r\n      Challenged player: {challenged_username} <br />\r\n      Words placed: {gameState.challenge_words.map((word,index)=>(\r\n          <Faulty_word key={index} word={word} /> \r\n      ))}\r\n    </div>)\r\n     \r\n}\r\n\r\nexport default Challenge_status","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Forgotpassword.js",["334","335","336","337","338","339"],"import './Login.css';\r\nimport React, {useState, useContext} from 'react';\r\nimport {title,Titlerender} from \"./Title_div.js\"\r\nimport Signup from \"./Signup.js\"\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport {UserContext} from '../UserContext.js'\r\n\r\nfunction Forgotpassword(){\r\n  const [error,seterror]=useState(false)\r\n  let schema =Yup.object().shape({\r\n    email:Yup.string().email('Invalid email address'),\r\n  }) \r\n  const [values,setValues] =useState({email:'',})\r\n  const history=useHistory()\r\n\r\n  function handleChange(e){\r\n    const { name, value } = e.target;\r\n    setValues({[name]:value})\r\n  }\r\n    const handleforgotpassword = (e)=>{\r\n      e.preventDefault()\r\n\r\n        schema.isValid(values).then(function(valid){\r\n          if(valid){\r\n            seterror(false)\r\n            axios.post('http://localhost:5000/forgotpassword/forgot',values).then((res)=>{\r\n              console.log(res)\r\n              alert(\"An email with a reset token would be sent to your email if your email is already in our database.\")\r\n              history.push('/')})\r\n          }else{\r\n            seterror(true)\r\n          }\r\n      })\r\n    }\r\n\r\n    return(\r\n      <div className=\"main\">\r\n        <div className=\"main-section\">\r\n          <div className=\"login-form\">\r\n              <div className=\"log-content\">\r\n                <form onSubmit={handleforgotpassword}> \r\n                  <div className=\"Forgot_header\">Forgot Password</div>\r\n                  <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n                  {error ? (<div className=\"error\">Please use a valid email</div>) : null}\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </form>  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgotpassword","C:\\Users\\TzeHaoTay\\Desktop\\CS\\scrabble2\\frontend\\src\\Login_page\\Resetpassword.js",["340","341","342","343","344","345"],"import './Login.css';\r\nimport React, {useState, useContext,useEffect} from 'react';\r\nimport {title,Titlerender} from \"./Title_div.js\"\r\nimport Signup from \"./Signup.js\"\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nfunction Resetpassword(){\r\n    const [password,setpassword]=useState({password:\"\",repeatpassword:\"\"})\r\n    const [submitactive,setsubmitactive]=useState(false)\r\n    const userid=useParams().userid\r\n    const tokenid=useParams().token_id\r\n    const history=useHistory()\r\n    const submitstyle={\r\n        opacity:(submitactive) ?  1: 0.5 \r\n    }\r\n    let schema = Yup.object().shape({\r\n        password:Yup.string().min(6,\"Password is too short - should be 6 chars minimum.\").required('Password required'),\r\n        repeatpassword:Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required'),\r\n      });\r\n\r\n    function handlechange(e){\r\n        const { name, value } = e.target;\r\n        setpassword(prevpasswords=>({\r\n            ...prevpasswords,\r\n            [name]: value\r\n          }));\r\n        \r\n    }\r\n    useEffect(()=>{schema.isValid({password:password.password,repeatpassword:password.repeatpassword}).then(function(valid)\r\n        {\r\n            setsubmitactive(valid)\r\n        })\r\n    },[password])\r\n    \r\n    function handleresetpassword(e){\r\n        e.preventDefault();\r\n        let post_input={userid:userid,tokenid:tokenid,password:password.password}\r\n        axios.post('http://localhost:5000/forgotpassword/reset',post_input).then((res)=>{\r\n            alert(\"Your password has been reset. Please login with the new password\")    \r\n            history.push('/')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"main\">\r\n            <div className=\"main-section\">\r\n            <div className=\"login-form\">\r\n                <div className=\"log-content\">\r\n                    <form onSubmit={handleresetpassword}> \r\n                        <input type=\"password\" name=\"password\" id=\"resetpassword\" placeholder=\"Password\" onChange={handlechange} />\r\n                        <input type=\"password\" name=\"repeatpassword\" id=\"repeatresetpassword\" placeholder=\"Retype password\" onChange={handlechange} />\r\n                        <input type=\"submit\" value=\"Submit\" disabled={!submitactive} style={submitstyle}/>\r\n                    </form>  \r\n                    </div>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resetpassword",{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","severity":1,"message":"351","line":22,"column":10,"nodeType":"352","messageId":"353","endLine":22,"endColumn":17},{"ruleId":"350","severity":1,"message":"354","line":23,"column":10,"nodeType":"352","messageId":"353","endLine":23,"endColumn":15},{"ruleId":"350","severity":1,"message":"355","line":23,"column":17,"nodeType":"352","messageId":"353","endLine":23,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":63,"column":66,"nodeType":"358","messageId":"359","endLine":63,"endColumn":67,"fix":"360"},{"ruleId":"350","severity":1,"message":"361","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":13},{"ruleId":"350","severity":1,"message":"362","line":7,"column":9,"nodeType":"352","messageId":"353","endLine":7,"endColumn":13},{"ruleId":"350","severity":1,"message":"363","line":7,"column":15,"nodeType":"352","messageId":"353","endLine":7,"endColumn":24},{"ruleId":"350","severity":1,"message":"364","line":5,"column":20,"nodeType":"352","messageId":"353","endLine":5,"endColumn":30},{"ruleId":"350","severity":1,"message":"365","line":2,"column":53,"nodeType":"352","messageId":"353","endLine":2,"endColumn":60},{"ruleId":"350","severity":1,"message":"361","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":13},{"ruleId":"350","severity":1,"message":"362","line":7,"column":9,"nodeType":"352","messageId":"353","endLine":7,"endColumn":13},{"ruleId":"350","severity":1,"message":"366","line":8,"column":8,"nodeType":"352","messageId":"353","endLine":8,"endColumn":10},{"ruleId":"350","severity":1,"message":"364","line":18,"column":20,"nodeType":"352","messageId":"353","endLine":18,"endColumn":30},{"ruleId":"367","severity":1,"message":"368","line":105,"column":9,"nodeType":"369","endLine":105,"endColumn":11,"suggestions":"370"},{"ruleId":"371","severity":1,"message":"372","line":111,"column":6,"nodeType":"369","messageId":"373","endLine":111,"endColumn":27},{"ruleId":"374","severity":1,"message":"375","line":117,"column":70,"nodeType":"376","messageId":"377","endLine":117,"endColumn":72},{"ruleId":"374","severity":1,"message":"378","line":123,"column":13,"nodeType":"376","messageId":"377","endLine":123,"endColumn":15},{"ruleId":"367","severity":1,"message":"379","line":127,"column":6,"nodeType":"369","endLine":127,"endColumn":40,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":140,"column":25,"nodeType":"383","messageId":"384","endLine":140,"endColumn":47},{"ruleId":"381","severity":1,"message":"385","line":141,"column":25,"nodeType":"383","messageId":"384","endLine":141,"endColumn":38},{"ruleId":"381","severity":1,"message":"386","line":142,"column":42,"nodeType":"383","messageId":"384","endLine":142,"endColumn":56},{"ruleId":"350","severity":1,"message":"387","line":7,"column":8,"nodeType":"352","messageId":"353","endLine":7,"endColumn":17},{"ruleId":"350","severity":1,"message":"364","line":22,"column":20,"nodeType":"352","messageId":"353","endLine":22,"endColumn":30},{"ruleId":"350","severity":1,"message":"366","line":2,"column":8,"nodeType":"352","messageId":"353","endLine":2,"endColumn":10},{"ruleId":"350","severity":1,"message":"364","line":29,"column":20,"nodeType":"352","messageId":"353","endLine":29,"endColumn":30},{"ruleId":"367","severity":1,"message":"388","line":39,"column":7,"nodeType":"369","endLine":39,"endColumn":9,"suggestions":"389"},{"ruleId":"367","severity":1,"message":"390","line":51,"column":10,"nodeType":"369","endLine":51,"endColumn":24,"suggestions":"391"},{"ruleId":"374","severity":1,"message":"378","line":27,"column":35,"nodeType":"376","messageId":"377","endLine":27,"endColumn":37},{"ruleId":"350","severity":1,"message":"392","line":1,"column":16,"nodeType":"352","messageId":"353","endLine":1,"endColumn":24},{"ruleId":"350","severity":1,"message":"393","line":2,"column":9,"nodeType":"352","messageId":"353","endLine":2,"endColumn":20},{"ruleId":"374","severity":1,"message":"378","line":32,"column":31,"nodeType":"376","messageId":"377","endLine":32,"endColumn":33},{"ruleId":"374","severity":1,"message":"378","line":34,"column":49,"nodeType":"376","messageId":"377","endLine":34,"endColumn":51},{"ruleId":"367","severity":1,"message":"394","line":78,"column":7,"nodeType":"369","endLine":78,"endColumn":9,"suggestions":"395"},{"ruleId":"381","severity":1,"message":"396","line":83,"column":7,"nodeType":"383","messageId":"384","endLine":83,"endColumn":27},{"ruleId":"381","severity":1,"message":"397","line":85,"column":7,"nodeType":"383","messageId":"384","endLine":85,"endColumn":83},{"ruleId":"381","severity":1,"message":"398","line":86,"column":7,"nodeType":"383","messageId":"384","endLine":86,"endColumn":44},{"ruleId":"350","severity":1,"message":"399","line":1,"column":26,"nodeType":"352","messageId":"353","endLine":1,"endColumn":35},{"ruleId":"350","severity":1,"message":"400","line":5,"column":10,"nodeType":"352","messageId":"353","endLine":5,"endColumn":22},{"ruleId":"350","severity":1,"message":"401","line":17,"column":28,"nodeType":"352","messageId":"353","endLine":17,"endColumn":47},{"ruleId":"350","severity":1,"message":"402","line":18,"column":28,"nodeType":"352","messageId":"353","endLine":18,"endColumn":46},{"ruleId":"350","severity":1,"message":"403","line":19,"column":22,"nodeType":"352","messageId":"353","endLine":19,"endColumn":34},{"ruleId":"350","severity":1,"message":"404","line":20,"column":23,"nodeType":"352","messageId":"353","endLine":20,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":53,"column":40,"nodeType":"376","messageId":"377","endLine":53,"endColumn":42},{"ruleId":"350","severity":1,"message":"405","line":60,"column":17,"nodeType":"352","messageId":"353","endLine":60,"endColumn":31},{"ruleId":"374","severity":1,"message":"378","line":70,"column":34,"nodeType":"376","messageId":"377","endLine":70,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":77,"column":60,"nodeType":"376","messageId":"377","endLine":77,"endColumn":62},{"ruleId":"374","severity":1,"message":"378","line":82,"column":66,"nodeType":"376","messageId":"377","endLine":82,"endColumn":68},{"ruleId":"374","severity":1,"message":"378","line":98,"column":35,"nodeType":"376","messageId":"377","endLine":98,"endColumn":37},{"ruleId":"374","severity":1,"message":"375","line":113,"column":86,"nodeType":"376","messageId":"377","endLine":113,"endColumn":88},{"ruleId":"374","severity":1,"message":"378","line":126,"column":45,"nodeType":"376","messageId":"377","endLine":126,"endColumn":47},{"ruleId":"374","severity":1,"message":"378","line":128,"column":45,"nodeType":"376","messageId":"377","endLine":128,"endColumn":47},{"ruleId":"374","severity":1,"message":"378","line":173,"column":86,"nodeType":"376","messageId":"377","endLine":173,"endColumn":88},{"ruleId":"350","severity":1,"message":"406","line":1,"column":9,"nodeType":"352","messageId":"353","endLine":1,"endColumn":23},{"ruleId":"350","severity":1,"message":"407","line":7,"column":31,"nodeType":"352","messageId":"353","endLine":7,"endColumn":52},{"ruleId":"350","severity":1,"message":"364","line":16,"column":20,"nodeType":"352","messageId":"353","endLine":16,"endColumn":30},{"ruleId":"367","severity":1,"message":"408","line":66,"column":7,"nodeType":"369","endLine":66,"endColumn":9,"suggestions":"409"},{"ruleId":"381","severity":1,"message":"410","line":72,"column":13,"nodeType":"383","messageId":"384","endLine":72,"endColumn":92},{"ruleId":"374","severity":1,"message":"378","line":75,"column":35,"nodeType":"376","messageId":"377","endLine":75,"endColumn":37},{"ruleId":"381","severity":1,"message":"411","line":76,"column":19,"nodeType":"383","messageId":"384","endLine":76,"endColumn":63},{"ruleId":"381","severity":1,"message":"412","line":77,"column":19,"nodeType":"383","messageId":"384","endLine":77,"endColumn":69},{"ruleId":"350","severity":1,"message":"392","line":1,"column":16,"nodeType":"352","messageId":"353","endLine":1,"endColumn":24},{"ruleId":"350","severity":1,"message":"351","line":22,"column":12,"nodeType":"352","messageId":"353","endLine":22,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":22,"column":20,"nodeType":"352","messageId":"353","endLine":22,"endColumn":30},{"ruleId":"350","severity":1,"message":"402","line":23,"column":28,"nodeType":"352","messageId":"353","endLine":23,"endColumn":46},{"ruleId":"350","severity":1,"message":"403","line":24,"column":22,"nodeType":"352","messageId":"353","endLine":24,"endColumn":34},{"ruleId":"350","severity":1,"message":"404","line":25,"column":23,"nodeType":"352","messageId":"353","endLine":25,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":38,"column":80,"nodeType":"376","messageId":"377","endLine":38,"endColumn":82},{"ruleId":"374","severity":1,"message":"378","line":51,"column":67,"nodeType":"376","messageId":"377","endLine":51,"endColumn":69},{"ruleId":"374","severity":1,"message":"378","line":53,"column":29,"nodeType":"376","messageId":"377","endLine":53,"endColumn":31},{"ruleId":"374","severity":1,"message":"378","line":58,"column":41,"nodeType":"376","messageId":"377","endLine":58,"endColumn":43},{"ruleId":"374","severity":1,"message":"375","line":58,"column":72,"nodeType":"376","messageId":"377","endLine":58,"endColumn":74},{"ruleId":"374","severity":1,"message":"378","line":107,"column":54,"nodeType":"376","messageId":"377","endLine":107,"endColumn":56},{"ruleId":"374","severity":1,"message":"378","line":108,"column":46,"nodeType":"376","messageId":"377","endLine":108,"endColumn":48},{"ruleId":"371","severity":1,"message":"372","line":132,"column":28,"nodeType":"369","messageId":"373","endLine":133,"endColumn":76},{"ruleId":"350","severity":1,"message":"351","line":194,"column":12,"nodeType":"352","messageId":"353","endLine":194,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":194,"column":20,"nodeType":"352","messageId":"353","endLine":194,"endColumn":30},{"ruleId":"367","severity":1,"message":"413","line":247,"column":7,"nodeType":"369","endLine":247,"endColumn":9,"suggestions":"414"},{"ruleId":"350","severity":1,"message":"392","line":1,"column":26,"nodeType":"352","messageId":"353","endLine":1,"endColumn":34},{"ruleId":"350","severity":1,"message":"415","line":2,"column":9,"nodeType":"352","messageId":"353","endLine":2,"endColumn":16},{"ruleId":"350","severity":1,"message":"416","line":4,"column":9,"nodeType":"352","messageId":"353","endLine":4,"endColumn":20},{"ruleId":"350","severity":1,"message":"417","line":4,"column":21,"nodeType":"352","messageId":"353","endLine":4,"endColumn":28},{"ruleId":"350","severity":1,"message":"418","line":5,"column":9,"nodeType":"352","messageId":"353","endLine":5,"endColumn":21},{"ruleId":"350","severity":1,"message":"419","line":16,"column":11,"nodeType":"352","messageId":"353","endLine":16,"endColumn":20},{"ruleId":"350","severity":1,"message":"351","line":17,"column":12,"nodeType":"352","messageId":"353","endLine":17,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":17,"column":20,"nodeType":"352","messageId":"353","endLine":17,"endColumn":30},{"ruleId":"350","severity":1,"message":"403","line":18,"column":22,"nodeType":"352","messageId":"353","endLine":18,"endColumn":34},{"ruleId":"350","severity":1,"message":"404","line":20,"column":23,"nodeType":"352","messageId":"353","endLine":20,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":41,"column":42,"nodeType":"376","messageId":"377","endLine":41,"endColumn":44},{"ruleId":"367","severity":1,"message":"420","line":52,"column":7,"nodeType":"369","endLine":52,"endColumn":31,"suggestions":"421"},{"ruleId":"371","severity":1,"message":"372","line":52,"column":7,"nodeType":"369","messageId":"373","endLine":52,"endColumn":31},{"ruleId":"381","severity":1,"message":"422","line":67,"column":11,"nodeType":"383","messageId":"384","endLine":67,"endColumn":60},{"ruleId":"381","severity":1,"message":"423","line":68,"column":11,"nodeType":"383","messageId":"384","endLine":68,"endColumn":55},{"ruleId":"350","severity":1,"message":"351","line":11,"column":10,"nodeType":"352","messageId":"353","endLine":11,"endColumn":17},{"ruleId":"350","severity":1,"message":"364","line":11,"column":18,"nodeType":"352","messageId":"353","endLine":11,"endColumn":28},{"ruleId":"350","severity":1,"message":"424","line":12,"column":10,"nodeType":"352","messageId":"353","endLine":12,"endColumn":19},{"ruleId":"350","severity":1,"message":"403","line":12,"column":20,"nodeType":"352","messageId":"353","endLine":12,"endColumn":32},{"ruleId":"350","severity":1,"message":"402","line":13,"column":26,"nodeType":"352","messageId":"353","endLine":13,"endColumn":44},{"ruleId":"381","severity":1,"message":"410","line":31,"column":11,"nodeType":"383","messageId":"384","endLine":31,"endColumn":90},{"ruleId":"350","severity":1,"message":"425","line":1,"column":8,"nodeType":"352","messageId":"353","endLine":1,"endColumn":13},{"ruleId":"350","severity":1,"message":"426","line":3,"column":22,"nodeType":"352","messageId":"353","endLine":3,"endColumn":35},{"ruleId":"350","severity":1,"message":"400","line":4,"column":9,"nodeType":"352","messageId":"353","endLine":4,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":10,"column":12,"nodeType":"352","messageId":"353","endLine":10,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":10,"column":20,"nodeType":"352","messageId":"353","endLine":10,"endColumn":30},{"ruleId":"350","severity":1,"message":"403","line":12,"column":22,"nodeType":"352","messageId":"353","endLine":12,"endColumn":34},{"ruleId":"350","severity":1,"message":"427","line":13,"column":24,"nodeType":"352","messageId":"353","endLine":13,"endColumn":38},{"ruleId":"367","severity":1,"message":"428","line":72,"column":11,"nodeType":"369","endLine":72,"endColumn":13,"suggestions":"429"},{"ruleId":"374","severity":1,"message":"378","line":76,"column":44,"nodeType":"376","messageId":"377","endLine":76,"endColumn":46},{"ruleId":"371","severity":1,"message":"372","line":85,"column":9,"nodeType":"369","messageId":"373","endLine":85,"endColumn":37},{"ruleId":"350","severity":1,"message":"430","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":14},{"ruleId":"350","severity":1,"message":"406","line":4,"column":18,"nodeType":"352","messageId":"353","endLine":4,"endColumn":32},{"ruleId":"350","severity":1,"message":"400","line":5,"column":9,"nodeType":"352","messageId":"353","endLine":5,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":9,"column":10,"nodeType":"352","messageId":"353","endLine":9,"endColumn":17},{"ruleId":"350","severity":1,"message":"364","line":9,"column":18,"nodeType":"352","messageId":"353","endLine":9,"endColumn":28},{"ruleId":"350","severity":1,"message":"403","line":11,"column":20,"nodeType":"352","messageId":"353","endLine":11,"endColumn":32},{"ruleId":"350","severity":1,"message":"404","line":12,"column":21,"nodeType":"352","messageId":"353","endLine":12,"endColumn":34},{"ruleId":"350","severity":1,"message":"431","line":13,"column":10,"nodeType":"352","messageId":"353","endLine":13,"endColumn":28},{"ruleId":"350","severity":1,"message":"407","line":13,"column":29,"nodeType":"352","messageId":"353","endLine":13,"endColumn":50},{"ruleId":"350","severity":1,"message":"427","line":14,"column":22,"nodeType":"352","messageId":"353","endLine":14,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":27,"column":33,"nodeType":"376","messageId":"377","endLine":27,"endColumn":35},{"ruleId":"367","severity":1,"message":"432","line":32,"column":9,"nodeType":"369","endLine":32,"endColumn":21,"suggestions":"433"},{"ruleId":"371","severity":1,"message":"372","line":32,"column":9,"nodeType":"369","messageId":"373","endLine":32,"endColumn":21},{"ruleId":"374","severity":1,"message":"378","line":73,"column":40,"nodeType":"376","messageId":"377","endLine":73,"endColumn":42},{"ruleId":"374","severity":1,"message":"378","line":74,"column":76,"nodeType":"376","messageId":"377","endLine":74,"endColumn":78},{"ruleId":"374","severity":1,"message":"378","line":97,"column":21,"nodeType":"376","messageId":"377","endLine":97,"endColumn":23},{"ruleId":"374","severity":1,"message":"378","line":107,"column":32,"nodeType":"376","messageId":"377","endLine":107,"endColumn":34},{"ruleId":"374","severity":1,"message":"378","line":109,"column":37,"nodeType":"376","messageId":"377","endLine":109,"endColumn":39},{"ruleId":"434","severity":1,"message":"435","line":110,"column":15,"nodeType":"352","messageId":"436","endLine":110,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":117,"column":22,"nodeType":"376","messageId":"377","endLine":117,"endColumn":24},{"ruleId":"374","severity":1,"message":"375","line":118,"column":41,"nodeType":"376","messageId":"377","endLine":118,"endColumn":43},{"ruleId":"374","severity":1,"message":"378","line":118,"column":86,"nodeType":"376","messageId":"377","endLine":118,"endColumn":88},{"ruleId":"374","severity":1,"message":"375","line":133,"column":41,"nodeType":"376","messageId":"377","endLine":133,"endColumn":43},{"ruleId":"374","severity":1,"message":"378","line":138,"column":29,"nodeType":"376","messageId":"377","endLine":138,"endColumn":31},{"ruleId":"374","severity":1,"message":"375","line":139,"column":39,"nodeType":"376","messageId":"377","endLine":139,"endColumn":41},{"ruleId":"374","severity":1,"message":"378","line":139,"column":84,"nodeType":"376","messageId":"377","endLine":139,"endColumn":86},{"ruleId":"374","severity":1,"message":"375","line":153,"column":45,"nodeType":"376","messageId":"377","endLine":153,"endColumn":47},{"ruleId":"374","severity":1,"message":"375","line":161,"column":18,"nodeType":"376","messageId":"377","endLine":161,"endColumn":20},{"ruleId":"374","severity":1,"message":"378","line":184,"column":25,"nodeType":"376","messageId":"377","endLine":184,"endColumn":27},{"ruleId":"374","severity":1,"message":"378","line":210,"column":27,"nodeType":"376","messageId":"377","endLine":210,"endColumn":29},{"ruleId":"374","severity":1,"message":"378","line":237,"column":26,"nodeType":"376","messageId":"377","endLine":237,"endColumn":28},{"ruleId":"374","severity":1,"message":"378","line":244,"column":69,"nodeType":"376","messageId":"377","endLine":244,"endColumn":71},{"ruleId":"374","severity":1,"message":"378","line":269,"column":23,"nodeType":"376","messageId":"377","endLine":269,"endColumn":25},{"ruleId":"374","severity":1,"message":"378","line":269,"column":47,"nodeType":"376","messageId":"377","endLine":269,"endColumn":49},{"ruleId":"374","severity":1,"message":"378","line":272,"column":30,"nodeType":"376","messageId":"377","endLine":272,"endColumn":32},{"ruleId":"374","severity":1,"message":"378","line":275,"column":30,"nodeType":"376","messageId":"377","endLine":275,"endColumn":32},{"ruleId":"374","severity":1,"message":"378","line":277,"column":30,"nodeType":"376","messageId":"377","endLine":277,"endColumn":32},{"ruleId":"374","severity":1,"message":"378","line":299,"column":46,"nodeType":"376","messageId":"377","endLine":299,"endColumn":48},{"ruleId":"374","severity":1,"message":"375","line":308,"column":20,"nodeType":"376","messageId":"377","endLine":308,"endColumn":22},{"ruleId":"374","severity":1,"message":"375","line":312,"column":20,"nodeType":"376","messageId":"377","endLine":312,"endColumn":22},{"ruleId":"374","severity":1,"message":"378","line":328,"column":47,"nodeType":"376","messageId":"377","endLine":328,"endColumn":49},{"ruleId":"367","severity":1,"message":"428","line":386,"column":7,"nodeType":"369","endLine":386,"endColumn":9,"suggestions":"437"},{"ruleId":"350","severity":1,"message":"392","line":1,"column":26,"nodeType":"352","messageId":"353","endLine":1,"endColumn":34},{"ruleId":"350","severity":1,"message":"415","line":2,"column":9,"nodeType":"352","messageId":"353","endLine":2,"endColumn":16},{"ruleId":"350","severity":1,"message":"416","line":4,"column":9,"nodeType":"352","messageId":"353","endLine":4,"endColumn":20},{"ruleId":"350","severity":1,"message":"418","line":5,"column":9,"nodeType":"352","messageId":"353","endLine":5,"endColumn":21},{"ruleId":"350","severity":1,"message":"438","line":7,"column":9,"nodeType":"352","messageId":"353","endLine":7,"endColumn":13},{"ruleId":"350","severity":1,"message":"351","line":13,"column":10,"nodeType":"352","messageId":"353","endLine":13,"endColumn":17},{"ruleId":"350","severity":1,"message":"364","line":13,"column":18,"nodeType":"352","messageId":"353","endLine":13,"endColumn":28},{"ruleId":"350","severity":1,"message":"439","line":25,"column":13,"nodeType":"352","messageId":"353","endLine":25,"endColumn":19},{"ruleId":"374","severity":1,"message":"375","line":54,"column":76,"nodeType":"376","messageId":"377","endLine":54,"endColumn":78},{"ruleId":"374","severity":1,"message":"375","line":73,"column":108,"nodeType":"376","messageId":"377","endLine":73,"endColumn":110},{"ruleId":"374","severity":1,"message":"378","line":80,"column":44,"nodeType":"376","messageId":"377","endLine":80,"endColumn":46},{"ruleId":"374","severity":1,"message":"378","line":81,"column":52,"nodeType":"376","messageId":"377","endLine":81,"endColumn":54},{"ruleId":"367","severity":1,"message":"440","line":94,"column":9,"nodeType":"369","endLine":94,"endColumn":11,"suggestions":"441"},{"ruleId":"442","severity":1,"message":"443","line":98,"column":15,"nodeType":"383","endLine":98,"endColumn":97},{"ruleId":"350","severity":1,"message":"392","line":1,"column":26,"nodeType":"352","messageId":"353","endLine":1,"endColumn":34},{"ruleId":"350","severity":1,"message":"415","line":2,"column":9,"nodeType":"352","messageId":"353","endLine":2,"endColumn":16},{"ruleId":"350","severity":1,"message":"444","line":3,"column":8,"nodeType":"352","messageId":"353","endLine":3,"endColumn":13},{"ruleId":"350","severity":1,"message":"416","line":5,"column":9,"nodeType":"352","messageId":"353","endLine":5,"endColumn":20},{"ruleId":"350","severity":1,"message":"417","line":5,"column":21,"nodeType":"352","messageId":"353","endLine":5,"endColumn":28},{"ruleId":"350","severity":1,"message":"418","line":6,"column":9,"nodeType":"352","messageId":"353","endLine":6,"endColumn":21},{"ruleId":"350","severity":1,"message":"438","line":8,"column":9,"nodeType":"352","messageId":"353","endLine":8,"endColumn":13},{"ruleId":"350","severity":1,"message":"445","line":10,"column":8,"nodeType":"352","messageId":"353","endLine":10,"endColumn":9},{"ruleId":"350","severity":1,"message":"351","line":16,"column":12,"nodeType":"352","messageId":"353","endLine":16,"endColumn":19},{"ruleId":"350","severity":1,"message":"364","line":16,"column":20,"nodeType":"352","messageId":"353","endLine":16,"endColumn":30},{"ruleId":"350","severity":1,"message":"404","line":19,"column":23,"nodeType":"352","messageId":"353","endLine":19,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":43,"column":62,"nodeType":"376","messageId":"377","endLine":43,"endColumn":64},{"ruleId":"367","severity":1,"message":"446","line":64,"column":7,"nodeType":"369","endLine":64,"endColumn":9,"suggestions":"447"},{"ruleId":"350","severity":1,"message":"448","line":67,"column":13,"nodeType":"352","messageId":"353","endLine":67,"endColumn":33},{"ruleId":"374","severity":1,"message":"378","line":67,"column":68,"nodeType":"376","messageId":"377","endLine":67,"endColumn":70},{"ruleId":"374","severity":1,"message":"375","line":71,"column":43,"nodeType":"376","messageId":"377","endLine":71,"endColumn":45},{"ruleId":"374","severity":1,"message":"378","line":72,"column":90,"nodeType":"376","messageId":"377","endLine":72,"endColumn":92},{"ruleId":"367","severity":1,"message":"449","line":79,"column":7,"nodeType":"369","endLine":79,"endColumn":19,"suggestions":"450"},{"ruleId":"371","severity":1,"message":"372","line":79,"column":7,"nodeType":"369","messageId":"373","endLine":79,"endColumn":19},{"ruleId":"350","severity":1,"message":"392","line":1,"column":16,"nodeType":"352","messageId":"353","endLine":1,"endColumn":24},{"ruleId":"350","severity":1,"message":"399","line":1,"column":36,"nodeType":"352","messageId":"353","endLine":1,"endColumn":45},{"ruleId":"350","severity":1,"message":"393","line":2,"column":9,"nodeType":"352","messageId":"353","endLine":2,"endColumn":20},{"ruleId":"350","severity":1,"message":"451","line":2,"column":21,"nodeType":"352","messageId":"353","endLine":2,"endColumn":34},{"ruleId":"350","severity":1,"message":"426","line":3,"column":22,"nodeType":"352","messageId":"353","endLine":3,"endColumn":35},{"ruleId":"350","severity":1,"message":"452","line":3,"column":54,"nodeType":"352","messageId":"353","endLine":3,"endColumn":74},{"ruleId":"350","severity":1,"message":"453","line":3,"column":75,"nodeType":"352","messageId":"353","endLine":3,"endColumn":88},{"ruleId":"350","severity":1,"message":"454","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":19},{"ruleId":"350","severity":1,"message":"455","line":5,"column":8,"nodeType":"352","messageId":"353","endLine":5,"endColumn":20},{"ruleId":"350","severity":1,"message":"402","line":15,"column":26,"nodeType":"352","messageId":"353","endLine":15,"endColumn":44},{"ruleId":"350","severity":1,"message":"403","line":16,"column":20,"nodeType":"352","messageId":"353","endLine":16,"endColumn":32},{"ruleId":"374","severity":1,"message":"378","line":24,"column":104,"nodeType":"376","messageId":"377","endLine":24,"endColumn":106},{"ruleId":"381","severity":1,"message":"456","line":31,"column":11,"nodeType":"383","messageId":"384","endLine":31,"endColumn":50},{"ruleId":"350","severity":1,"message":"457","line":2,"column":26,"nodeType":"352","messageId":"353","endLine":2,"endColumn":36},{"ruleId":"350","severity":1,"message":"458","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"459","line":3,"column":15,"nodeType":"352","messageId":"353","endLine":3,"endColumn":26},{"ruleId":"350","severity":1,"message":"460","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":14},{"ruleId":"350","severity":1,"message":"461","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":19},{"ruleId":"350","severity":1,"message":"393","line":10,"column":9,"nodeType":"352","messageId":"353","endLine":10,"endColumn":20},{"ruleId":"350","severity":1,"message":"457","line":2,"column":26,"nodeType":"352","messageId":"353","endLine":2,"endColumn":36},{"ruleId":"350","severity":1,"message":"458","line":3,"column":9,"nodeType":"352","messageId":"353","endLine":3,"endColumn":14},{"ruleId":"350","severity":1,"message":"459","line":3,"column":15,"nodeType":"352","messageId":"353","endLine":3,"endColumn":26},{"ruleId":"350","severity":1,"message":"460","line":4,"column":8,"nodeType":"352","messageId":"353","endLine":4,"endColumn":14},{"ruleId":"350","severity":1,"message":"461","line":6,"column":8,"nodeType":"352","messageId":"353","endLine":6,"endColumn":19},{"ruleId":"367","severity":1,"message":"462","line":36,"column":7,"nodeType":"369","endLine":36,"endColumn":17,"suggestions":"463"},"no-native-reassign",["464"],"no-negated-in-lhs",["465"],"no-unused-vars","'profile' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"466","text":"467"},"'Popup' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'setprofile' is assigned a value but never used.","'useMemo' is defined but never used.","'io' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameState.room_id', 'profile.username', and 'websocket'. Either include them or remove the dependency array.","ArrayExpression",["468"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'gameState.player_turn'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setplayerlistState' needs the current value of 'gameState.player_turn'.",["469"],"react/jsx-pascal-case","Imported JSX component Alphabet_analytics must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Main_game must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Action_bar must be in PascalCase or SCREAMING_SNAKE_CASE","'Draggable' is defined but never used.","React Hook useEffect has missing dependencies: 'profile.username', 'room_id', and 'websocket'. Either include them or remove the dependency array.",["470"],"React Hook useEffect has a missing dependency: 'prev_other_player'. Either include it or remove the dependency array.",["471"],"'useState' is defined but never used.","'UserContext' is defined but never used.","React Hook useEffect has missing dependencies: 'fail_return_state' and 'websocket'. Either include them or remove the dependency array.",["472"],"Imported JSX component Challenge_status must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Score_button must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Draw_button must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'games_sachet' is defined but never used.","'set_tile_visibility' is assigned a value but never used.","'setplayerlistState' is assigned a value but never used.","'setgameState' is assigned a value but never used.","'setboardState' is assigned a value but never used.","'drag_container' is defined but never used.","'analytics_data' is defined but never used.","'setanalyticsdataState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'board_container_state', 'container_container_state', and 'websocket'. Either include them or remove the dependency array.",["473"],"Imported JSX component Invisible_tile_context must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tile_container must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tile_container_other must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'board_board_state', 'container_board_state', and 'websocket'. Either include them or remove the dependency array.",["474"],"'useDrag' is defined but never used.","'DndProvider' is defined but never used.","'useDrop' is defined but never used.","'HTML5Backend' is defined but never used.","'websocket' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'playerlistState' and 'setplayerlistState'. Either include them or remove the dependency array.",["475"],"Imported JSX component Challenge_button must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_logo must be in PascalCase or SCREAMING_SNAKE_CASE","'gameState' is assigned a value but never used.","'react' is defined but never used.","'BlocksContext' is defined but never used.","'setsachetState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setplayerlistState', 'values', and 'websocket'. Either include them or remove the dependency array.",["476"],"'sachet' is defined but never used.","'analyticsdataState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'playerlistState'. Either include it or remove the dependency array.",["477"],"no-redeclare","'direction' is already defined.","redeclared",["478"],"'Tile' is defined but never used.","'isOver' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'board_delete_state', 'container_delete_state', and 'websocket'. Either include them or remove the dependency array.",["479"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'_' is defined but never used.","React Hook useEffect has missing dependencies: 'setgameState' and 'websocket'. Either include them or remove the dependency array.",["480"],"'your_index_challenge' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'playerlistState.length' and 'setplayerlistState'. Either include them or remove the dependency array.",["481"],"'SocketContext' is defined but never used.","'AnalyticsDataContext' is defined but never used.","'SachetContext' is defined but never used.","'Draw_button' is defined but never used.","'Score_button' is defined but never used.","Imported JSX component Faulty_word must be in PascalCase or SCREAMING_SNAKE_CASE","'useContext' is defined but never used.","'title' is defined but never used.","'Titlerender' is defined but never used.","'Signup' is defined but never used.","'GoogleLogin' is defined but never used.","React Hook useEffect has a missing dependency: 'schema'. Either include it or remove the dependency array.",["482"],"no-global-assign","no-unsafe-negation",[1423,1432],"\r\n      .",{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"499","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},"Update the dependencies array to be: [gameState.room_id, profile.username, websocket]",{"range":"512","text":"513"},"Update the dependencies array to be: [gameState.player_turn, gamestateRef.current.player_turn]",{"range":"514","text":"515"},"Update the dependencies array to be: [profile.username, room_id, websocket]",{"range":"516","text":"517"},"Update the dependencies array to be: [other_player, prev_other_player]",{"range":"518","text":"519"},"Update the dependencies array to be: [fail_return_state, websocket]",{"range":"520","text":"521"},"Update the dependencies array to be: [board_container_state, container_container_state, websocket]",{"range":"522","text":"523"},"Update the dependencies array to be: [board_board_state, container_board_state, websocket]",{"range":"524","text":"525"},"Update the dependencies array to be: [gameState.player_turn, playerlistState, setplayerlistState]",{"range":"526","text":"527"},"Update the dependencies array to be: [setplayerlistState, values, websocket]",{"range":"528","text":"529"},"Update the dependencies array to be: [gameState, playerlistState]",{"range":"530","text":"531"},{"range":"532","text":"529"},"Update the dependencies array to be: [board_delete_state, container_delete_state, websocket]",{"range":"533","text":"534"},"Update the dependencies array to be: [setgameState, websocket]",{"range":"535","text":"536"},"Update the dependencies array to be: [gameState, playerlistState.length, setplayerlistState]",{"range":"537","text":"538"},"Update the dependencies array to be: [password, schema]",{"range":"539","text":"540"},[4234,4236],"[gameState.room_id, profile.username, websocket]",[5069,5103],"[gameState.player_turn, gamestateRef.current.player_turn]",[1340,1342],"[profile.username, room_id, websocket]",[1717,1731],"[other_player, prev_other_player]",[3447,3449],"[fail_return_state, websocket]",[2620,2622],"[board_container_state, container_container_state, websocket]",[9809,9811],"[board_board_state, container_board_state, websocket]",[2306,2330],"[gameState.player_turn, playerlistState, setplayerlistState]",[3206,3208],"[setplayerlistState, values, websocket]",[1549,1561],"[gameState, playerlistState]",[14781,14783],[4239,4241],"[board_delete_state, container_delete_state, websocket]",[2961,2963],"[setgameState, websocket]",[3769,3781],"[gameState, playerlistState.length, setplayerlistState]",[1362,1372],"[password, schema]"]