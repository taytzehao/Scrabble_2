{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Action\\\\Actionbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { UserContext, SocketContext } from '../../UserContext.js';\nimport { GamesContext, BlocksContext, PlayerListContext, AnalyticsDataContext, SachetContext } from '../GamesContext.js';\nimport Draw_button from \"./Draw_button.js\";\nimport Score_button from \"./Score_button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Action_bar() {\n  _s();\n\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const {\n    analyticsdataState,\n    setanalyticsdataState\n  } = useContext(AnalyticsDataContext);\n  const {\n    sachetState,\n    setsachetState\n  } = useContext(SachetContext);\n  const websocket = useContext(SocketContext);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  const sachetstateRef = useRef(null);\n  const analyticsdataRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  sachetstateRef.current = sachetState;\n  analyticsdataRef.current = analyticsdataState;\n\n  function next_turn(updated_sachet) {\n    let newanalyticsdata = [...analyticsdataRef.current];\n    let analytics_index;\n    let just_added_list = gamestateRef.current.just_added;\n\n    for (let index of just_added_list) {\n      analytics_index = newanalyticsdata.findIndex(data => {\n        return data.alphabet == boardstateRef.current.blocks[index].content.alphabet;\n      });\n\n      if (newanalyticsdata[analytics_index].num == 1) {\n        newanalyticsdata.splice(analytics_index, 1);\n      } else {\n        newanalyticsdata[analytics_index].num -= 1;\n      }\n    }\n\n    setboardState(prevboardState => {\n      let tempboardState = { ...prevboardState\n      };\n      gamestateRef.current.just_added.forEach(index => {\n        tempboardState.blocks[index].content.just_added = false;\n        tempboardState.blocks[index].content.challenge = true;\n        tempboardState.blocks[index].content.active = false;\n        tempboardState.blocks[index].content.canDrag = false;\n        tempboardState.blocks[index].content.canDrop = false;\n        tempboardState.blocks[index].content.index = null;\n      });\n      return tempboardState;\n    });\n    setanalyticsdataState(newanalyticsdata);\n    setgameState(prevgameState => ({ ...prevgameState,\n      turn_num: prevgameState.turn_num + 1,\n      just_added: []\n    }));\n    setsachetState(updated_sachet);\n  }\n\n  function fail_return_state(player_turn, return_tiles, just_added) {\n    setplayerlistState(prevplayerlistState => {\n      let newplayerlistState = [...prevplayerlistState];\n      newplayerlistState[player_turn].tiles = newplayerlistState[player_turn].tiles.concat(return_tiles);\n      return newplayerlistState;\n    });\n    setboardState(prevboardState => {\n      let newboardState = { ...prevboardState\n      };\n      just_added.forEach(index => {\n        newboardState.blocks[index].content = null;\n      });\n      return newboardState;\n    });\n    setgameState(prevgameState => ({ ...prevgameState,\n      just_added: []\n    }));\n  }\n\n  useEffect(() => {\n    websocket.current.on(\"fail_return\", socket_out => {\n      fail_return_state(socket_out.player_turn, socket_out.return_tiles, socket_out.just_added);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Action_bar\",\n    children: [/*#__PURE__*/_jsxDEV(Score_button, {\n      next_funct: next_turn,\n      fail_return_funct: fail_return_state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Draw_button, {\n      next_funct: next_turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Action_bar, \"au+V1SDSEYQz1EPu6FNblN1hQJ4=\");\n\n_c = Action_bar;\nexport default Action_bar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action_bar\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Action/Actionbar.js"],"names":["React","useState","useContext","useEffect","useRef","UserContext","SocketContext","GamesContext","BlocksContext","PlayerListContext","AnalyticsDataContext","SachetContext","Draw_button","Score_button","Action_bar","playerlistState","setplayerlistState","gameState","setgameState","boardState","setboardState","analyticsdataState","setanalyticsdataState","sachetState","setsachetState","websocket","playerlistRef","gamestateRef","boardstateRef","sachetstateRef","analyticsdataRef","current","next_turn","updated_sachet","newanalyticsdata","analytics_index","just_added_list","just_added","index","findIndex","data","alphabet","blocks","content","num","splice","prevboardState","tempboardState","forEach","challenge","active","canDrag","canDrop","prevgameState","turn_num","fail_return_state","player_turn","return_tiles","prevplayerlistState","newplayerlistState","tiles","concat","newboardState","on","socket_out"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport Draw_button from \"./Draw_button.js\";\r\nimport Score_button from \"./Score_button.js\";\r\n\r\nfunction Action_bar() {\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const {analyticsdataState,setanalyticsdataState}=useContext(AnalyticsDataContext)\r\n  const {sachetState,setsachetState}=useContext(SachetContext)  \r\n  const websocket=useContext(SocketContext) \r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  const sachetstateRef=useRef(null);\r\n  const analyticsdataRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n  sachetstateRef.current=sachetState\r\n  analyticsdataRef.current=analyticsdataState\r\n  \r\n  function next_turn(updated_sachet){\r\n    let newanalyticsdata=[...analyticsdataRef.current];\r\n      let analytics_index;\r\n      let just_added_list=gamestateRef.current.just_added;\r\n      for (let index of just_added_list){\r\n        analytics_index=newanalyticsdata.findIndex(data=>{\r\n          return data.alphabet==boardstateRef.current.blocks[index].content.alphabet;})\r\n\r\n        if(newanalyticsdata[analytics_index].num==1) { newanalyticsdata.splice(analytics_index,1)}else{newanalyticsdata[analytics_index].num-=1}\r\n      }\r\n    setboardState((prevboardState=>{\r\n      let tempboardState={...prevboardState}\r\n      gamestateRef.current.just_added.forEach(index=>{\r\n          tempboardState.blocks[index].content.just_added=false\r\n          tempboardState.blocks[index].content.challenge=true\r\n          tempboardState.blocks[index].content.active=false\r\n          tempboardState.blocks[index].content.canDrag=false\r\n          tempboardState.blocks[index].content.canDrop=false\r\n          tempboardState.blocks[index].content.index=null\r\n      })\r\n      return tempboardState\r\n  }))\r\n    setanalyticsdataState(newanalyticsdata)\r\n    setgameState((prevgameState=>({...prevgameState,\r\n      turn_num:prevgameState.turn_num+1, \r\n      just_added:[]     \r\n  }))) \r\n    setsachetState(updated_sachet)\r\n  }\r\n  function fail_return_state(player_turn,return_tiles,just_added){\r\n    setplayerlistState((prevplayerlistState=>{\r\n      let newplayerlistState=[...prevplayerlistState]\r\n      newplayerlistState[player_turn].tiles=newplayerlistState[player_turn].tiles.concat(return_tiles)\r\n      return newplayerlistState\r\n    }))\r\n    setboardState((prevboardState=>{\r\n      let newboardState={...prevboardState}\r\n      just_added.forEach(index=>{\r\n        newboardState.blocks[index].content=null\r\n      })\r\n      return newboardState\r\n    }))\r\n    setgameState((prevgameState=>({...prevgameState,\r\n      just_added:[]     \r\n  }))) \r\n  }\r\n\r\n  useEffect(()=>{\r\n    websocket.current.on(\"fail_return\",(socket_out)=>{\r\n      fail_return_state(socket_out.player_turn,socket_out.return_tiles,socket_out.just_added)\r\n  })},[])\r\n  \r\n\r\n  return (\r\n    <div className=\"Action_bar\">\r\n      <Score_button next_funct={next_turn} fail_return_funct={fail_return_state}/>\r\n      <Draw_button next_funct={next_turn}/>   \r\n    </div>)\r\n     \r\n}\r\n\r\nexport default Action_bar;"]},"metadata":{},"sourceType":"module"}