{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Gamespage.js\",\n    _s2 = $RefreshSig$();\n\nimport './Gamespage.css';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\nimport { UserContext } from '../UserContext.js';\nimport { Player } from './Player.js';\nimport { Link, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Joingame from './Main_game/Joingame.js';\nimport Action_bar from './Action/Actionbar.js';\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js';\nimport Main_game from './Main_game/Main_game.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamespage() {\n  _s2();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const socketRef = useRef();\n  console.log(useParams());\n  const [gameState, setgameState] = useState({\n    Room_id: useParams().room_id,\n    gamestarted: false,\n    turn_num: 0,\n    player_num: 0,\n    Player_list: []\n  });\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    socketRef.current = io.connect(\"http://localhost:5500\");\n    axios.get('http://localhost:5500/get_added_players', {\n      params: {\n        Room_id: gameState.Room_id,\n        username: profile.username\n      }\n    }).then(_s(res => {\n      _s();\n\n      for (let i = 0; i < res.data.length; i++) {\n        let temp_player = new Player(res.data[i].username);\n        temp_player.draw_by_ids(res[i].tiles);\n        setgameState({ ...gameState,\n          [\"Player_list\"]: [...gameState.Player_list, temp_player],\n          [\"player_num\"]: gameState.player_num + 1\n        });\n      }\n\n      const your_player = new Player(profile.username);\n      your_player.draw();\n      let li = console.log(\"!!!!!!!!!!!\", useParams().room_id);\n      axios.put(\"http://localhost:5500/add_player\", {\n        username: your_player.username,\n        tiles: your_player.tiles,\n        player_num: gameState.player_num,\n        room_id: gameState.room_id\n      });\n      setgameState({ ...gameState,\n        [\"Player_list\"]: [...gameState.Player_list, your_player],\n        [\"player_num\"]: gameState.player_num + 1\n      });\n      socketRef.current.emit(\"emit_new_player\", {\n        username: your_player.username,\n        tiles: your_player.tiles\n      });\n      socketRef.current.on(\"new_game\", res => {\n        for (let i = 0; i < res.data.length; i++) {\n          let temp_player = new Player(res.data[i].username);\n          temp_player.draw_by_ids(res[i].tiles);\n          setgameState({ ...gameState,\n            [\"Player_list\"]: [...gameState.Player_list, temp_player]\n          });\n        }\n      });\n    }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n      return [useParams];\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Games_page\",\n    children: [/*#__PURE__*/_jsxDEV(Joingame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main_divider\",\n      children: [/*#__PURE__*/_jsxDEV(Alphabet_analytics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Main_game, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Action_bar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Gamespage, \"wMl7SuOVruXKycwLsQfV8xt+21E=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Gamespage;\nexport default Gamespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamespage\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Gamespage.js"],"names":["React","useState","useContext","useEffect","useRef","axios","Popup","UserContext","Player","Link","useParams","io","Joingame","Action_bar","Alphabet_analytics","Main_game","Gamespage","profile","setprofile","socketRef","console","log","gameState","setgameState","Room_id","room_id","gamestarted","turn_num","player_num","Player_list","current","connect","get","params","username","then","res","i","data","length","temp_player","draw_by_ids","tiles","your_player","draw","li","put","emit","on"],"mappings":"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","sourcesContent":["import './Gamespage.css';\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {UserContext} from '../UserContext.js';\r\nimport {Player} from './Player.js'\r\nimport {Link,useParams} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Joingame from './Main_game/Joingame.js'\r\nimport Action_bar from './Action/Actionbar.js'\r\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js'\r\nimport Main_game from './Main_game/Main_game.js' \r\n\r\n\r\nfunction Gamespage() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const socketRef =useRef()\r\n    console.log(useParams())\r\n    const [gameState,setgameState]=useState({\r\n      Room_id:useParams().room_id,\r\n      gamestarted:false,\r\n      turn_num:0,\r\n      player_num:0,\r\n      Player_list:[]\r\n    })\r\n\r\n    useEffect(()=>{\r\n      socketRef.current=io.connect(\"http://localhost:5500\")\r\n      axios.get('http://localhost:5500/get_added_players',{params: {Room_id:gameState.Room_id,username:profile.username}}).then((res)=>{\r\n        for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].username)\r\n          temp_player.draw_by_ids(res[i].tiles)\r\n          setgameState({...gameState,\r\n            [\"Player_list\"]: [...gameState.Player_list,temp_player],\r\n            [\"player_num\"]: gameState.player_num+1\r\n          })\r\n        }\r\n\r\n        const your_player=new Player(profile.username)\r\n        your_player.draw()\r\n        let li=\r\n        console.log(\"!!!!!!!!!!!\",useParams().room_id)\r\n        axios.put(\"http://localhost:5500/add_player\",{username:your_player.username,\r\n                                                      tiles:your_player.tiles,\r\n                                                      player_num:gameState.player_num,\r\n                                                      room_id:gameState.room_id})\r\n\r\n        setgameState({...gameState,\r\n          [\"Player_list\"]: [...gameState.Player_list,your_player],\r\n          [\"player_num\"]: gameState.player_num+1\r\n        })\r\n        socketRef.current.emit(\"emit_new_player\",{username:your_player.username,tiles:your_player.tiles})\r\n        \r\n        socketRef.current.on(\"new_game\", res=>{\r\n          for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].username)\r\n          temp_player.draw_by_ids(res[i].tiles)\r\n          setgameState({...gameState,\r\n            [\"Player_list\"]: [...gameState.Player_list,temp_player]})}\r\n        })\r\n\r\n        }\r\n      )\r\n      \r\n    },[])\r\n    \r\n    \r\n      return (     \r\n        <div className=\"Games_page\">\r\n            <Joingame/>\r\n            <div className=\"Main_divider\">\r\n              <Alphabet_analytics />\r\n              <Main_game />\r\n              <Action_bar />\r\n            </div>                               \r\n        </div>\r\n      );\r\n  }\r\n    \r\nexport default Gamespage;"]},"metadata":{},"sourceType":"module"}