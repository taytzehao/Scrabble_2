{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Tile_container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useDrag } from 'react-dnd';\nimport './Tile_container.css';\nimport { DndProvider, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { UserContext } from '../../UserContext.js';\nimport { GamesContext } from '../GamesContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [[2, 1, \"horizontal\"], [1, 2, \"vertical\"], [2, 3, \"horizontal\"], [3, 2, \"vertical\"]];\n\nfunction Tile_container(player_num) {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const containerstyle = {\n    gridColumn: positions[player_num][0],\n    gridRow: positions[player_num][1],\n    flexDirection: positions[player_num][2]\n  };\n  /*\r\n      const [{isOver},drop] = useDrop(()=>({\r\n        accept: \"active\",\r\n        drop: (tile)=> rearrangeTile(tile.id),\r\n    }));  \r\n  \r\n    const rearrangeTile = (tile) =>{\r\n        if (!tile_content){\r\n            \r\n            set_tile_content([tile])\r\n        }\r\n    }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile_container\",\n    style: containerstyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameState.Player_list[player_num].username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameState.Player_list[player_num].score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile_holder\",\n      children: /*#__PURE__*/_jsxDEV(DndProvider, {\n        backend: HTML5Backend,\n        children: gameState.Player_list[player_num].tiles.map(tile => ({\n          tile\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"challengebtn\",\n      visibility: gameState.Player_list[player_num].active,\n      children: \"Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \".../UI_component/delete.png\",\n      className: \"delete_img\",\n      visibility: ameState.Player_list[player_num].challenge_active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tile_container, \"tfnfl7haee4yhya2RSvSK8Ev7m4=\");\n\n_c = Tile_container;\nexport default Tile_container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile_container\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Tile_container.js"],"names":["React","useContext","useState","useDrag","DndProvider","useDrop","HTML5Backend","UserContext","GamesContext","positions","Tile_container","player_num","profile","setprofile","gameState","setgameState","containerstyle","gridColumn","gridRow","flexDirection","Player_list","username","score","tiles","map","tile","active","ameState","challenge_active"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,EAAoBC,OAApB,QAAkC,WAAlC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,YAAR,QAA2B,oBAA3B;;AAEA,MAAMC,SAAS,GAAC,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,YAAL,CAAD,EAAoB,CAAC,CAAD,EAAG,CAAH,EAAK,UAAL,CAApB,EAAqC,CAAC,CAAD,EAAG,CAAH,EAAK,YAAL,CAArC,EAAwD,CAAC,CAAD,EAAG,CAAH,EAAK,UAAL,CAAxD,CAAhB;;AAEA,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAAA;;AAEhC,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAqBZ,UAAU,CAACM,WAAD,CAArC;AACA,QAAM;AAACO,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBd,UAAU,CAACO,YAAD,CAAzC;AAEA,QAAMQ,cAAc,GAAC;AACnBC,IAAAA,UAAU,EAACR,SAAS,CAACE,UAAD,CAAT,CAAsB,CAAtB,CADQ;AAEnBO,IAAAA,OAAO,EAACT,SAAS,CAACE,UAAD,CAAT,CAAsB,CAAtB,CAFW;AAGnBQ,IAAAA,aAAa,EAACV,SAAS,CAACE,UAAD,CAAT,CAAsB,CAAtB;AAHK,GAArB;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGM,sBAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAEK,cAAvC;AAAA,4BACI;AAAA,gBAAMF,SAAS,CAACM,WAAV,CAAsBT,UAAtB,EAAkCU;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMP,SAAS,CAACM,WAAV,CAAsBT,UAAtB,EAAkCW;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEhB,YAAtB;AAAA,kBACGQ,SAAS,CAACM,WAAV,CAAsBT,UAAtB,EAAkCY,KAAlC,CAAwCC,GAAxC,CAA6CC,IAAD,KAE3C;AAACA,UAAAA;AAAD,SAF2C,CAA5C;AADH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAA+C,MAAA,UAAU,EAAEX,SAAS,CAACM,WAAV,CAAsBT,UAAtB,EAAkCe,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAK,MAAA,GAAG,EAAC,6BAAT;AAAuC,MAAA,SAAS,EAAC,YAAjD;AAA8D,MAAA,UAAU,EAAEC,QAAQ,CAACP,WAAT,CAAqBT,UAArB,EAAiCiB;AAA3G;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAkBH;;GA1CMlB,c;;KAAAA,c;AA4CT,eAAeA,cAAf","sourcesContent":["import React,{useContext,useState} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext} from '../GamesContext.js'\r\n\r\nconst positions=[[2,1,\"horizontal\"],[1,2,\"vertical\"],[2,3,\"horizontal\"],[3,2,\"vertical\"]];\r\n\r\nfunction Tile_container(player_num) {\r\n  \r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n\r\n    const containerstyle={\r\n      gridColumn:positions[player_num][0],\r\n      gridRow:positions[player_num][1],\r\n      flexDirection:positions[player_num][2]\r\n    }\r\n/*\r\n    const [{isOver},drop] = useDrop(()=>({\r\n      accept: \"active\",\r\n      drop: (tile)=> rearrangeTile(tile.id),\r\n  }));  \r\n\r\n  const rearrangeTile = (tile) =>{\r\n      if (!tile_content){\r\n          \r\n          set_tile_content([tile])\r\n      }\r\n  }*/\r\n\r\n    \r\n      return (\r\n        \r\n        <div className=\"tile_container\" style={containerstyle}>\r\n            <div>{gameState.Player_list[player_num].username}</div>   \r\n            <div>{gameState.Player_list[player_num].score}</div> \r\n            <div className=\"tile_holder\">\r\n                <DndProvider backend={HTML5Backend}>\r\n                  {gameState.Player_list[player_num].tiles.map((tile)=>(\r\n                \r\n                    {tile}\r\n                  ))}  \r\n                </DndProvider>\r\n            </div>\r\n            <button type=\"button\" className=\"challengebtn\" visibility={gameState.Player_list[player_num].active}>Challenge</button> \r\n            <img src=\".../UI_component/delete.png\" className=\"delete_img\" visibility={ameState.Player_list[player_num].challenge_active} />                \r\n        </div>\r\n      );\r\n      \r\n  }\r\n    \r\nexport default Tile_container;"]},"metadata":{},"sourceType":"module"}