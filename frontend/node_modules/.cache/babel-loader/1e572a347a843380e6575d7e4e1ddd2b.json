{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Action\\\\Score_button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { UserContext } from '../../UserContext.js';\nimport { GamesContext, BlocksContext, PlayerListContext } from '../GamesContext.js';\nimport './Actionbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Score_button() {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const [scoreActive, setscoreActive] = useState(false);\n  useEffect(() => {\n    let active_player_num = gameState.turn_num % gameState.player_num;\n\n    if (active_player_num == gameState.your_index && !playerlistState[gameState.your_index].delete_list) {\n      setscoreActive(true);\n    } else {\n      setscoreActive(false);\n    }\n  }, [gameState.turn_num, gameState.playerlistState[gameState.your_index].delete_list]);\n\n  function Score() {\n    /*\r\n    if(check_validity()){\r\n          setboardState((prevboardState=>{\r\n            let tempboardState={...prevboardState}\r\n            gameState.just_added.forEach(index=>{\r\n                tempboardState.blocks[index].content.just_added=false\r\n                tempboardState.blocks[index].content.challenge=true\r\n                tempboardState.blocks[index].content.active=false,\r\n                tempboardState.blocks[index].content.canDrag=false,\r\n                tempboardState.blocks[index].content.canDrop=false,\r\n                tempboardState.blocks[index].content.index=null\r\n            })\r\n            return tempboardState\r\n        }))\r\n          setgameState((prevgameState=>({...prevgameState,\r\n            //player will draw\r\n            turn_num:prevgameState.turn_num+1, \r\n            just_added:[]     \r\n        })))  \r\n    }*/\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"draw_button\",\n      onClick: Score,\n      disabled: !scoreActive,\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Score_button, \"OZ+wIygVckJoFjXJvUgUQv7orII=\");\n\n_c = Score_button;\nexport default {\n  Score_button\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Score_button\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Action/Score_button.js"],"names":["React","useState","useContext","useEffect","useRef","UserContext","GamesContext","BlocksContext","PlayerListContext","Score_button","profile","setprofile","gameState","setgameState","boardState","setboardState","playerlistState","setplayerlistState","scoreActive","setscoreActive","active_player_num","turn_num","player_num","your_index","delete_list","Score"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,EAA6CC,MAA7C,QAA0D,OAA1D;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,YAAR,EAAqBC,aAArB,EAAmCC,iBAAnC,QAA2D,oBAA3D;AACA,OAAO,iBAAP;;;AAEA,SAASC,YAAT,GAAuB;AAAA;;AACnB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAqBT,UAAU,CAACG,WAAD,CAArC;AACA,QAAM;AAACO,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBX,UAAU,CAACI,YAAD,CAAzC;AACA,QAAM;AAACQ,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAA2Bb,UAAU,CAACK,aAAD,CAA3C;AACA,QAAM;AAACS,IAAAA,eAAD;AAAiBC,IAAAA;AAAjB,MAAqCf,UAAU,CAACM,iBAAD,CAArD;AACA,QAAM,CAACU,WAAD,EAAaC,cAAb,IAA6BlB,QAAQ,CAAC,KAAD,CAA3C;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIiB,iBAAiB,GAACR,SAAS,CAACS,QAAV,GAAmBT,SAAS,CAACU,UAAnD;;AACA,QAAGF,iBAAiB,IAAER,SAAS,CAACW,UAA7B,IAA2C,CAACP,eAAe,CAACJ,SAAS,CAACW,UAAX,CAAf,CAAsCC,WAArF,EAAiG;AAC/FL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEK;AACHA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAPM,EAOL,CAACP,SAAS,CAACS,QAAX,EAAoBT,SAAS,CAACI,eAAV,CAA0BJ,SAAS,CAACW,UAApC,EAAgDC,WAApE,CAPK,CAAT;;AASE,WAASC,KAAT,GAAgB;AACd;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGO;;AACH,sBACI;AAAA,2BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAA8C,MAAA,OAAO,EAAEA,KAAvD;AAA8D,MAAA,QAAQ,EAAE,CAACP,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GA5CQT,Y;;KAAAA,Y;AA8CT,eAAe;AAACA,EAAAA;AAAD,CAAf","sourcesContent":["import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext} from '../GamesContext.js'\r\nimport './Actionbar.css'\r\n\r\nfunction Score_button(){\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const [scoreActive,setscoreActive]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        let active_player_num=gameState.turn_num%gameState.player_num   \r\n        if(active_player_num==gameState.your_index && !playerlistState[gameState.your_index].delete_list){\r\n          setscoreActive(true)\r\n        }else{\r\n          setscoreActive(false)\r\n        }\r\n      },[gameState.turn_num,gameState.playerlistState[gameState.your_index].delete_list])\r\n    \r\n      function Score(){\r\n        /*\r\n        if(check_validity()){\r\n\r\n            setboardState((prevboardState=>{\r\n                let tempboardState={...prevboardState}\r\n                gameState.just_added.forEach(index=>{\r\n                    tempboardState.blocks[index].content.just_added=false\r\n                    tempboardState.blocks[index].content.challenge=true\r\n                    tempboardState.blocks[index].content.active=false,\r\n                    tempboardState.blocks[index].content.canDrag=false,\r\n                    tempboardState.blocks[index].content.canDrop=false,\r\n                    tempboardState.blocks[index].content.index=null\r\n                })\r\n                return tempboardState\r\n            }))\r\n\r\n            setgameState((prevgameState=>({...prevgameState,\r\n                //player will draw\r\n                turn_num:prevgameState.turn_num+1, \r\n                just_added:[]     \r\n            })))  \r\n        }*/\r\n      }\r\n    return(\r\n        <div>\r\n            <button type=\"button\" className=\"draw_button\" onClick={Score} disabled={!scoreActive}>Score</button> \r\n        </div>)\r\n}\r\n\r\nexport default {Score_button}"]},"metadata":{},"sourceType":"module"}