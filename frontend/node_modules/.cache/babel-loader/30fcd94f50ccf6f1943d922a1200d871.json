{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Gamespage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\nimport { UserContext } from '../UserContext.js';\nimport { Player } from './Player.js';\nimport { Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Joingame from './Main_game/Joingame.js';\nimport Action_bar from './Action/Actionbar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamespage() {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const socketRef = useRef();\n  const [gameState, setgameState] = useState({\n    gamestarted: false,\n    turn_num: 0,\n    player_num: 0,\n    Player_list: []\n  });\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5500\");\n    axios.get('http://localhost:5500/player_num', profile.username).then(res => {\n      for (let i = 0; i < res.data.length; i++) {\n        let temp_player = new Player(res.data[i].username);\n        temp_player.draw_by_ids(res[i].tiles);\n        setgameState({ ...gameState,\n          [\"Player_list\"]: [...gameState.Player_list, temp_player]\n        });\n      }\n\n      const your_player = new Player(profile.username);\n      your_player.draw();\n      axios.post(\"http://localhost:5500/player_num\");\n      setgameState({ ...gameState,\n        [\"Player_list\"]: [...gameState.Player_list, your_player]\n      });\n      socketRef.current.emit(\"emit_new_player\", {\n        username: your_player.username,\n        tiles: your_player.tiles\n      });\n      socketRef.current.on(\"new_game\", res => {\n        for (let i = 0; i < res.data.length; i++) {\n          let temp_player = new Player(res.data[i].username);\n          temp_player.draw_by_ids(res[i].tiles);\n          setgameState({ ...gameState,\n            [\"Player_list\"]: [...gameState.Player_list, temp_player]\n          });\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Games_page\",\n    children: [/*#__PURE__*/_jsxDEV(Joingame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ClassName: \"Main_divider\",\n      children:\n      /*#__PURE__*/\n\n      /*<Alphabet_analytics />\r\n      <Main_game />*/\n      _jsxDEV(Action_bar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gamespage, \"hkH9IDItsmbZieLBKb/NxGoM7Jg=\");\n\n_c = Gamespage;\nexport default Gamespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamespage\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Gamespage.js"],"names":["React","useState","useContext","useEffect","useRef","axios","Popup","UserContext","Player","Link","io","Joingame","Action_bar","Gamespage","profile","setprofile","socketRef","gameState","setgameState","gamestarted","turn_num","player_num","Player_list","current","connect","get","username","then","res","i","data","length","temp_player","draw_by_ids","tiles","your_player","draw","post","emit","on"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {UserContext} from '../UserContext.js';\r\nimport {Player} from './Player.js'\r\nimport {Link} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Joingame from './Main_game/Joingame.js'\r\nimport Action_bar from './Action/Actionbar.js'\r\n\r\n\r\nfunction Gamespage() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const socketRef =useRef()\r\n    const [gameState,setgameState]=useState({\r\n      gamestarted:false,\r\n      turn_num:0,\r\n      player_num:0,\r\n      Player_list:[]\r\n    })\r\n\r\n    useEffect(()=>{\r\n      socketRef.current=io.connect(\"http://localhost:5500\")\r\n      axios.get('http://localhost:5500/player_num',profile.username).then(res=>{\r\n\r\n        for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].username)\r\n          temp_player.draw_by_ids(res[i].tiles)\r\n          setgameState({...gameState,\r\n            [\"Player_list\"]: [...gameState.Player_list,temp_player]})\r\n        }\r\n\r\n        const your_player=new Player(profile.username)\r\n        your_player.draw()\r\n\r\n        axios.post(\"http://localhost:5500/player_num\")\r\n        setgameState({...gameState,\r\n          [\"Player_list\"]: [...gameState.Player_list,your_player]})\r\n        socketRef.current.emit(\"emit_new_player\",{username:your_player.username,tiles:your_player.tiles})\r\n        \r\n        socketRef.current.on(\"new_game\", res=>{\r\n          for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].username)\r\n          temp_player.draw_by_ids(res[i].tiles)\r\n          setgameState({...gameState,\r\n            [\"Player_list\"]: [...gameState.Player_list,temp_player]})}\r\n        })\r\n\r\n        }\r\n      )\r\n      \r\n    },[])\r\n    \r\n    \r\n      return (     \r\n        <div className=\"Games_page\">\r\n            <Joingame/>\r\n            <div ClassName=\"Main_divider\">\r\n              {/*<Alphabet_analytics />\r\n              <Main_game />*/\r\n              <Action_bar />}\r\n            </div>                               \r\n        </div>\r\n      );\r\n  }\r\n    \r\nexport default Gamespage;"]},"metadata":{},"sourceType":"module"}