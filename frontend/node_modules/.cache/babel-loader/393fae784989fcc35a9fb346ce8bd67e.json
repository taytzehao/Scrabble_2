{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Login_page\\\\Forgotpassword.js\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport React, { useState, useContext } from 'react';\nimport { title, Titlerender } from \"./Title_div.js\";\nimport Signup from \"./Signup.js\";\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../UserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forgotpassword() {\n  _s();\n\n  const [error, seterror] = useState(false);\n  let schema = yup.object().shape({\n    email: Yup.string().email('Invalid email address')\n  });\n  const history = useHistory();\n\n  function handleforgotpassword(data) {\n    let post_input = {\n      email: data\n    };\n    schema.isValid(post_input).then(function (valid) {\n      if (valid) {\n        axios.post('http://localhost:5000/forgotpassword', post_input).then(res => {\n          alert(\"An email with a reset token would be sent to your email if your email is already in our database.\");\n          history.push('/');\n        });\n      } else {}\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleforgotpassword,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Forgot Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"forgotpassword\",\n            id: \"forgotpassword\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: meta.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 52\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Forgotpassword, \"YcyM0p3vW68AgztCS4ghklnMImg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Forgotpassword;\nexport default Forgotpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forgotpassword\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Login_page/Forgotpassword.js"],"names":["React","useState","useContext","title","Titlerender","Signup","axios","GoogleLogin","useHistory","UserContext","Forgotpassword","error","seterror","schema","yup","object","shape","email","Yup","string","history","handleforgotpassword","data","post_input","isValid","then","valid","post","res","alert","push","meta","touched"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,KAAR,EAAcC,WAAd,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;;;AAEA,SAASC,cAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAAC,KAAD,CAA/B;AACA,MAAIY,MAAM,GAAEC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AAC7BC,IAAAA,KAAK,EAACC,GAAG,CAACC,MAAJ,GAAaF,KAAb,CAAmB,uBAAnB;AADuB,GAAnB,CAAZ;AAIA,QAAMG,OAAO,GAACZ,UAAU,EAAxB;;AACE,WAASa,oBAAT,CAA8BC,IAA9B,EAAmC;AAC/B,QAAIC,UAAU,GAAC;AAACN,MAAAA,KAAK,EAACK;AAAP,KAAf;AACAT,IAAAA,MAAM,CAACW,OAAP,CAAeD,UAAf,EAA2BE,IAA3B,CAAgC,UAASC,KAAT,EAAe;AAC/C,UAAGA,KAAH,EAAS;AACPpB,QAAAA,KAAK,CAACqB,IAAN,CAAW,sCAAX,EAAkDJ,UAAlD,EAA8DE,IAA9D,CAAoEG,GAAD,IAAO;AAC1EC,UAAAA,KAAK,CAAC,mGAAD,CAAL;AACAT,UAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AAAkB,SAFlB;AAGD,OAJD,MAIK,CAEJ;AACF,KARC;AASH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAET,oBAAhB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,gBAAxB;AAAyC,YAAA,EAAE,EAAC,gBAA5C;AAA6D,YAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGU,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACpB,KAArB,gBAA8B;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBoB,IAAI,CAACpB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAA9B,GAA2E,IAH9E,eAIE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAnCQD,c;UAMOF,U;;;KANPE,c;AAqCT,eAAeA,cAAf","sourcesContent":["import './Login.css';\r\nimport React, {useState, useContext} from 'react';\r\nimport {title,Titlerender} from \"./Title_div.js\"\r\nimport Signup from \"./Signup.js\"\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../UserContext.js'\r\n\r\nfunction Forgotpassword(){\r\n  const [error,seterror]=useState(false)\r\n  let schema =yup.object().shape({\r\n    email:Yup.string().email('Invalid email address'),\r\n  }) \r\n\r\n  const history=useHistory()\r\n    function handleforgotpassword(data){\r\n        let post_input={email:data}\r\n        schema.isValid(post_input).then(function(valid){\r\n        if(valid){\r\n          axios.post('http://localhost:5000/forgotpassword',post_input).then((res)=>{\r\n          alert(\"An email with a reset token would be sent to your email if your email is already in our database.\")\r\n          history.push('/')})\r\n        }else{\r\n\r\n        }\r\n      })\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-section\">\r\n          <div className=\"login-form\">\r\n              <div className=\"log-content\">\r\n                  <form onSubmit={handleforgotpassword}> \r\n                    <div>Forgot Password </div>\r\n                    <input type=\"text\" name=\"forgotpassword\" id=\"forgotpassword\" placeholder=\"Email\"  />\r\n                    {meta.touched && meta.error ? (<div className=\"error\">{meta.error}</div>) : null}\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n\r\n                  </form>  \r\n                  </div>\r\n              </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Forgotpassword"]},"metadata":{},"sourceType":"module"}