{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Action\\\\Challenge_status.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { UserContext, SocketContext } from '../../UserContext.js';\nimport { GamesContext, BlocksContext, PlayerListContext, AnalyticsDataContext, SachetContext } from '../GamesContext.js';\nimport Draw_button from \"./Draw_button.js\";\nimport Score_button from \"./Score_button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Faulty_word(word) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"word\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Faulty_word;\n\nfunction Challenge_status() {\n  _s();\n\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Challenge_status\",\n    children: [\"Player on challenge: \", (gamestateRef.current.challenge_index || gamestateRef.current.challenge_index == 0) && playerlistRef.current[gamestateRef.current.challenge_index].username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 79\n    }, this), \"Words placed by challenged player: \", gamestateRef.current.challenge_words.map((word, index) => {\n      /*#__PURE__*/\n      _jsxDEV(Faulty_word, {\n        word: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Challenge_status, \"fuNxW3NOtE2yLC/YYWsDjgw1E28=\");\n\n_c2 = Challenge_status;\nexport default Challenge_status;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Faulty_word\");\n$RefreshReg$(_c2, \"Challenge_status\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Action/Challenge_status.js"],"names":["React","useState","useContext","useEffect","useRef","UserContext","SocketContext","GamesContext","BlocksContext","PlayerListContext","AnalyticsDataContext","SachetContext","Draw_button","Score_button","Faulty_word","word","Challenge_status","playerlistState","setplayerlistState","gameState","setgameState","playerlistRef","gamestateRef","current","challenge_index","username","challenge_words","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,EAAmCC,SAAnC,EAA6CC,MAA7C,QAA0D,OAA1D;AACA,SAAQC,WAAR,EAAoBC,aAApB,QAAwC,sBAAxC;AACA,SAAQC,YAAR,EAAqBC,aAArB,EAAmCC,iBAAnC,EAAqDC,oBAArD,EAA0EC,aAA1E,QAA8F,oBAA9F;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AACxB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAJQD,W;;AAMT,SAASE,gBAAT,GAA4B;AAAA;;AAC1B,QAAM;AAACC,IAAAA,eAAD;AAAiBC,IAAAA;AAAjB,MAAqChB,UAAU,CAACO,iBAAD,CAArD;AACA,QAAM;AAACU,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBlB,UAAU,CAACK,YAAD,CAAzC;AAEA,QAAMc,aAAa,GAACjB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMkB,YAAY,GAAClB,MAAM,CAAC,IAAD,CAAzB;AAEAiB,EAAAA,aAAa,CAACE,OAAd,GAAsBN,eAAtB;AACAK,EAAAA,YAAY,CAACC,OAAb,GAAqBJ,SAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,wCACwB,CACpBG,YAAY,CAACC,OAAb,CAAqBC,eAArB,IAAwCF,YAAY,CAACC,OAAb,CAAqBC,eAArB,IAAsC,CAD1D,KAEpBH,aAAa,CAACE,OAAd,CAAsBD,YAAY,CAACC,OAAb,CAAqBC,eAA3C,EAA4DC,QAHhE,oBAG0E;AAAA;AAAA;AAAA;AAAA,YAH1E,yCAIsCH,YAAY,CAACC,OAAb,CAAqBG,eAArB,CAAqCC,GAArC,CAAyC,CAACZ,IAAD,EAAMa,KAAN,KAAc;AACvF;AAAA,cAAC,WAAD;AAAyB,QAAA,IAAI,EAAEb;AAA/B,SAAkBa,KAAlB;AAAA;AAAA;AAAA;AAAA;AACH,KAFmC,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApBQZ,gB;;MAAAA,gB;AAsBT,eAAeA,gBAAf","sourcesContent":["import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext,SocketContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport Draw_button from \"./Draw_button.js\";\r\nimport Score_button from \"./Score_button.js\";\r\n\r\nfunction Faulty_word(word){\r\n  return(\r\n    <div>word</div>\r\n  )\r\n}\r\n\r\nfunction Challenge_status() {\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n\r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n\r\n  return (\r\n    <div className=\"Challenge_status\">\r\n      Player on challenge: {(\r\n        gamestateRef.current.challenge_index || gamestateRef.current.challenge_index==0)&&\r\n        playerlistRef.current[gamestateRef.current.challenge_index].username} <br />\r\n      Words placed by challenged player: {gamestateRef.current.challenge_words.map((word,index)=>{\r\n          <Faulty_word key={index} word={word} /> \r\n      })}\r\n    </div>)\r\n     \r\n}\r\n\r\nexport default Challenge_status"]},"metadata":{},"sourceType":"module"}