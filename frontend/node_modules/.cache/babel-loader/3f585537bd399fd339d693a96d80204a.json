{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Login_page\\\\Signup.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Signup.css\";\nimport Popup from 'reactjs-popup';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input>. We can use field meta to show an error\n  // message if the field is invalid and it has been touched (i.e. visited)\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(MyInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", true);\n\n_c = MyInput;\n\nfunction Signup() {\n  _s2();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      repeatpassword: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string().min(6, \"Password is too short - should be 6 chars minimum.\").required('Password required'),\n      repeatpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: \" Open Modal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this),\n    modal: true,\n    nested: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"id01\",\n      className: \"modal \",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: close,\n        className: \"close\",\n        title: \"Close Modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modal-content\",\n        onSubmit: formik.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please fill in this form to create an account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\",\n            placeholder: \"Jane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"By creating an account you agree to our \", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"legal_agreement\",\n              href: \"#\",\n              children: \"Terms & Privacy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 58\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clearfix\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancelbtn\",\n              onClick: close,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"signupbtn\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Signup, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = Signup;\nexport default Signup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyInput\");\n$RefreshReg$(_c2, \"Signup\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Login_page/Signup.js"],"names":["React","useState","Popup","useFormik","Yup","MyInput","label","props","field","meta","useField","id","name","touched","error","Signup","formik","initialValues","username","email","password","repeatpassword","validationSchema","object","string","max","required","min","oneOf","ref","onSubmit","values","alert","JSON","stringify","close","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport \"./Signup.css\"\r\nimport Popup from 'reactjs-popup';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst MyInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input>. We can use field meta to show an error\r\n  // message if the field is invalid and it has been touched (i.e. visited)\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Signup(){\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: '',\r\n      email: '',\r\n      password:'',\r\n      repeatpassword:'',\r\n    },\r\n    validationSchema: Yup.object({\r\n      username: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\r\n      email: Yup.string().email('Invalid email address').required('Required'),\r\n      password:Yup.string().min(6,\"Password is too short - should be 6 chars minimum.\").required('Password required'),\r\n      repeatpassword:Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required'),\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n    return (\r\n\r\n      <Popup\r\n      trigger={<button className=\"button\"> Open Modal </button>}\r\n      modal \r\n      nested    \r\n    >\r\n      {close=>(\r\n        <div id=\"id01\" className=\"modal \" >\r\n          <span onClick={close} className=\"close\" title=\"Close Modal\">&times;</span>\r\n          <form className=\"modal-content\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"container\">\r\n              <h1>Sign Up</h1>\r\n              <p>Please fill in this form to create an account.</p>\r\n              <hr />\r\n              <MyInput label=\"First Name\"\r\n             name=\"firstName\"\r\n             type=\"text\"\r\n             placeholder=\"Jane\"\r\n           />\r\n        \r\n              <p>By creating an account you agree to our <a className=\"legal_agreement\" href=\"#\" >Terms & Privacy</a>.</p>\r\n        \r\n              <div className=\"clearfix\">\r\n                <button type=\"button\" className=\"cancelbtn\" onClick={close} >Cancel</button>\r\n                <button type=\"submit\" className=\"signupbtn\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n        </form>\r\n      </div>)}\r\n  </Popup>\r\n  )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}