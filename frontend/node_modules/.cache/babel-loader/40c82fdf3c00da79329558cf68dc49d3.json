{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Tile_container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useDrag } from 'react-dnd';\nimport './Tile_container.css';\nimport { DndProvider, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { UserContext } from '../../UserContext.js';\nimport { GamesContext, PlayerListContext } from '../GamesContext.js';\nimport { Tile } from '../Sachet.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [[2, 1, \"row\", \"horizontal\"], [1, 2, \"column\", \"vertical\"], [2, 3, \"row\", \"horizontal\"], [3, 2, \"column\", \"vertical\"]];\n\nfunction Tile_container(value) {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const container_name = \"tile_container \" + positions[value.player_num][3];\n  const containerstyle = {\n    gridColumn: positions[value.player_num][0],\n    gridRow: positions[value.player_num][1]\n  };\n  const holderstyle = {\n    display: \"flex\",\n    flexDirection: positions[value.player_num][2]\n  };\n  useEffect(() => {\n    let active_player_num = gameState.turn_num % gameState.player_num;\n    let your_index = gameState.Player_list.findIndex(Player => Player.username == profile.username);\n    let your_index_challenge = your_index == gameState.Player_list.length - 1 ? 0 : your_index + 1;\n    let temp_playerlist = [...playerlistState];\n\n    if (active_player_num == your_index) {\n      temp_playerlist[your_index].delete_active = true;\n      setplayerlistState(temp_playerlist);\n    }\n\n    if (active_player_num != your_index_challenge) {\n      temp_playerlist[your_index].challenge_active = true;\n      setplayerlistState(temp_playerlist);\n    } else {\n      temp_playerlist[your_index].challenge_active = false;\n      setplayerlistState(temp_playerlist);\n    }\n  }, [gameState.turn_num]);\n  /*\r\n  const moveTileHandler=(dragIndex,hoverIndex)=>{\r\n    const dragItem=gameState.Player_list[value.player_num].tiles[dragIndex];\r\n    if (dragItem){\r\n      setgameState((prevgameState=>{\r\n        const currentgameState={...prevgameState}\r\n        const prevItem=currentgameState.splice(hoverIndex,1,dragItem)\r\n        currentgameState.splice(dragIndex,1,prevItem[0])\r\n        return currentgameState\r\n      }))\r\n    }\r\n  }\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: container_name,\n    style: containerstyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name_display\",\n      children: playerlistState[value.player_num].username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score_display\",\n      children: playerlistState[value.player_num].score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile_holder\",\n      style: holderstyle,\n      children: playerlistState[value.player_num].tiles.map((tile, pos) => /*#__PURE__*/_jsxDEV(Tile, {\n        tile: tile\n      }, pos, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"challengebtn\",\n      visibility: playerlistState[value.player_num].challenge_active ? \"visible\" : \"hidden\",\n      children: \"Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \".../UI_component/delete.png\",\n      className: \"delete_img\",\n      visibility: playerlistState[value.player_num].delete_active ? \"visible\" : \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Tile_container, \"61GU0k0rITkdkeY76QrUB1VEjBw=\");\n\n_c = Tile_container;\nexport default Tile_container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile_container\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Tile_container.js"],"names":["React","useContext","useState","useEffect","useDrag","DndProvider","useDrop","HTML5Backend","UserContext","GamesContext","PlayerListContext","Tile","positions","Tile_container","value","profile","setprofile","gameState","setgameState","playerlistState","setplayerlistState","container_name","player_num","containerstyle","gridColumn","gridRow","holderstyle","display","flexDirection","active_player_num","turn_num","your_index","Player_list","findIndex","Player","username","your_index_challenge","length","temp_playerlist","delete_active","challenge_active","score","tiles","map","tile","pos"],"mappings":"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","sourcesContent":["import React,{useContext,useState,useEffect} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext,PlayerListContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\n\r\nconst positions=[[2,1,\"row\",\"horizontal\"],[1,2,\"column\",\"vertical\"],[2,3,\"row\",\"horizontal\"],[3,2,\"column\",\"vertical\"]];\r\n\r\nfunction Tile_container(value) {\r\n  \r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n\r\n    const container_name=\"tile_container \"+positions[value.player_num][3]\r\n    const containerstyle={\r\n      gridColumn:positions[value.player_num][0],\r\n      gridRow:positions[value.player_num][1],\r\n    }\r\n    const holderstyle={\r\n      display:\"flex\",\r\n      flexDirection:positions[value.player_num][2]\r\n    }\r\n    useEffect(()=>{\r\n      let active_player_num=gameState.turn_num%gameState.player_num\r\n      let your_index=gameState.Player_list.findIndex((Player)=>Player.username==profile.username)\r\n      let your_index_challenge = (your_index==gameState.Player_list.length-1) ? 0 : your_index+1\r\n      let temp_playerlist=[...playerlistState]\r\n      if(active_player_num==your_index){\r\n        temp_playerlist[your_index].delete_active=true\r\n        setplayerlistState(temp_playerlist)\r\n      }\r\n      if(active_player_num!=your_index_challenge){  \r\n        temp_playerlist[your_index].challenge_active=true\r\n        setplayerlistState(temp_playerlist)\r\n      }else{\r\n        temp_playerlist[your_index].challenge_active=false\r\n        setplayerlistState(temp_playerlist)\r\n      }\r\n    },[gameState.turn_num])\r\n    /*\r\n    const moveTileHandler=(dragIndex,hoverIndex)=>{\r\n      const dragItem=gameState.Player_list[value.player_num].tiles[dragIndex];\r\n      if (dragItem){\r\n        setgameState((prevgameState=>{\r\n          const currentgameState={...prevgameState}\r\n          const prevItem=currentgameState.splice(hoverIndex,1,dragItem)\r\n          currentgameState.splice(dragIndex,1,prevItem[0])\r\n          return currentgameState\r\n        }))\r\n      }\r\n    }\r\n    */\r\n\r\n    \r\n    return (\r\n      \r\n      <div className={container_name} style={containerstyle}>\r\n          <div className=\"name_display\">{playerlistState[value.player_num].username}</div>   \r\n          <div className=\"score_display\">{playerlistState[value.player_num].score}</div> \r\n          <div className=\"tile_holder\" style={holderstyle}>\r\n\r\n              \r\n                {playerlistState[value.player_num].tiles.map((tile,pos)=>(\r\n                  <Tile tile={tile} key={pos}/>\r\n                ))}  \r\n              \r\n          </div>\r\n          <button type=\"button\" className=\"challengebtn\" visibility={playerlistState[value.player_num].challenge_active?\"visible\":\"hidden\"}>Challenge</button> \r\n          <img src=\".../UI_component/delete.png\" className=\"delete_img\" visibility={playerlistState[value.player_num].delete_active?\"visible\":\"hidden\"} />                \r\n      </div>\r\n    );\r\n    \r\n  }\r\n    \r\nexport default Tile_container;"]},"metadata":{},"sourceType":"module"}