{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Main_page\\\\Rooms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef } from 'react';\nimport Popup from 'reactjs-popup';\nimport axios from 'axios';\nimport { UserContext } from '../UserContext.js';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rooms(prop) {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const [rooms, setrooms] = useState([]);\n  const [room_selected, setroom_selected] = useState('');\n  const [fresh, setfresh] = useState(true);\n  const room_focus = useRef();\n  useEffect(() => {\n    axios.get(\"search_rooms\").then(res => setrooms(res.data));\n  }, [, fresh]);\n\n  function room_select(server_element) {\n    if (room_focus.current) room_selected.current.style.backgroundColor = \"green\";\n    room_focus = server_element;\n    setroom_selected(room_focus.innerHTML);\n    room_selected.current.style.backgroundColor = \"white\";\n  }\n\n  function join_room() {\n    if (room_selected) {\n      prop.history.push('/Mainpage/' + room_selected);\n      axios.put(\"join_room\", {\n        username: profile.username,\n        room: room_selected\n      });\n    } else {\n      alert(\"Please select a room to join first!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: \" Join server \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this),\n    modal: true,\n    nested: true,\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Room_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: close,\n        className: \"close\",\n        title: \"Close Modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Room_holder\",\n        children: rooms.map((room, pos) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile\",\n          onClick: e => room_select(e),\n          children: room.id\n        }, pos, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"refreshbtn\",\n        onClick: () => {\n          setfresh(!fresh);\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"joinbtn\",\n        onClick: join_room,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"cancelbtn\",\n        onClick: close,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Rooms, \"/rP4feDszTM7jEmofBLnAhECWd8=\");\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Main_page/Rooms.js"],"names":["React","useState","useContext","useRef","Popup","axios","UserContext","useHistory","Rooms","prop","profile","setprofile","rooms","setrooms","room_selected","setroom_selected","fresh","setfresh","room_focus","useEffect","get","then","res","data","room_select","server_element","current","style","backgroundColor","innerHTML","join_room","history","push","put","username","room","alert","close","map","pos","e","id"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useRef} from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport axios from 'axios';\r\nimport {UserContext} from '../UserContext.js'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Rooms(prop) {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const [rooms,setrooms] =useState([])\r\n    const [room_selected,setroom_selected] =useState('')\r\n    const [fresh,setfresh] =useState(true)\r\n    const room_focus =useRef()\r\n    \r\n    useEffect(()=>{\r\n        axios.get(\"search_rooms\").then((res)=>setrooms(res.data))\r\n    },[ ,fresh])\r\n\r\n    function room_select(server_element){\r\n        if (room_focus.current) \r\n          room_selected.current.style.backgroundColor=\"green\"\r\n        room_focus = server_element\r\n        setroom_selected(room_focus.innerHTML)\r\n        room_selected.current.style.backgroundColor=\"white\"       \r\n    }\r\n\r\n    function join_room(){\r\n        if (room_selected){\r\n            prop.history.push('/Mainpage/'+room_selected)\r\n            axios.put(\"join_room\",{username:profile.username,room:room_selected})\r\n        }else{\r\n            alert(\"Please select a room to join first!\")\r\n        }\r\n    }\r\n\r\n      return (\r\n        <Popup\r\n        trigger={<button className=\"button\"> Join server </button>}\r\n        modal \r\n        nested    \r\n        >\r\n        {close=>(\r\n        <div className=\"Room_container\">\r\n            <span onClick={close} className=\"close\" title=\"Close Modal\">&times;</span>\r\n            <div className=\"Room_holder\">\r\n                {rooms.map((room,pos)=>(\r\n                    <div className=\"tile\" key={pos} onClick={(e)=>room_select(e)}>{room.id}</div>\r\n                ))} \r\n            </div>\r\n            <button type=\"button\" className=\"refreshbtn\" onClick={()=>{setfresh(!fresh)}}>Refresh</button> \r\n            <button type=\"submit\" className=\"joinbtn\" onClick={join_room}>Join Room</button> \r\n            <button type=\"button\" className=\"cancelbtn\" onClick={close}>Cancel</button>   \r\n        </div>)}\r\n        </Popup>\r\n      );\r\n  }\r\n    \r\n    export default Rooms;"]},"metadata":{},"sourceType":"module"}