{"ast":null,"code":"import sachet from './Sachet.js';\n\nclass Player {\n  constructor(username) {\n    this.username = username;\n    this.score = 0;\n    this.tiles = [];\n    this.active = false;\n    this.delete_active = false;\n    this.challenge_active = false;\n  }\n\n  draw() {\n    while (this.tiles.length < 7 && !sachet.length == 0) {\n      let index = sachet.length * Math.random() << 0;\n      let chosen_tile = sachet[index];\n      sachet.splice(index, 1);\n      this.tiles.push(chosen_tile);\n    }\n  }\n\n  draw_by_tile(tiles) {\n    for (let tile in tiles) {\n      let i = sachet.findIndex(tile);\n      sachet.splice(i, 1);\n    }\n  }\n\n  remove(tile) {\n    if (Array.isArray(tile)) {\n      for (let i = 0; i < tile.length; i++) {\n        let index = this.tiles.indexOf(tile[i]);\n        this.tiles.splice(index, 1);\n      }\n    } else {\n      for (let i = 0; i < this.tiles.length; i++) {\n        if (tile.querySelectorAll(\"p\")[0].innerHTML == this.tiles[i].querySelectorAll(\"p\")[0].innerHTML) {\n          this.tiles.splice(i, 1);\n          return;\n        }\n      }\n\n      throw \"this tile is not in this list\";\n    }\n  }\n\n}\n\nexport { Player };","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Player.js"],"names":["sachet","Player","constructor","username","score","tiles","active","delete_active","challenge_active","draw","length","index","Math","random","chosen_tile","splice","push","draw_by_tile","tile","i","findIndex","remove","Array","isArray","indexOf","querySelectorAll","innerHTML"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,MAAN,CAAY;AACRC,EAAAA,WAAW,CAACC,QAAD,EAAU;AACnB,SAAKA,QAAL,GAAcA,QAAd;AACA,SAAKC,KAAL,GAAW,CAAX;AACA,SAAKC,KAAL,GAAW,EAAX;AACA,SAAKC,MAAL,GAAY,KAAZ;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACA,SAAKC,gBAAL,GAAsB,KAAtB;AACD;;AAEDC,EAAAA,IAAI,GAAE;AAEF,WAAM,KAAKJ,KAAL,CAAWK,MAAX,GAAkB,CAAlB,IAAuB,CAACV,MAAM,CAACU,MAAR,IAAgB,CAA7C,EAA+C;AAC3C,UAAIC,KAAK,GAACX,MAAM,CAACU,MAAP,GAAcE,IAAI,CAACC,MAAL,EAAd,IAA6B,CAAvC;AACA,UAAIC,WAAW,GAACd,MAAM,CAACW,KAAD,CAAtB;AACAX,MAAAA,MAAM,CAACe,MAAP,CAAcJ,KAAd,EAAoB,CAApB;AACA,WAAKN,KAAL,CAAWW,IAAX,CAAgBF,WAAhB;AACH;AACJ;;AAEDG,EAAAA,YAAY,CAACZ,KAAD,EAAO;AACf,SAAK,IAAIa,IAAT,IAAiBb,KAAjB,EAAuB;AACnB,UAAIc,CAAC,GAACnB,MAAM,CAACoB,SAAP,CAAiBF,IAAjB,CAAN;AACAlB,MAAAA,MAAM,CAACe,MAAP,CAAcI,CAAd,EAAgB,CAAhB;AACC;AACJ;;AAGLE,EAAAA,MAAM,CAACH,IAAD,EAAM;AACV,QAAII,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAwB;AAEpB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAED,IAAI,CAACR,MAAxB,EAAgCS,CAAC,EAAjC,EAAoC;AAChC,YAAIR,KAAK,GAAG,KAAKN,KAAL,CAAWmB,OAAX,CAAmBN,IAAI,CAACC,CAAD,CAAvB,CAAZ;AACA,aAAKd,KAAL,CAAWU,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACH;AAEJ,KAPD,MAOK;AAEL,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAE,KAAKd,KAAL,CAAWK,MAA9B,EAAsCS,CAAC,EAAvC,EAA0C;AACtC,YAAID,IAAI,CAACO,gBAAL,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,IAAyC,KAAKrB,KAAL,CAAWc,CAAX,EAAcM,gBAAd,CAA+B,GAA/B,EAAoC,CAApC,EAAuCC,SAApF,EAA8F;AAC1F,eAAKrB,KAAL,CAAWU,MAAX,CAAkBI,CAAlB,EAAqB,CAArB;AACA;AACC;AACJ;;AACD,YAAM,+BAAN;AACH;AAGJ;;AAhDS;;AAmDV,SAAQlB,MAAR","sourcesContent":["import sachet from './Sachet.js'\r\n\r\nclass Player{\r\n    constructor(username){\r\n      this.username=username;\r\n      this.score=0;\r\n      this.tiles=[];\r\n      this.active=false\r\n      this.delete_active=false;\r\n      this.challenge_active=false;    \r\n    }\r\n  \r\n    draw(){\r\n        \r\n        while(this.tiles.length<7 && !sachet.length==0){\r\n            let index=sachet.length*Math.random()<<0\r\n            let chosen_tile=sachet[index]\r\n            sachet.splice(index,1)\r\n            this.tiles.push(chosen_tile);        \r\n        }   \r\n    }\r\n\r\n    draw_by_tile(tiles){\r\n        for (let tile in tiles){    \r\n            let i=sachet.findIndex(tile)\r\n            sachet.splice(i,1)    \r\n            }      \r\n        }\r\n    \r\n\r\n    remove(tile){\r\n      if (Array.isArray(tile)){\r\n  \r\n          for (let i = 0; i< tile.length; i++){\r\n              let index = this.tiles.indexOf(tile[i]);\r\n              this.tiles.splice(index, 1)\r\n          }\r\n  \r\n      }else{\r\n  \r\n      for (let i = 0; i< this.tiles.length; i++){\r\n          if (tile.querySelectorAll(\"p\")[0].innerHTML==this.tiles[i].querySelectorAll(\"p\")[0].innerHTML){\r\n              this.tiles.splice(i, 1)\r\n              return\r\n              }\r\n          }\r\n          throw \"this tile is not in this list\"\r\n      }\r\n      \r\n      \r\n  }\r\n  }\r\n\r\n  export {Player}"]},"metadata":{},"sourceType":"module"}