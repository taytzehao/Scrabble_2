{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Sachet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from 'react';\nimport './Sachet.css';\nimport { Invisible_tile_context, GamesContext } from './GamesContext.js';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alphabet_data = [[\"A\", 9, 1], [\"B\", 2, 3], [\"C\", 2, 3], [\"D\", 4, 2], [\"E\", 12, 1], [\"F\", 2, 4], [\"G\", 3, 2], [\"H\", 2, 4], [\"I\", 9, 1], [\"J\", 1, 8], [\"K\", 1, 5], [\"L\", 4, 1], [\"M\", 2, 3], [\"N\", 6, 1], [\"O\", 8, 1], [\"P\", 2, 3], [\"Q\", 1, 10], [\"R\", 6, 1], [\"S\", 4, 1], [\"T\", 6, 1], [\"U\", 4, 1], [\"V\", 2, 4], [\"W\", 2, 4], [\"X\", 1, 8], [\"Y\", 2, 4], [\"Z\", 1, 10], [\" \", 2, 0]];\n\nfunction Tile(values) {\n  _s();\n\n  const {\n    tile_visibility,\n    set_tile_visibility\n  } = useContext(Invisible_tile_context);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  playerlistRef.current = playerlistState;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: values.tile.active ? \"active\" : \"inactive\",\n    item: {\n      type: values.tile.active ? \"active\" : \"inactive\",\n      id: values.tile.id,\n      index: values.tile.index\n    },\n    canDrag: () => values.tile.canDrag,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const [, drop] = useDrop({\n    accept: [\"active\", \"inactive\"],\n    canDrop: () => values.tile.canDrop,\n\n    drop(item, monitor) {\n      var _ref$current;\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = values.tile.index;\n\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n      const clientOffset = monitor.getClientOffset();\n\n      if (values.orientation == \"horizontal\") {\n        let live_coordinate = clientOffset.x;\n        let ref_coordinate = hoverBoundingRect.left + hoverBoundingRect.width / 2;\n      } else {\n        let live_coordinate = clientOffset.y;\n        let ref_coordinate = hoverBoundingRect.top - hoverBoundingRect.height / 2;\n      }\n\n      let temp_tiles = your;\n\n      if (live_coordinate < ref_coordinate) {}\n\n      moveCardHandler(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n\n  });\n  let tile_name = \"game_tile\";\n\n  if (values.tile.placed) {\n    tile_name = tile_name + \" placed\";\n  }\n\n  const content_style = {\n    visibility: tile_visibility\n  };\n  const dragstyle = {\n    opacity: isDragging ? 0.5 : 1\n  };\n  drop(drag(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tile_name,\n    ref: ref,\n    style: dragstyle,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: content_style,\n      children: values.tile.alphabet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: content_style,\n      children: values.tile.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tile, \"b202AioUJ+iNXOt6PyIsRntIsT8=\", false, function () {\n  return [useDrag, useDrop];\n});\n\n_c = Tile;\nconst sachet = [];\nconst analytics_data = [];\nlet tile_id = 0;\n\nfor (let i = 0; i < alphabet_data.length; i++) {\n  for (let j = 0; j < alphabet_data[i][1]; j++) {\n    sachet.push({\n      alphabet: alphabet_data[i][0],\n      score: alphabet_data[i][2],\n      id: tile_id,\n      placed: false,\n      just_added: false,\n      challenge: false,\n      active: true,\n      canDrag: false,\n      canDrop: false,\n      index: null\n    });\n    tile_id += 1;\n  }\n\n  analytics_data.push({\n    alphabet: alphabet_data[i][0],\n    num: alphabet_data[i][1]\n  });\n}\n\nexport { analytics_data, Tile };\nexport default sachet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Sachet.js"],"names":["React","useContext","useEffect","useRef","Invisible_tile_context","GamesContext","useDrag","useDrop","alphabet_data","Tile","values","tile_visibility","set_tile_visibility","playerlistState","setplayerlistState","PlayerListContext","gameState","setgameState","boardState","setboardState","BlocksContext","playerlistRef","gamestateRef","boardstateRef","current","ref","isDragging","drag","type","tile","active","item","id","index","canDrag","collect","monitor","drop","accept","canDrop","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","clientOffset","getClientOffset","orientation","live_coordinate","x","ref_coordinate","left","width","y","top","height","temp_tiles","your","moveCardHandler","tile_name","placed","content_style","visibility","dragstyle","opacity","alphabet","score","sachet","analytics_data","tile_id","i","length","j","push","just_added","challenge","num"],"mappings":"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","sourcesContent":["import React,{useContext,useEffect,useRef} from 'react';\r\nimport './Sachet.css';\r\nimport {Invisible_tile_context,GamesContext} from './GamesContext.js';\r\nimport {useDrag,useDrop} from 'react-dnd'\r\n\r\n\r\nconst alphabet_data = [[\"A\",9,1],[\"B\",2,3],[\"C\",2,3],[\"D\",4,2],[\"E\",12,1],[\"F\",2,4],[\"G\",3,2],\r\n                        [\"H\",2,4],[\"I\",9,1],[\"J\",1,8],[\"K\",1,5],[\"L\",4,1],[\"M\",2,3],[\"N\",6,1],\r\n                        [\"O\",8,1],[\"P\",2,3],[\"Q\",1,10],[\"R\",6,1],[\"S\",4,1],[\"T\",6,1],[\"U\",4,1],\r\n                        [\"V\",2,4],[\"W\",2,4],[\"X\",1,8],[\"Y\",2,4],[\"Z\",1,10],[\" \",2,0]]\r\n\r\nfunction Tile (values){\r\n    const {tile_visibility,set_tile_visibility}=useContext(Invisible_tile_context)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)   \r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n\r\n    playerlistRef.current=playerlistState\r\n\r\n\r\n    const ref = useRef(null)\r\n   \r\n    const [{isDragging},drag]=useDrag({\r\n        type: (values.tile.active) ? \"active\":\"inactive\",\r\n        item:{\r\n            type:(values.tile.active) ? \"active\":\"inactive\",\r\n            id:values.tile.id,\r\n            index: values.tile.index\r\n        },\r\n        canDrag:()=>values.tile.canDrag,\r\n        collect: monitor => ({\r\n            isDragging: !! monitor.isDragging()\r\n        })\r\n    })\r\n    \r\n    const [,drop]=useDrop({\r\n        accept: [\"active\",\"inactive\"],\r\n        canDrop:()=>values.tile.canDrop,\r\n        drop(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = values.tile.index;\r\n            \r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            \r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();            \r\n            const clientOffset = monitor.getClientOffset();\r\n            \r\n            if(values.orientation==\"horizontal\"){\r\n                let live_coordinate=clientOffset.x;\r\n                let ref_coordinate=hoverBoundingRect.left+hoverBoundingRect.width/2\r\n            }else{\r\n                let live_coordinate=clientOffset.y;\r\n                let ref_coordinate=hoverBoundingRect.top-hoverBoundingRect.height/2\r\n            }\r\n            let temp_tiles=your\r\n            if (live_coordinate<ref_coordinate){\r\n                \r\n            }\r\n            \r\n            \r\n            moveCardHandler(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    })\r\n    \r\n    let tile_name=\"game_tile\"\r\n    if(values.tile.placed){tile_name = tile_name + \" placed\"}\r\n    const content_style={visibility:tile_visibility}\r\n    const dragstyle={opacity:(isDragging) ? 0.5 : 1}\r\n    drop(drag(ref))\r\n    return(\r\n        <div className={tile_name} ref={ref} style={dragstyle}>\r\n        <p style={content_style}>{values.tile.alphabet}</p>\r\n        <p style={content_style}>{values.tile.score}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst sachet = []\r\nconst analytics_data = []\r\nlet tile_id=0\r\nfor (let i=0;i<alphabet_data.length;i++){\r\n    for (let j=0;j<alphabet_data[i][1];j++){\r\n        sachet.push({\r\n            alphabet:alphabet_data[i][0],\r\n            score:alphabet_data[i][2],\r\n            id:tile_id,\r\n            placed:false,\r\n            just_added:false,\r\n            challenge:false,\r\n            active:true,\r\n            canDrag:false,\r\n            canDrop:false,\r\n            index:null\r\n        }) \r\n        tile_id+=1 \r\n    } \r\n    analytics_data.push({alphabet:alphabet_data[i][0],num:alphabet_data[i][1]})\r\n}\r\nexport {analytics_data,Tile}\r\n\r\nexport default sachet;\r\n\r\n"]},"metadata":{},"sourceType":"module"}