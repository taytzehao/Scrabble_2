{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Delete_logo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useDrag } from 'react-dnd';\nimport './Tile_container.css';\nimport { DndProvider, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { GamesContext, PlayerListContext, BlocksContext } from '../GamesContext.js';\nimport { Tile } from '../Sachet.js';\nimport { SocketContext, UserContext } from '../../UserContext.js';\nimport delete_logo from '../../UI_component/delete.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Delete_logo(value) {\n  _s();\n\n  const websocket = useContext(SocketContext);\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const drawstyle = {\n    opacity: playerlistState[value.player_num].delete_active ? 1 : 0.5\n  };\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"active\",\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    }),\n    canDrop: () => playerlistRef.current[gamestateRef.current.your_index].active && !gamestateRef.current.just_added,\n    drop: tile => addDelete(tile)\n  }));\n\n  function container_delete_state(drag_container, delete_tile) {\n    setplayerlistState(prevplayerlistState => {\n      let newplayerlistState = [...prevplayerlistState];\n      newplayerlistState[gamestateRef.current.player_turn].tiles = drag_container;\n      newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile);\n      return newplayerlistState;\n    });\n  }\n\n  function board_delete_state(board_index, drag_block, delete_tile) {\n    setboardState(prevboardState => {\n      let newboardState = { ...prevboardState\n      };\n      newboardState.blocks[board_index] = drag_block;\n      return newboardState;\n    });\n    setplayerlistState(prevplayerlistState => {\n      let newplayerlistState = [...prevplayerlistState];\n      newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile);\n      return newplayerlistState;\n    });\n  }\n\n  function addDelete(drop_tile) {\n    let drag_block;\n    let drag_container;\n    let delete_tile;\n\n    if (drop_tile.board_index) {\n      delete_tile = boardstateRef.current.blocks[drop_tile.board_index].content;\n      delete_tile.container_index = undefined;\n      delete_tile.board_index = undefined;\n      delete_tile.placed = false;\n      delete_tile.just_added = false;\n      drag_block = boardstateRef.current.blocks[drop_tile.board_index];\n      drag_block.content = null;\n      board_delete_state(drop_tile.board_index, drag_block, delete_tile);\n    } else {\n      delete_tile = playerlistRef.current[gamestateRef.current.player_turn].tiles[drop_tile.container_index];\n      delete_tile.container_index = undefined;\n      drag_container = playerlistRef.current[gamestateRef.current.player_turn].tiles.filter(tile => tile.id != drop_tile.id);\n\n      for (let i = 0; i < drag_container.length; i++) {\n        drag_container[i].container_index = i;\n      }\n\n      container_delete_state(drag_container, delete_tile);\n    }\n\n    websocket.current.emit(\"emit_delete_tile\", {\n      room_id: gamestateRef.current.room_id,\n      player_turn: gamestateRef.current.player_turn,\n      drag_board: drop_tile.board_index ? drag_block : drop_tile.board_index,\n      drag_container: drop_tile.container_index ? drag_container : drop_tile.container_index,\n      tile: delete_tile\n    });\n  }\n\n  useEffect(() => {\n    websocket.current.on(\"delete_tile\", socket_out => {\n      if (socket_out.drag_block) {\n        board_delete_state(socket_out.drag_container, socket_out.delete_tile);\n      } else {\n        container_delete_state(socket_out.board_index, socket_out.drag_block, socket_out.delete_tile);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: delete_logo,\n      ref: drop,\n      className: \"delete_img\",\n      visibility: playerlistState[value.player_num].delete_active ? \"visible\" : \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Delete_logo, \"5LtD/1BlcJvscXVKlJceSrv8ku8=\", false, function () {\n  return [useDrop];\n});\n\n_c = Delete_logo;\nexport default Delete_logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Delete_logo\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Delete_logo.js"],"names":["React","useContext","useState","useEffect","useRef","useDrag","DndProvider","useDrop","HTML5Backend","GamesContext","PlayerListContext","BlocksContext","Tile","SocketContext","UserContext","delete_logo","Delete_logo","value","websocket","profile","setprofile","gameState","setgameState","playerlistState","setplayerlistState","boardState","setboardState","drawstyle","opacity","player_num","delete_active","playerlistRef","gamestateRef","boardstateRef","current","isOver","drop","accept","collect","monitor","canDrop","your_index","active","just_added","tile","addDelete","container_delete_state","drag_container","delete_tile","prevplayerlistState","newplayerlistState","player_turn","tiles","delete_list","push","board_delete_state","board_index","drag_block","prevboardState","newboardState","blocks","drop_tile","content","container_index","undefined","placed","filter","id","i","length","emit","room_id","drag_board","on","socket_out"],"mappings":"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","sourcesContent":["import React,{useContext,useState,useEffect,useRef} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\nimport {SocketContext, UserContext} from '../../UserContext.js';\r\nimport delete_logo from '../../UI_component/delete.png';\r\n\r\nfunction Delete_logo(value){\r\n  const websocket=useContext(SocketContext)\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const drawstyle={opacity:(playerlistState[value.player_num].delete_active) ?  1: 0.5 }\r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n\r\n    const [{isOver},drop] = useDrop(()=>({\r\n      accept: \"active\",\r\n      collect:monitor=>({\r\n          isOver:!!monitor.isOver(),\r\n      }),\r\n      canDrop: ()=>playerlistRef.current[gamestateRef.current.your_index].active && !gamestateRef.current.just_added,\r\n      drop: (tile)=> addDelete(tile),\r\n    })); \r\n    function container_delete_state(drag_container,delete_tile){\r\n      setplayerlistState(prevplayerlistState=>{\r\n        let newplayerlistState=[...prevplayerlistState]\r\n        newplayerlistState[gamestateRef.current.player_turn].tiles=drag_container\r\n        newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile)    \r\n        return newplayerlistState\r\n      })\r\n    }\r\n\r\n    function board_delete_state(board_index,drag_block,delete_tile){\r\n      setboardState(prevboardState=>{\r\n        let newboardState={...prevboardState}\r\n        newboardState.blocks[board_index]=drag_block\r\n        return newboardState\r\n      })\r\n      setplayerlistState(prevplayerlistState=>{\r\n        let newplayerlistState=[...prevplayerlistState] \r\n        newplayerlistState[gamestateRef.current.player_turn].delete_list.push(delete_tile) \r\n        return newplayerlistState\r\n      })\r\n    }\r\n  \r\n      function addDelete(drop_tile){\r\n        let drag_block\r\n        let drag_container\r\n        let delete_tile\r\n        if (drop_tile.board_index) {\r\n          delete_tile=boardstateRef.current.blocks[drop_tile.board_index].content \r\n          delete_tile.container_index=undefined\r\n          delete_tile.board_index=undefined\r\n          delete_tile.placed=false\r\n          delete_tile.just_added=false\r\n          drag_block=boardstateRef.current.blocks[drop_tile.board_index]\r\n          drag_block.content=null\r\n          board_delete_state(drop_tile.board_index,drag_block,delete_tile)\r\n        }else{\r\n          delete_tile=playerlistRef.current[gamestateRef.current.player_turn].tiles[drop_tile.container_index]\r\n          delete_tile.container_index=undefined\r\n          drag_container=playerlistRef.current[gamestateRef.current.player_turn].tiles.filter(tile=>tile.id!=drop_tile.id);\r\n          for (let i=0;i<drag_container.length;i++){drag_container[i].container_index=i}\r\n          container_delete_state(drag_container,delete_tile)\r\n        }\r\n        websocket.current.emit(\"emit_delete_tile\",{\r\n          room_id:gamestateRef.current.room_id,\r\n          player_turn:gamestateRef.current.player_turn,\r\n          drag_board:(drop_tile.board_index)?drag_block:drop_tile.board_index,   \r\n          drag_container:(drop_tile.container_index)?drag_container:drop_tile.container_index,\r\n          tile:delete_tile,\r\n        })\r\n      }\r\n      useEffect(()=>{\r\n        websocket.current.on(\"delete_tile\",(socket_out)=>{\r\n          \r\n          if(socket_out.drag_block){\r\n            board_delete_state(socket_out.drag_container,socket_out.delete_tile)\r\n          }else{\r\n            container_delete_state(socket_out.board_index,socket_out.drag_block,socket_out.delete_tile)\r\n          } \r\n      })\r\n      },[])\r\n    \r\n      return(\r\n          <div>\r\n              <img src={delete_logo} ref={drop} className=\"delete_img\" visibility={playerlistState[value.player_num].delete_active?\"visible\":\"hidden\"} />\r\n          </div>\r\n      )\r\n}\r\n\r\nexport default Delete_logo"]},"metadata":{},"sourceType":"module"}