{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Tile_container.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport './Tile_container.css';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { useDrop } from 'react-dnd';\nimport { UserContext } from '../../UserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [[2, 1, \"horizontal\"], [1, 2, \"vertical\"], [2, 3, \"horizontal\"], [3, 2, \"vertical\"]];\n\nfunction tile_container(player) {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const [tile_context, set_tile_context] = useState({\n    invisible_content: false,\n    draggable: false,\n    active_drag: false\n  });\n  const containerstyle = {\n    gridColumn: positions[player.num - 1][0],\n    gridRow: positions[player.num - 1][1],\n    flexDirection: positions[player.num - 1][2]\n  };\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"active\",\n    drop: tile => rearrangeTile(tile.id)\n  }));\n\n  const rearrangeTile = tile => {\n    if (!tile_content) {\n      set_tile_content([tile]);\n    }\n  };\n\n  const your_profile = player.username == profile.username;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile_container\",\n    style: containerstyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: player.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: player.score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile_holder\",\n      children: /*#__PURE__*/_jsxDEV(DndProvider, {\n        backend: HTML5Backend,\n        children: player.tiles.map(tile => ({\n          tile\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"challengebtn\",\n      visibility: player.active,\n      children: \"Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \".../UI_component/delete.png\",\n      className: \"delete_img\",\n      visibility: player.challenge_active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(tile_container, \"09Y2i2f4lu5ATiica8vdllrpMc8=\", false, function () {\n  return [useDrop];\n});\n\nexport default tile_container;","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Tile_container.js"],"names":["React","useDrag","DndProvider","HTML5Backend","useDrop","UserContext","positions","tile_container","player","profile","setprofile","useContext","tile_context","set_tile_context","useState","invisible_content","draggable","active_drag","containerstyle","gridColumn","num","gridRow","flexDirection","isOver","drop","accept","tile","rearrangeTile","id","tile_content","set_tile_content","your_profile","username","score","tiles","map","active","challenge_active"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport './Tile_container.css'\r\nimport {DndProvider} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {useDrop} from 'react-dnd'\r\nimport {UserContext} from '../../UserContext.js'\r\n\r\nconst positions=[[2,1,\"horizontal\"],[1,2,\"vertical\"],[2,3,\"horizontal\"],[3,2,\"vertical\"]];\r\n\r\nfunction tile_container(player) {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const [tile_context,set_tile_context]=useState({\r\n      invisible_content:false,\r\n      draggable:false,\r\n      active_drag:false\r\n    })\r\n\r\n    const containerstyle={\r\n      gridColumn:positions[player.num-1][0],\r\n      gridRow:positions[player.num-1][1],\r\n      flexDirection:positions[player.num-1][2]\r\n    }\r\n\r\n    const [{isOver},drop] = useDrop(()=>({\r\n      accept: \"active\",\r\n      drop: (tile)=> rearrangeTile(tile.id),\r\n  }));  \r\n\r\n  const rearrangeTile = (tile) =>{\r\n      if (!tile_content){\r\n          \r\n          set_tile_content([tile])\r\n      }\r\n  }\r\n\r\n    const your_profile= player.username==profile.username\r\n      return (\r\n        \r\n        <div className=\"tile_container\" style={containerstyle}>\r\n            <div>{player.username}</div>   \r\n            <div>{player.score}</div> \r\n            <div className=\"tile_holder\">\r\n                <DndProvider backend={HTML5Backend}>\r\n                  {player.tiles.map((tile)=>(\r\n                \r\n                    {tile}\r\n                  ))}  \r\n                </DndProvider>\r\n            </div>\r\n            <button type=\"button\" className=\"challengebtn\" visibility={player.active}>Challenge</button> \r\n            <img src=\".../UI_component/delete.png\" className=\"delete_img\" visibility={player.challenge_active} />                \r\n        </div>\r\n      );\r\n  }\r\n    \r\nexport default tile_container;"]},"metadata":{},"sourceType":"module"}