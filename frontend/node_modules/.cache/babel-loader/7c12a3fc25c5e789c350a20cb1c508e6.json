{"ast":null,"code":"import sachet from './Sachet.js';\n\nclass Player {\n  constructor(username) {\n    this.username = username;\n    this.score = 0;\n    this.tiles = [];\n    this.active = false;\n    this.delete_active = false;\n    this.challenge_active = false;\n  }\n\n  draw() {\n    while (this.tiles.length < 7 && !sachet.length == 0) {\n      let index = sachet.length * Math.random() << 0;\n      let chosen_tile = sachet[index];\n      sachet.splice(index, 1);\n      this.tiles.push(chosen_tile);\n    }\n  }\n\n  draw_by_alphabet(alphabets) {\n    console.log(\"----------0000000000000\");\n\n    for (let i = 0; i < alphabets.length; i++) {\n      console.log(\"0000000000000\");\n      let j = sachet.indexOf(alphabets[i]);\n      console.log(\"11111111111111\");\n      this.tiles.push(sachet[i]);\n      console.log(\"333333333333\");\n      console.log(\"alphabet: \", alphabet, \"i: \", i, \"sachet: \", sachet[i]);\n      sachet.splice(i, 1);\n    }\n  }\n\n  remove(tile) {\n    if (Array.isArray(tile)) {\n      for (let i = 0; i < tile.length; i++) {\n        let index = this.tiles.indexOf(tile[i]);\n        this.tiles.splice(index, 1);\n      }\n    } else {\n      for (let i = 0; i < this.tiles.length; i++) {\n        if (tile.querySelectorAll(\"p\")[0].innerHTML == this.tiles[i].querySelectorAll(\"p\")[0].innerHTML) {\n          this.tiles.splice(i, 1);\n          return;\n        }\n      }\n\n      throw \"this tile is not in this list\";\n    }\n  }\n\n}\n\nexport { Player };","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Player.js"],"names":["sachet","Player","constructor","username","score","tiles","active","delete_active","challenge_active","draw","length","index","Math","random","chosen_tile","splice","push","draw_by_alphabet","alphabets","console","log","i","j","indexOf","alphabet","remove","tile","Array","isArray","querySelectorAll","innerHTML"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,MAAN,CAAY;AACRC,EAAAA,WAAW,CAACC,QAAD,EAAU;AACnB,SAAKA,QAAL,GAAcA,QAAd;AACA,SAAKC,KAAL,GAAW,CAAX;AACA,SAAKC,KAAL,GAAW,EAAX;AACA,SAAKC,MAAL,GAAY,KAAZ;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACA,SAAKC,gBAAL,GAAsB,KAAtB;AACD;;AAEDC,EAAAA,IAAI,GAAE;AAEF,WAAM,KAAKJ,KAAL,CAAWK,MAAX,GAAkB,CAAlB,IAAuB,CAACV,MAAM,CAACU,MAAR,IAAgB,CAA7C,EAA+C;AAC3C,UAAIC,KAAK,GAACX,MAAM,CAACU,MAAP,GAAcE,IAAI,CAACC,MAAL,EAAd,IAA6B,CAAvC;AACA,UAAIC,WAAW,GAACd,MAAM,CAACW,KAAD,CAAtB;AACAX,MAAAA,MAAM,CAACe,MAAP,CAAcJ,KAAd,EAAoB,CAApB;AACA,WAAKN,KAAL,CAAWW,IAAX,CAAgBF,WAAhB;AACH;AACJ;;AAEDG,EAAAA,gBAAgB,CAACC,SAAD,EAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,SAAS,CAACR,MAAzB,EAAgCW,CAAC,EAAjC,EAAoC;AAChCF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAIE,CAAC,GAACtB,MAAM,CAACuB,OAAP,CAAeL,SAAS,CAACG,CAAD,CAAxB,CAAN;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKf,KAAL,CAAWW,IAAX,CAAgBhB,MAAM,CAACqB,CAAD,CAAtB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,QAAzB,EAAkC,KAAlC,EAAwCH,CAAxC,EAA0C,UAA1C,EAAqDrB,MAAM,CAACqB,CAAD,CAA3D;AACArB,MAAAA,MAAM,CAACe,MAAP,CAAcM,CAAd,EAAgB,CAAhB;AACC;AACJ;;AAGLI,EAAAA,MAAM,CAACC,IAAD,EAAM;AACV,QAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAwB;AAEpB,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEK,IAAI,CAAChB,MAAxB,EAAgCW,CAAC,EAAjC,EAAoC;AAChC,YAAIV,KAAK,GAAG,KAAKN,KAAL,CAAWkB,OAAX,CAAmBG,IAAI,CAACL,CAAD,CAAvB,CAAZ;AACA,aAAKhB,KAAL,CAAWU,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB;AACH;AAEJ,KAPD,MAOK;AAEL,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAE,KAAKhB,KAAL,CAAWK,MAA9B,EAAsCW,CAAC,EAAvC,EAA0C;AACtC,YAAIK,IAAI,CAACG,gBAAL,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,SAA9B,IAAyC,KAAKzB,KAAL,CAAWgB,CAAX,EAAcQ,gBAAd,CAA+B,GAA/B,EAAoC,CAApC,EAAuCC,SAApF,EAA8F;AAC1F,eAAKzB,KAAL,CAAWU,MAAX,CAAkBM,CAAlB,EAAqB,CAArB;AACA;AACC;AACJ;;AACD,YAAM,+BAAN;AACH;AAGJ;;AAtDS;;AAyDV,SAAQpB,MAAR","sourcesContent":["import sachet from './Sachet.js'\r\n\r\nclass Player{\r\n    constructor(username){\r\n      this.username=username;\r\n      this.score=0;\r\n      this.tiles=[];\r\n      this.active=false\r\n      this.delete_active=false;\r\n      this.challenge_active=false;    \r\n    }\r\n  \r\n    draw(){\r\n        \r\n        while(this.tiles.length<7 && !sachet.length==0){\r\n            let index=sachet.length*Math.random()<<0\r\n            let chosen_tile=sachet[index]\r\n            sachet.splice(index,1)\r\n            this.tiles.push(chosen_tile);        \r\n        }   \r\n    }\r\n\r\n    draw_by_alphabet(alphabets){\r\n        console.log(\"----------0000000000000\") \r\n        for (let i=0;i<alphabets.length;i++){   \r\n            console.log(\"0000000000000\") \r\n            let j=sachet.indexOf(alphabets[i])\r\n            console.log(\"11111111111111\") \r\n            this.tiles.push(sachet[i])\r\n            console.log(\"333333333333\") \r\n            console.log(\"alphabet: \",alphabet,\"i: \",i,\"sachet: \",sachet[i])\r\n            sachet.splice(i,1)    \r\n            }      \r\n        }\r\n    \r\n\r\n    remove(tile){\r\n      if (Array.isArray(tile)){\r\n  \r\n          for (let i = 0; i< tile.length; i++){\r\n              let index = this.tiles.indexOf(tile[i]);\r\n              this.tiles.splice(index, 1)\r\n          }\r\n  \r\n      }else{\r\n  \r\n      for (let i = 0; i< this.tiles.length; i++){\r\n          if (tile.querySelectorAll(\"p\")[0].innerHTML==this.tiles[i].querySelectorAll(\"p\")[0].innerHTML){\r\n              this.tiles.splice(i, 1)\r\n              return\r\n              }\r\n          }\r\n          throw \"this tile is not in this list\"\r\n      }\r\n      \r\n      \r\n  }\r\n  }\r\n\r\n  export {Player}"]},"metadata":{},"sourceType":"module"}