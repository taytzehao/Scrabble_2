{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Login_page\\\\Forgotpassword.js\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport React, { useState, useContext } from 'react';\nimport { title, Titlerender } from \"./Title_div.js\";\nimport Signup from \"./Signup.js\";\nimport axios from 'axios';\nimport GoogleLogin from 'react-google-login';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { UserContext } from '../UserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forgotpassword() {\n  _s();\n\n  const [error, seterror] = useState(false);\n  let schema = Yup.object().shape({\n    email: Yup.string().email('Invalid email address')\n  });\n  const [values, setValues] = useState({\n    email: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      [name]: value\n    });\n  }\n\n  const handleforgotpassword = data => {\n    schema.isValid(values).then(function (valid) {\n      if (valid) {\n        seterror(false);\n        axios.post('http://localhost:5000/forgotpassword', values).then(res => {\n          alert(\"An email with a reset token would be sent to your email if your email is already in our database.\");\n          history.push('/');\n        });\n      } else {\n        seterror(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-content\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleforgotpassword,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Forgot_header\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Please place your email here\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: \"Please use a valid email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Forgotpassword, \"1JqqByB4+Ug2akH3mjVbm4nWLAw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Forgotpassword;\nexport default Forgotpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forgotpassword\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Login_page/Forgotpassword.js"],"names":["React","useState","useContext","title","Titlerender","Signup","axios","GoogleLogin","useHistory","Yup","UserContext","Forgotpassword","error","seterror","schema","object","shape","email","string","values","setValues","history","handleChange","e","name","value","target","handleforgotpassword","data","isValid","then","valid","post","res","alert","push"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,KAAR,EAAcC,WAAd,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAAQC,WAAR,QAA0B,mBAA1B;;;AAEA,SAASC,cAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,KAAD,CAA/B;AACA,MAAIa,MAAM,GAAEL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAC7BC,IAAAA,KAAK,EAACR,GAAG,CAACS,MAAJ,GAAaD,KAAb,CAAmB,uBAAnB;AADuB,GAAnB,CAAZ;AAGA,QAAM,CAACE,MAAD,EAAQC,SAAR,IAAoBnB,QAAQ,CAAC;AAACgB,IAAAA,KAAK,EAAC;AAAP,GAAD,CAAlC;AACA,QAAMI,OAAO,GAACb,UAAU,EAAxB;;AAEA,WAASc,YAAT,CAAsBC,CAAtB,EAAwB;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,SAAS,CAAC;AAAC,OAACI,IAAD,GAAOC;AAAR,KAAD,CAAT;AACD;;AACC,QAAME,oBAAoB,GAAIC,IAAD,IAAQ;AAGjCd,IAAAA,MAAM,CAACe,OAAP,CAAeV,MAAf,EAAuBW,IAAvB,CAA4B,UAASC,KAAT,EAAe;AACzC,UAAGA,KAAH,EAAS;AACPlB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAP,QAAAA,KAAK,CAAC0B,IAAN,CAAW,sCAAX,EAAkDb,MAAlD,EAA0DW,IAA1D,CAAgEG,GAAD,IAAO;AACtEC,UAAAA,KAAK,CAAC,mGAAD,CAAL;AACAb,UAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AAAkB,SAFlB;AAGD,OALD,MAKK;AACHtB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACJ,KATC;AAUH,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAM,YAAA,QAAQ,EAAEc,oBAAhB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,OAAxB;AAAgC,cAAA,EAAE,EAAC,OAAnC;AAA2C,cAAA,WAAW,EAAC,8BAAvD;AAAsF,cAAA,QAAQ,EAAEL;AAAhG;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGV,KAAK,gBAAI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,GAA6D,IAHrE,eAIE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBH;;GA3CQD,c;UAMOH,U;;;KANPG,c;AA6CT,eAAeA,cAAf","sourcesContent":["import './Login.css';\r\nimport React, {useState, useContext} from 'react';\r\nimport {title,Titlerender} from \"./Title_div.js\"\r\nimport Signup from \"./Signup.js\"\r\nimport axios from 'axios';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useHistory} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport {UserContext} from '../UserContext.js'\r\n\r\nfunction Forgotpassword(){\r\n  const [error,seterror]=useState(false)\r\n  let schema =Yup.object().shape({\r\n    email:Yup.string().email('Invalid email address'),\r\n  }) \r\n  const [values,setValues] =useState({email:'',})\r\n  const history=useHistory()\r\n\r\n  function handleChange(e){\r\n    const { name, value } = e.target;\r\n    setValues({[name]:value})\r\n  }\r\n    const handleforgotpassword = (data)=>{\r\n    \r\n\r\n        schema.isValid(values).then(function(valid){\r\n          if(valid){\r\n            seterror(false)\r\n            axios.post('http://localhost:5000/forgotpassword',values).then((res)=>{\r\n            alert(\"An email with a reset token would be sent to your email if your email is already in our database.\")\r\n            history.push('/')})\r\n          }else{\r\n            seterror(true)\r\n          }\r\n      })\r\n    }\r\n\r\n    return(\r\n      <div className=\"main\">\r\n        <div className=\"main-section\">\r\n          <div className=\"login-form\">\r\n              <div className=\"log-content\">\r\n                <form onSubmit={handleforgotpassword}> \r\n                  <div className=\"Forgot_header\">Forgot Password</div>\r\n                  <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Please place your email here\" onChange={handleChange} />\r\n                  {error ? (<div className=\"error\">Please use a valid email</div>) : null}\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </form>  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forgotpassword"]},"metadata":{},"sourceType":"module"}