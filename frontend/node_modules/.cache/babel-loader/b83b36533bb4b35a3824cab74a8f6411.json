{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Gamespage.js\",\n    _s = $RefreshSig$();\n\nimport './Gamespage.css';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\nimport { UserContext } from '../UserContext.js';\nimport { Player } from './Player.js';\nimport { Link, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Joingame from './Main_game/Joingame.js';\nimport Action_bar from './Action/Actionbar.js';\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js';\nimport Main_game from './Main_game/Main_game.js';\nimport sachet, { analytics_data } from './Sachet.js';\nimport { GamesContext, BlocksContext, PlayerListContext, AnalyticsDataContext, SachetContext } from './GamesContext.js';\nimport { Blocks } from './Main_game/Board.js';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamespage() {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const socketRef = useRef();\n  socketRef.current = io.connect(\"http://localhost:5500\");\n  const [boardState, setboardState] = useState(new Blocks());\n  const [renderAction, setrenderAction] = useState(false);\n  const [gameState, setgameState] = useState({\n    room_id: useParams().room_id,\n    gamestarted: false,\n    socket: socketRef,\n    turn_num: 0,\n    player_turn: 0,\n    player_num: 0,\n    your_index: 0,\n    endgame: false,\n    just_added: []\n  });\n  const [playerlistState, setplayerlistState] = useState([]);\n  const [analyticsdataState, setanalyticsdataState] = useState(analytics_data);\n  const [sachetState, setsachetState] = useState(new sachet());\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  const sachetstateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  sachetstateRef.current = sachetState;\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5500\");\n    axios.get('http://localhost:5500/get_added_players', {\n      params: {\n        room_id: gameState.room_id,\n        username: profile.username\n      }\n    }).then(res => {\n      let sachet = { ...sachetstateRef.current\n      };\n      let temp_player_list = [];\n\n      for (let i = 0; i < res.data.length; i++) {\n        let temp_player = new Player(res.data[i].Username);\n        temp_player.draw_by_tiles(res.data[i].Tiles);\n        sachet.remove_by_tiles(res.data[i].Tiles);\n        temp_player_list.push(temp_player);\n      }\n\n      const your_player = new Player(profile.username, true);\n      console.log(\"GAMES SACHET BEFORE\", sachet);\n      let drawn_tiles = your_player.draw(sachet);\n      your_player.tiles = drawn_tiles;\n      axios.put(\"http://localhost:5500/add_player\", {\n        username: your_player.username,\n        tiles: drawn_tiles,\n        room_id: gameState.room_id\n      });\n      temp_player_list.push(your_player);\n      socketRef.current.emit(\"emit_new_player\", {\n        username: your_player.username,\n        tiles: your_player.tiles,\n        room_id: gameState.room_id\n      });\n      socketRef.current.on(\"incoming_new_player\", res => {\n        let sachet2 = { ...sachetstateRef\n        };\n        let temp_player = new Player(res.username);\n        sachet2.remove_by_tiles(res.tiles);\n        setgameState(prevgamestate => ({ ...prevgamestate,\n          player_num: prevgamestate.player_num + 1\n        }));\n        setplayerlistState(prevplayerlist => [...prevplayerlist, temp_player]);\n        setsachetState(sachet2);\n      });\n      socketRef.current.on();\n      setgameState(prevgamestate => ({ ...prevgamestate,\n        player_num: prevgamestate.player_num + temp_player_list.length,\n        your_index: temp_player_list.length - 1,\n        player_turn: prevgamestate.turn_num % (prevgamestate.player_num + temp_player_list.length)\n      }));\n      setplayerlistState(prevplayerlist => [...prevplayerlist, ...temp_player_list]);\n      setsachetState(sachet);\n      setrenderAction(true);\n    });\n  }, []);\n  useEffect(() => {\n    setgameState(prevgamestate => ({ ...prevgamestate,\n      player_turn: prevgamestate.turn_num % prevgamestate.player_num\n    }));\n  }, [, gamestateRef.current.turn_num]);\n  useEffect(() => {\n    setplayerlistState(prevplayerlist => {\n      let newplayerlist = [...prevplayerlist];\n\n      for (let i = 0; i < newplayerlist.length; i++) {\n        i == gameState.player_turn ? newplayerlist.active = true : newplayerlist.active = false;\n      }\n\n      return newplayerlist;\n    });\n  }, [gameState.player_turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Games_page\",\n    children: [/*#__PURE__*/_jsxDEV(Joingame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SachetContext.Provider, {\n      value: {\n        sachetState,\n        setsachetState\n      },\n      children: /*#__PURE__*/_jsxDEV(AnalyticsDataContext.Provider, {\n        value: {\n          analyticsdataState,\n          setanalyticsdataState\n        },\n        children: /*#__PURE__*/_jsxDEV(GamesContext.Provider, {\n          value: {\n            gameState,\n            setgameState\n          },\n          children: /*#__PURE__*/_jsxDEV(PlayerListContext.Provider, {\n            value: {\n              playerlistState,\n              setplayerlistState\n            },\n            children: /*#__PURE__*/_jsxDEV(BlocksContext.Provider, {\n              value: {\n                boardState,\n                setboardState\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Main_divider\",\n                children: [/*#__PURE__*/_jsxDEV(Alphabet_analytics, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Main_game, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this), renderAction && /*#__PURE__*/_jsxDEV(Action_bar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n/*<div className=\"Main_divider\">\r\n<Alphabet_analytics />\r\n<Main_game />\r\n{renderAction && <Action_bar />}\r\n</div> */\n\n\n_s(Gamespage, \"xFrqpy5BltLhivqeR4bDHcU4gBA=\", false, function () {\n  return [useParams];\n});\n\n_c = Gamespage;\nexport default Gamespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamespage\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Gamespage.js"],"names":["React","useState","useContext","useEffect","useRef","axios","Popup","UserContext","Player","Link","useParams","io","Joingame","Action_bar","Alphabet_analytics","Main_game","sachet","analytics_data","GamesContext","BlocksContext","PlayerListContext","AnalyticsDataContext","SachetContext","Blocks","_","Gamespage","profile","setprofile","socketRef","current","connect","boardState","setboardState","renderAction","setrenderAction","gameState","setgameState","room_id","gamestarted","socket","turn_num","player_turn","player_num","your_index","endgame","just_added","playerlistState","setplayerlistState","analyticsdataState","setanalyticsdataState","sachetState","setsachetState","playerlistRef","gamestateRef","boardstateRef","sachetstateRef","get","params","username","then","res","temp_player_list","i","data","length","temp_player","Username","draw_by_tiles","Tiles","remove_by_tiles","push","your_player","console","log","drawn_tiles","draw","tiles","put","emit","on","sachet2","prevgamestate","prevplayerlist","newplayerlist","active"],"mappings":"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","sourcesContent":["import './Gamespage.css';\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {UserContext} from '../UserContext.js';\r\nimport {Player} from './Player.js'\r\nimport {Link,useParams} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Joingame from './Main_game/Joingame.js'\r\nimport Action_bar from './Action/Actionbar.js'\r\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js'\r\nimport Main_game from './Main_game/Main_game.js' \r\nimport sachet, { analytics_data } from './Sachet.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from './GamesContext.js'\r\nimport {Blocks} from './Main_game/Board.js'\r\nimport _ from \"lodash\";\r\n\r\nfunction Gamespage() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const socketRef =useRef()\r\n    socketRef.current=io.connect(\"http://localhost:5500\")\r\n    const [boardState,setboardState]=useState(new Blocks())\r\n    const [renderAction,setrenderAction]=useState(false)\r\n    const [gameState,setgameState]=useState({\r\n      room_id:useParams().room_id,\r\n      gamestarted:false,\r\n      socket:socketRef,\r\n      turn_num:0,\r\n      player_turn:0,\r\n      player_num:0, \r\n      your_index:0,\r\n      endgame:false,\r\n      just_added:[]\r\n    })\r\n    const [playerlistState,setplayerlistState]=useState([])\r\n    const [analyticsdataState,setanalyticsdataState]=useState(analytics_data)\r\n    const [sachetState,setsachetState]=useState(new sachet())\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    const sachetstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    sachetstateRef.current=sachetState\r\n    useEffect(()=>{\r\n      socketRef.current=io.connect(\"http://localhost:5500\")\r\n      axios.get('http://localhost:5500/get_added_players',{params: {room_id:gameState.room_id,username:profile.username}}).then((res)=>{\r\n        let sachet={...sachetstateRef.current}\r\n        let temp_player_list=[]\r\n        for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].Username)\r\n          temp_player.draw_by_tiles(res.data[i].Tiles)\r\n          sachet.remove_by_tiles(res.data[i].Tiles)\r\n          temp_player_list.push(temp_player)\r\n        }\r\n\r\n        const your_player=new Player(profile.username,true)\r\n        console.log(\"GAMES SACHET BEFORE\", sachet)\r\n        let drawn_tiles=your_player.draw(sachet)\r\n        your_player.tiles=drawn_tiles\r\n        axios.put(\"http://localhost:5500/add_player\",{\r\n          username:your_player.username,\r\n          tiles:drawn_tiles,\r\n          room_id:gameState.room_id\r\n        })\r\n        temp_player_list.push(your_player)\r\n        \r\n        \r\n        socketRef.current.emit(\"emit_new_player\",{username:your_player.username,tiles:your_player.tiles,room_id:gameState.room_id})\r\n        \r\n        socketRef.current.on(\"incoming_new_player\", (res)=>{\r\n          let sachet2={...sachetstateRef}\r\n          let temp_player=new Player(res.username)\r\n          sachet2.remove_by_tiles(res.tiles)\r\n          setgameState(prevgamestate=>({...prevgamestate,\r\n            player_num: prevgamestate.player_num+1\r\n          }))\r\n          setplayerlistState(prevplayerlist=>[...prevplayerlist,temp_player])\r\n          setsachetState(sachet2)\r\n        })\r\n        socketRef.current.on()\r\n\r\n        setgameState(prevgamestate=>({...prevgamestate,\r\n          player_num: prevgamestate.player_num+temp_player_list.length,\r\n          your_index:temp_player_list.length-1,\r\n          player_turn:prevgamestate.turn_num%(prevgamestate.player_num+temp_player_list.length)\r\n        }))\r\n        setplayerlistState(prevplayerlist=>[...prevplayerlist,...temp_player_list])\r\n        setsachetState(sachet)\r\n        setrenderAction(true)\r\n    })},[])\r\n\r\n    useEffect(()=>{\r\n      setgameState( prevgamestate=>({...prevgamestate,\r\n      player_turn:prevgamestate.turn_num%prevgamestate.player_num\r\n    }))}\r\n    ,[,gamestateRef.current.turn_num])\r\n    \r\n    useEffect(()=>{\r\n      setplayerlistState(prevplayerlist=>{\r\n        let newplayerlist=[...prevplayerlist]\r\n        for (let i=0;i<newplayerlist.length;i++){\r\n          (i==gameState.player_turn) ? newplayerlist.active=true : newplayerlist.active=false\r\n        }\r\n        return newplayerlist\r\n    })}\r\n    ,[gameState.player_turn])\r\n\r\n    \r\n    \r\n      return (     \r\n        <div className=\"Games_page\">\r\n            <Joingame/>\r\n            <SachetContext.Provider value={{sachetState,setsachetState}}>\r\n              <AnalyticsDataContext.Provider value={{analyticsdataState,setanalyticsdataState}}>\r\n                <GamesContext.Provider value={{gameState,setgameState}}>\r\n                  <PlayerListContext.Provider value={{playerlistState,setplayerlistState}}>\r\n                    <BlocksContext.Provider value={{boardState,setboardState}}>\r\n                      <div className=\"Main_divider\">\r\n                        <Alphabet_analytics />\r\n                        <Main_game />\r\n                        {renderAction && <Action_bar />}\r\n                      </div> \r\n                    </BlocksContext.Provider>\r\n                  </PlayerListContext.Provider>   \r\n                </GamesContext.Provider>   \r\n              </AnalyticsDataContext.Provider>  \r\n              </SachetContext.Provider>                \r\n        </div>\r\n      );\r\n  }\r\n\r\n  /*<div className=\"Main_divider\">\r\n  <Alphabet_analytics />\r\n  <Main_game />\r\n  {renderAction && <Action_bar />}\r\n</div> */\r\n  \r\nexport default Gamespage;"]},"metadata":{},"sourceType":"module"}