{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Action\\\\Actionbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { UserContext } from '../../UserContext.js';\nimport { GamesContext, BlocksContext, PlayerListContext, AnalyticsDataContext, SachetContext } from '../GamesContext.js';\nimport Draw_button from \"./Draw_button.js\";\nimport Score_button from \"./Score_button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Action_bar() {\n  _s();\n\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const {\n    analyticsdataState,\n    setanalyticsdataState\n  } = useContext(AnalyticsDataContext);\n  const {\n    sachetState,\n    setsachetState\n  } = useContext(SachetContext);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  const sachetstateRef = useRef(null);\n  const analyticsdataRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  sachetstateRef.current = sachetState;\n  analyticsdataRef;\n\n  function next_turn(updated_sachet) {\n    let newanalyticsdata = [...prevanalyticsdata];\n    let analytics_index;\n    let just_added_list = gamestateRef.current.just_added;\n    console.log(\"JUST ADDED LIST\", just_added_list);\n\n    for (let index of just_added_list) {\n      console.log(\"INDEX\", index);\n      analytics_index = newanalyticsdata.findIndex(data => {\n        console.log(\"BOARD ALPHABET\", boardstateRef.current.blocks[index].content.alphabet);\n        console.log(\"DATA ALPHABET\", data.alphabet);\n        return data.alphabet == boardstateRef.current.blocks[index].content.alphabet;\n      });\n      console.log(\"ANALYTICS INDEX\", analytics_index);\n      console.log(\"NEW ANALYTICS DATA\", newanalyticsdata)(newanalyticsdata[analytics_index].num == 1) ? newanalyticsdata.splice(analytics_index, 1) : newanalyticsdata[analytics_index].num -= 1;\n    }\n\n    setboardState(prevboardState => {\n      let tempboardState = { ...prevboardState\n      };\n      gamestateRef.current.just_added.forEach(index => {\n        tempboardState.blocks[index].content.just_added = false;\n        tempboardState.blocks[index].content.challenge = true;\n        tempboardState.blocks[index].content.active = false;\n        tempboardState.blocks[index].content.canDrag = false;\n        tempboardState.blocks[index].content.canDrop = false;\n        tempboardState.blocks[index].content.index = null;\n      });\n      return tempboardState;\n    });\n    setanalyticsdataState(newanalyticsdata);\n    setgameState(prevgameState => ({ ...prevgameState,\n      turn_num: prevgameState.turn_num + 1,\n      just_added: []\n    }));\n    setsachetState(updated_sachet);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Action_bar\",\n    children: [/*#__PURE__*/_jsxDEV(Score_button, {\n      next_funct: next_turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Draw_button, {\n      next_funct: next_turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Action_bar, \"OAnbo7jIkGeaUqRUCXhS2HFByIs=\");\n\n_c = Action_bar;\nexport default Action_bar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Action_bar\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Action/Actionbar.js"],"names":["React","useState","useContext","useEffect","useRef","UserContext","GamesContext","BlocksContext","PlayerListContext","AnalyticsDataContext","SachetContext","Draw_button","Score_button","Action_bar","playerlistState","setplayerlistState","gameState","setgameState","boardState","setboardState","analyticsdataState","setanalyticsdataState","sachetState","setsachetState","playerlistRef","gamestateRef","boardstateRef","sachetstateRef","analyticsdataRef","current","next_turn","updated_sachet","newanalyticsdata","prevanalyticsdata","analytics_index","just_added_list","just_added","console","log","index","findIndex","data","blocks","content","alphabet","num","splice","prevboardState","tempboardState","forEach","challenge","active","canDrag","canDrop","prevgameState","turn_num"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext,SachetContext} from '../GamesContext.js'\r\nimport Draw_button from \"./Draw_button.js\";\r\nimport Score_button from \"./Score_button.js\";\r\n\r\nfunction Action_bar() {\r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)   \r\n  const {boardState,setboardState}=useContext(BlocksContext)\r\n  const {analyticsdataState,setanalyticsdataState}=useContext(AnalyticsDataContext)\r\n  const {sachetState,setsachetState}=useContext(SachetContext)   \r\n  const playerlistRef=useRef(null);\r\n  const gamestateRef=useRef(null);\r\n  const boardstateRef=useRef(null);\r\n  const sachetstateRef=useRef(null);\r\n  const analyticsdataRef=useRef(null);\r\n  playerlistRef.current=playerlistState\r\n  gamestateRef.current=gameState\r\n  boardstateRef.current=boardState\r\n  sachetstateRef.current=sachetState\r\n  analyticsdataRef\r\n  \r\n  function next_turn(updated_sachet){\r\n    let newanalyticsdata=[...prevanalyticsdata]\r\n      let analytics_index\r\n      let just_added_list=gamestateRef.current.just_added\r\n      console.log(\"JUST ADDED LIST\",just_added_list)\r\n      for (let index of just_added_list){\r\n        console.log(\"INDEX\",index)\r\n        analytics_index=newanalyticsdata.findIndex(data=>{\r\n          console.log(\"BOARD ALPHABET\",boardstateRef.current.blocks[index].content.alphabet)\r\n          console.log(\"DATA ALPHABET\",data.alphabet)\r\n\r\n          return data.alphabet==boardstateRef.current.blocks[index].content.alphabet})\r\n\r\n        console.log(\"ANALYTICS INDEX\",analytics_index)\r\n        console.log(\"NEW ANALYTICS DATA\",newanalyticsdata)\r\n        (newanalyticsdata[analytics_index].num==1) ? newanalyticsdata.splice(analytics_index,1) : newanalyticsdata[analytics_index].num-=1\r\n      }\r\n    setboardState((prevboardState=>{\r\n      let tempboardState={...prevboardState}\r\n      gamestateRef.current.just_added.forEach(index=>{\r\n          tempboardState.blocks[index].content.just_added=false\r\n          tempboardState.blocks[index].content.challenge=true\r\n          tempboardState.blocks[index].content.active=false\r\n          tempboardState.blocks[index].content.canDrag=false\r\n          tempboardState.blocks[index].content.canDrop=false\r\n          tempboardState.blocks[index].content.index=null\r\n      })\r\n      return tempboardState\r\n  }))\r\n    setanalyticsdataState(newanalyticsdata)\r\n    setgameState((prevgameState=>({...prevgameState,\r\n      turn_num:prevgameState.turn_num+1, \r\n      just_added:[]     \r\n  }))) \r\n    setsachetState(updated_sachet)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"Action_bar\">\r\n      <Score_button next_funct={next_turn}/>\r\n      <Draw_button next_funct={next_turn}/>   \r\n    </div>)\r\n     \r\n  }\r\n\r\nexport default Action_bar;"]},"metadata":{},"sourceType":"module"}