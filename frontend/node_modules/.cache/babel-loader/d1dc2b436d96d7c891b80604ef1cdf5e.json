{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Tile_container_other.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport './Tile_container.css';\nimport { UserContext } from '../../UserContext.js';\nimport { GamesContext, Invisible_tile_context, PlayerListContext } from '../GamesContext.js';\nimport { Tile } from '../Sachet.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [[2, 1, \"row\", \"horizontal\"], [1, 2, \"column\", \"vertical\"], [2, 3, \"row\", \"horizontal\"], [3, 2, \"column\", \"vertical\"]];\n\nfunction Tile_container_other(value) {\n  _s();\n\n  const [tile_visibility, set_tile_visibility] = useState(\"hidden\");\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const container_name = \"tile_container \" + positions[value.player_num][3];\n  const containerstyle = {\n    gridColumn: positions[value.player_num][0],\n    gridRow: positions[value.player_num][1]\n  };\n  const holderstyle = {\n    display: \"flex\",\n    flexDirection: positions[value.player_num][2]\n  };\n  useEffect(() => {\n    let your_index_challenge = gamestateRef.current.your_index == playerlistState.length - 1 ? 0 : gamestateRef.current.your_index + 1;\n    let temp_playerlist = [...playerlistState];\n    console.log(\"CHANGE STATUS\");\n\n    if (gamestateRef.current.player_turn == gamestateRef.current.your_index) {\n      temp_playerlist[gamestateRef.current.your_index].active = true;\n      temp_playerlist[gamestateRef.current.your_index].delete_active = true;\n      temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile => {\n        tile.active = true;\n      });\n      setplayerlistState(temp_playerlist);\n    } else {\n      temp_playerlist[gamestateRef.current.your_index].active = false;\n      temp_playerlist[gamestateRef.current.your_index].delete_active = false;\n      temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile => {\n        tile.active = false;\n      });\n      setplayerlistState(temp_playerlist);\n    }\n\n    if (gamestateRef.current.player_turn != your_index_challenge) {\n      temp_playerlist[gamestateRef.current.your_index].challenge_active = true;\n      setplayerlistState(temp_playerlist);\n    } else {\n      temp_playerlist[gamestateRef.current.your_index].challenge_active = false;\n      setplayerlistState(temp_playerlist);\n    }\n  }, [, gamestateRef.current.player_turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: container_name,\n    style: containerstyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name_display\",\n      children: playerlistState[value.player_num].username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score_display\",\n      children: playerlistState[value.player_num].score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tile_holder\",\n      style: holderstyle,\n      children: /*#__PURE__*/_jsxDEV(Invisible_tile_context.Provider, {\n        value: {\n          tile_visibility,\n          set_tile_visibility\n        },\n        children: playerlistState[value.player_num].tiles.map((tile, pos) => /*#__PURE__*/_jsxDEV(Tile, {\n          tile: tile\n        }, pos, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tile_container_other, \"Kx1tBlMinDeY4qRIS/I7cdGkOp4=\");\n\n_c = Tile_container_other;\nexport default Tile_container_other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile_container_other\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Tile_container_other.js"],"names":["React","useContext","useState","UserContext","GamesContext","Invisible_tile_context","PlayerListContext","Tile","positions","Tile_container_other","value","tile_visibility","set_tile_visibility","profile","setprofile","gameState","setgameState","playerlistState","setplayerlistState","container_name","player_num","containerstyle","gridColumn","gridRow","holderstyle","display","flexDirection","useEffect","your_index_challenge","gamestateRef","current","your_index","length","temp_playerlist","console","log","player_turn","active","delete_active","tiles","forEach","tile","challenge_active","username","score","map","pos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,YAAR,EAAqBC,sBAArB,EAA4CC,iBAA5C,QAAoE,oBAApE;AACA,SAAQC,IAAR,QAAmB,cAAnB;;AAEA,MAAMC,SAAS,GAAC,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,KAAL,EAAW,YAAX,CAAD,EAA0B,CAAC,CAAD,EAAG,CAAH,EAAK,QAAL,EAAc,UAAd,CAA1B,EAAoD,CAAC,CAAD,EAAG,CAAH,EAAK,KAAL,EAAW,YAAX,CAApD,EAA6E,CAAC,CAAD,EAAG,CAAH,EAAK,QAAL,EAAc,UAAd,CAA7E,CAAhB;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACnC,QAAM,CAACC,eAAD,EAAiBC,mBAAjB,IAAsCV,QAAQ,CAAC,QAAD,CAApD;AACA,QAAM;AAACW,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAqBb,UAAU,CAACE,WAAD,CAArC;AACA,QAAM;AAACY,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBf,UAAU,CAACG,YAAD,CAAzC;AACA,QAAM;AAACa,IAAAA,eAAD;AAAiBC,IAAAA;AAAjB,MAAqCjB,UAAU,CAACK,iBAAD,CAArD;AACA,QAAMa,cAAc,GAAC,oBAAkBX,SAAS,CAACE,KAAK,CAACU,UAAP,CAAT,CAA4B,CAA5B,CAAvC;AACA,QAAMC,cAAc,GAAC;AACnBC,IAAAA,UAAU,EAACd,SAAS,CAACE,KAAK,CAACU,UAAP,CAAT,CAA4B,CAA5B,CADQ;AAEnBG,IAAAA,OAAO,EAACf,SAAS,CAACE,KAAK,CAACU,UAAP,CAAT,CAA4B,CAA5B;AAFW,GAArB;AAIA,QAAMI,WAAW,GAAC;AAChBC,IAAAA,OAAO,EAAC,MADQ;AAEhBC,IAAAA,aAAa,EAAClB,SAAS,CAACE,KAAK,CAACU,UAAP,CAAT,CAA4B,CAA5B;AAFE,GAAlB;AAIAO,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAIC,oBAAoB,GAAIC,YAAY,CAACC,OAAb,CAAqBC,UAArB,IAAiCd,eAAe,CAACe,MAAhB,GAAuB,CAAzD,GAA8D,CAA9D,GAAkEH,YAAY,CAACC,OAAb,CAAqBC,UAArB,GAAgC,CAA7H;AACA,QAAIE,eAAe,GAAC,CAAC,GAAGhB,eAAJ,CAApB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,QAAGN,YAAY,CAACC,OAAb,CAAqBM,WAArB,IAAkCP,YAAY,CAACC,OAAb,CAAqBC,UAA1D,EAAqE;AACnEE,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDM,MAAjD,GAAwD,IAAxD;AACAJ,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDO,aAAjD,GAA+D,IAA/D;AACAL,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDQ,KAAjD,CAAuDC,OAAvD,CAA+DC,IAAI,IAAE;AAACA,QAAAA,IAAI,CAACJ,MAAL,GAAY,IAAZ;AAAiB,OAAvF;AACAnB,MAAAA,kBAAkB,CAACe,eAAD,CAAlB;AACD,KALD,MAKK;AACHA,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDM,MAAjD,GAAwD,KAAxD;AACAJ,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDO,aAAjD,GAA+D,KAA/D;AACAL,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDQ,KAAjD,CAAuDC,OAAvD,CAA+DC,IAAI,IAAE;AAACA,QAAAA,IAAI,CAACJ,MAAL,GAAY,KAAZ;AAAkB,OAAxF;AACAnB,MAAAA,kBAAkB,CAACe,eAAD,CAAlB;AACD;;AACD,QAAGJ,YAAY,CAACC,OAAb,CAAqBM,WAArB,IAAkCR,oBAArC,EAA0D;AACxDK,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDW,gBAAjD,GAAkE,IAAlE;AACAxB,MAAAA,kBAAkB,CAACe,eAAD,CAAlB;AACD,KAHD,MAGK;AACHA,MAAAA,eAAe,CAACJ,YAAY,CAACC,OAAb,CAAqBC,UAAtB,CAAf,CAAiDW,gBAAjD,GAAkE,KAAlE;AACAxB,MAAAA,kBAAkB,CAACe,eAAD,CAAlB;AACD;AACF,GAvBQ,EAuBP,GAAEJ,YAAY,CAACC,OAAb,CAAqBM,WAAvB,CAvBO,CAAT;AAyBA,sBAEE;AAAK,IAAA,SAAS,EAAEjB,cAAhB;AAAgC,IAAA,KAAK,EAAEE,cAAvC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BJ,eAAe,CAACP,KAAK,CAACU,UAAP,CAAf,CAAkCuB;AAAjE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAAgC1B,eAAe,CAACP,KAAK,CAACU,UAAP,CAAf,CAAkCwB;AAAlE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAEpB,WAApC;AAAA,6BACE,QAAC,sBAAD,CAAwB,QAAxB;AAAiC,QAAA,KAAK,EAAE;AAACb,UAAAA,eAAD;AAAiBC,UAAAA;AAAjB,SAAxC;AAAA,kBACGK,eAAe,CAACP,KAAK,CAACU,UAAP,CAAf,CAAkCmB,KAAlC,CAAwCM,GAAxC,CAA4C,CAACJ,IAAD,EAAMK,GAAN,kBAC7C,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEL;AAAZ,WAAuBK,GAAvB;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAcC;;GArDMrC,oB;;KAAAA,oB;AAuDT,eAAeA,oBAAf","sourcesContent":["import React, {useContext,useState} from 'react';\r\nimport './Tile_container.css'\r\nimport {UserContext} from '../../UserContext.js'\r\nimport {GamesContext,Invisible_tile_context,PlayerListContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\n\r\nconst positions=[[2,1,\"row\",\"horizontal\"],[1,2,\"column\",\"vertical\"],[2,3,\"row\",\"horizontal\"],[3,2,\"column\",\"vertical\"]];\r\n\r\nfunction Tile_container_other(value) {\r\n  const [tile_visibility,set_tile_visibility]=useState(\"hidden\")\r\n  const {profile,setprofile}=useContext(UserContext)\r\n  const {gameState,setgameState}=useContext(GamesContext)  \r\n  const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n  const container_name=\"tile_container \"+positions[value.player_num][3]\r\n  const containerstyle={\r\n    gridColumn:positions[value.player_num][0],\r\n    gridRow:positions[value.player_num][1],\r\n  }\r\n  const holderstyle={\r\n    display:\"flex\",\r\n    flexDirection:positions[value.player_num][2]\r\n  }\r\n  useEffect(()=>{\r\n      \r\n    let your_index_challenge = (gamestateRef.current.your_index==playerlistState.length-1) ? 0 : gamestateRef.current.your_index+1\r\n    let temp_playerlist=[...playerlistState]\r\n    console.log(\"CHANGE STATUS\")\r\n    if(gamestateRef.current.player_turn==gamestateRef.current.your_index){\r\n      temp_playerlist[gamestateRef.current.your_index].active=true\r\n      temp_playerlist[gamestateRef.current.your_index].delete_active=true\r\n      temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile=>{tile.active=true})\r\n      setplayerlistState(temp_playerlist)\r\n    }else{\r\n      temp_playerlist[gamestateRef.current.your_index].active=false\r\n      temp_playerlist[gamestateRef.current.your_index].delete_active=false\r\n      temp_playerlist[gamestateRef.current.your_index].tiles.forEach(tile=>{tile.active=false})\r\n      setplayerlistState(temp_playerlist)\r\n    }\r\n    if(gamestateRef.current.player_turn!=your_index_challenge){  \r\n      temp_playerlist[gamestateRef.current.your_index].challenge_active=true\r\n      setplayerlistState(temp_playerlist)\r\n    }else{\r\n      temp_playerlist[gamestateRef.current.your_index].challenge_active=false\r\n      setplayerlistState(temp_playerlist)\r\n    }\r\n  },[,gamestateRef.current.player_turn])\r\n\r\n  return (\r\n    \r\n    <div className={container_name} style={containerstyle}>\r\n        <div className=\"name_display\">{playerlistState[value.player_num].username}</div>   \r\n        <div className=\"score_display\">{playerlistState[value.player_num].score}</div> \r\n        <div className=\"tile_holder\" style={holderstyle}>  \r\n          <Invisible_tile_context.Provider value={{tile_visibility,set_tile_visibility}}>\r\n            {playerlistState[value.player_num].tiles.map((tile,pos)=>(\r\n            <Tile tile={tile} key={pos}/>\r\n            ))}        \r\n          </Invisible_tile_context.Provider>\r\n        </div>      \r\n    </div>\r\n  );\r\n  }\r\n\r\nexport default Tile_container_other"]},"metadata":{},"sourceType":"module"}