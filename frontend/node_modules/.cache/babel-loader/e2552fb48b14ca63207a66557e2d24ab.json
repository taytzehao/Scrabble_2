{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Main_game.js\",\n    _s = $RefreshSig$();\n\nimport { UserContext } from '../../UserContext.js';\nimport { Board } from './Board.js';\nimport Tile_container from './Tile_container.js';\nimport Tile_container_other from './Tile_container_other.js';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { GamesContext, Invisible_tile_context, BlocksContext, PlayerListContext } from '../GamesContext.js';\nimport './Main_game.css';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main_game() {\n  _s();\n\n  const [tile_visibility, set_tile_visibility] = useState(\"visible\");\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n\n  function container_container_state(player_index, drop_container) {\n    setplayerlistState(prevplayerlist => {\n      let temp_playerlist = [...prevplayerlist];\n      temp_playerlist[player_index].tiles = drop_container;\n      return temp_playerlist;\n    });\n  }\n\n  function board_container_state(player_index, drag_block, drop_container, just_added) {\n    setboardState(prevblockstate => ({ ...prevblockstate,\n      [drag_block.index]: drag_block\n    }));\n    setplayerlistState(prevplayerlist => {\n      let temp_playerlist = [...prevplayerlist];\n      temp_playerlist[player_index].tiles = drop_container;\n      return temp_playerlist;\n    });\n    setgameState(prevgamestate => ({ ...prevgamestate,\n      just_added: just_added\n    }));\n  }\n\n  useEffect(() => {\n    gamestateRef.current.socket.on(\"drop_tile_container\", socket_out => {\n      if (socket_out.drag_block) {\n        board_container_state(socket_out.player_index, socket_out.drop_container);\n      } else {\n        container_container_state(socket_out.player_index, socket_out.drag_block, socket_out.drop_container, socket_out.just_added);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_game\",\n    children: /*#__PURE__*/_jsxDEV(TileDropContext.Provider, {\n      children: /*#__PURE__*/_jsxDEV(Invisible_tile_context.Provider, {\n        value: {\n          tile_visibility,\n          set_tile_visibility\n        },\n        children: /*#__PURE__*/_jsxDEV(DndProvider, {\n          backend: HTML5Backend,\n          children: [playerlistState.map((Player, pos) => Player.username == profile.username ? /*#__PURE__*/_jsxDEV(Tile_container, {\n            player_num: pos\n          }, pos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Tile_container_other, {\n            player_num: pos\n          }, pos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(Board, {\n            blocks_class: boardState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main_game, \"EH0wLHN4z9XEKt4xeooagiwa6AI=\");\n\n_c = Main_game;\nexport default Main_game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_game\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Main_game.js"],"names":["UserContext","Board","Tile_container","Tile_container_other","React","useState","useContext","useEffect","useRef","GamesContext","Invisible_tile_context","BlocksContext","PlayerListContext","DndProvider","HTML5Backend","Main_game","tile_visibility","set_tile_visibility","profile","setprofile","gameState","setgameState","boardState","setboardState","playerlistState","setplayerlistState","container_container_state","player_index","drop_container","prevplayerlist","temp_playerlist","tiles","board_container_state","drag_block","just_added","prevblockstate","index","prevgamestate","gamestateRef","current","socket","on","socket_out","map","Player","pos","username"],"mappings":"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","sourcesContent":["import {UserContext} from '../../UserContext.js'\r\nimport {Board} from './Board.js'\r\nimport Tile_container from './Tile_container.js'\r\nimport Tile_container_other from './Tile_container_other.js'\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport {GamesContext,Invisible_tile_context,BlocksContext,PlayerListContext} from '../GamesContext.js'\r\nimport './Main_game.css';\r\nimport {DndProvider} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\n\r\n\r\n\r\nfunction Main_game() {\r\n    const [tile_visibility,set_tile_visibility]=useState(\"visible\")\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n\r\n    function container_container_state(player_index,drop_container){\r\n      setplayerlistState((prevplayerlist=>{\r\n        let temp_playerlist=[...prevplayerlist]\r\n        temp_playerlist[player_index].tiles=drop_container\r\n        return temp_playerlist\r\n    }))\r\n    }\r\n\r\n    function board_container_state(player_index,drag_block,drop_container,just_added){\r\n      setboardState(prevblockstate=>({...prevblockstate,\r\n        [drag_block.index]:drag_block\r\n        }))\r\n\r\n      setplayerlistState((prevplayerlist=>{\r\n          let temp_playerlist=[...prevplayerlist]\r\n          temp_playerlist[player_index].tiles=drop_container\r\n          return temp_playerlist\r\n      }))\r\n      setgameState(prevgamestate=>({\r\n          ...prevgamestate,\r\n          just_added:just_added      \r\n        }))\r\n    }\r\n\r\n    useEffect(()=>{\r\n      gamestateRef.current.socket.on(\"drop_tile_container\",(socket_out)=>{\r\n        \r\n          if(socket_out.drag_block){\r\n            board_container_state(socket_out.player_index,socket_out.drop_container)\r\n          }else{\r\n            container_container_state(socket_out.player_index,socket_out.drag_block,socket_out.drop_container,socket_out.just_added)\r\n          } \r\n      })\r\n    },[])\r\n\r\n      return (\r\n        \r\n        <div className=\"main_game\">\r\n          <TileDropContext.Provider>\r\n            <Invisible_tile_context.Provider value={{tile_visibility,set_tile_visibility}}>\r\n                <DndProvider backend={HTML5Backend}>\r\n                  {playerlistState.map((Player,pos)=>(\r\n                  (Player.username==profile.username)?\r\n                  <Tile_container player_num={pos} key={pos}/>:\r\n                  <Tile_container_other player_num={pos} key={pos}/>))}\r\n                  <Board blocks_class={boardState}/>  \r\n                </DndProvider>\r\n            </Invisible_tile_context.Provider>    \r\n          </TileDropContext.Provider>                                   \r\n        </div>\r\n      );\r\n  }\r\n    \r\nexport default Main_game;"]},"metadata":{},"sourceType":"module"}