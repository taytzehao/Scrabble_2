{"ast":null,"code":"import { games_sachet } from './Gamespage.js';\n\nclass Player {\n  constructor(username, yours = false) {\n    this.username = username;\n    this.score = 0;\n    this.tiles = [];\n    this.delete_list = [];\n    this.active = false;\n    this.delete_active = false;\n    this.challenge_active = false;\n    this.yours = yours;\n  }\n\n  draw() {\n    while (this.tiles.length < 7 && !temp_sachet.length == 0) {\n      let index = games_sachet.length * Math.random() << 0;\n      let chosen_tile = games_sachet[index][1];\n      games_sachet.splice(index, 1);\n      chosen_tile.index = this.tiles.length - 1;\n\n      if (this.yours) {\n        chosen_tile.canDrag = true;\n        chosen_tile.canDrop = true;\n      }\n\n      this.tiles.push(chosen_tile);\n    }\n  }\n\n  draw_by_alphabet(alphabets) {\n    let sachet_index;\n\n    for (let i = 0; i < alphabets.length; i++) {\n      for (let k = 0; k < sachet.length; k++) {\n        if (sachet[k][0] == alphabets[i][0]) {\n          sachet_index = k;\n          break;\n        }\n      }\n\n      this.tiles.push(sachet[sachet_index]);\n      sachet.splice(sachet_index, 1);\n    }\n  }\n\n  remove(tile) {\n    if (Array.isArray(tile)) {\n      for (let i = 0; i < tile.length; i++) {\n        let index = this.tiles.indexOf(tile[i]);\n        this.tiles.splice(index, 1);\n      }\n    } else {\n      for (let i = 0; i < this.tiles.length; i++) {\n        if (tile.querySelectorAll(\"p\")[0].innerHTML == this.tiles[i].querySelectorAll(\"p\")[0].innerHTML) {\n          this.tiles.splice(i, 1);\n          return;\n        }\n      }\n\n      throw \"this tile is not in this list\";\n    }\n  }\n\n}\n\nexport { Player };","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Player.js"],"names":["games_sachet","Player","constructor","username","yours","score","tiles","delete_list","active","delete_active","challenge_active","draw","length","temp_sachet","index","Math","random","chosen_tile","splice","canDrag","canDrop","push","draw_by_alphabet","alphabets","sachet_index","i","k","sachet","remove","tile","Array","isArray","indexOf","querySelectorAll","innerHTML"],"mappings":"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","sourcesContent":["import {games_sachet} from './Gamespage.js'\r\n\r\nclass Player{\r\n    constructor(username,yours=false){\r\n      this.username=username;\r\n      this.score=0;\r\n      this.tiles=[];\r\n      this.delete_list=[]\r\n      this.active=false\r\n      this.delete_active=false;\r\n      this.challenge_active=false;   \r\n      this.yours=yours\r\n    }\r\n  \r\n    draw(){\r\n        \r\n        while(this.tiles.length<7 && !temp_sachet.length==0){\r\n            let index=games_sachet.length*Math.random()<<0\r\n            let chosen_tile=games_sachet[index][1]\r\n            games_sachet.splice(index,1)\r\n            chosen_tile.index=this.tiles.length-1\r\n            if(this.yours){\r\n                chosen_tile.canDrag=true\r\n                chosen_tile.canDrop=true\r\n            }\r\n            this.tiles.push(chosen_tile);        \r\n        }   \r\n    }\r\n\r\n    draw_by_alphabet(alphabets){\r\n        let sachet_index\r\n        for (let i=0;i<alphabets.length;i++){   \r\n            for (let k=0;k<sachet.length;k++){\r\n                if(sachet[k][0]==alphabets[i][0]){\r\n                    sachet_index=k\r\n                    break\r\n                }\r\n            }\r\n            this.tiles.push(sachet[sachet_index])\r\n            sachet.splice(sachet_index,1)    \r\n            }      \r\n        }\r\n    \r\n\r\n    remove(tile){\r\n      if (Array.isArray(tile)){\r\n  \r\n          for (let i = 0; i< tile.length; i++){\r\n              let index = this.tiles.indexOf(tile[i]);\r\n              this.tiles.splice(index, 1)\r\n          }\r\n  \r\n      }else{\r\n  \r\n      for (let i = 0; i< this.tiles.length; i++){\r\n          if (tile.querySelectorAll(\"p\")[0].innerHTML==this.tiles[i].querySelectorAll(\"p\")[0].innerHTML){\r\n              this.tiles.splice(i, 1)\r\n              return\r\n              }\r\n          }\r\n          throw \"this tile is not in this list\"\r\n      }\r\n      \r\n      \r\n  }\r\n  }\r\n\r\n  export {Player}"]},"metadata":{},"sourceType":"module"}