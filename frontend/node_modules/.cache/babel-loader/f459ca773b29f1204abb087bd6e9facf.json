{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Gamespage.js\",\n    _s = $RefreshSig$();\n\nimport './Gamespage.css';\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\nimport { UserContext } from '../UserContext.js';\nimport { Player } from './Player.js';\nimport { Link, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Joingame from './Main_game/Joingame.js';\nimport Action_bar from './Action/Actionbar.js';\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js';\nimport Main_game from './Main_game/Main_game.js';\nimport sachet, { analytics_data } from './Sachet.js';\nimport { GamesContext, BlocksContext, PlayerListContext, AnalyticsDataContext } from './GamesContext.js';\nimport { Blocks } from './Main_game/Board.js';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar games_sachet = _.cloneDeep(sachet);\n\nexport { games_sachet };\n\nfunction Gamespage() {\n  _s();\n\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const socketRef = useRef();\n  socketRef.current = io.connect(\"http://localhost:5500\");\n  const [boardState, setboardState] = useState(new Blocks());\n  const [renderAction, setrenderAction] = useState(false);\n  const [gameState, setgameState] = useState({\n    room_id: useParams().room_id,\n    gamestarted: false,\n    socket: socketRef,\n    turn_num: 0,\n    player_turn: 0,\n    player_num: 0,\n    your_index: 0,\n    endgame: false,\n    just_added: []\n  });\n  const [playerlistState, setplayerlistState] = useState([]);\n  const [analyticsdataState, setanalyticsdataState] = useState(analytics_data);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  console.log(\"Rerender\");\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5500\");\n    axios.get('http://localhost:5500/get_added_players', {\n      params: {\n        room_id: gameState.room_id,\n        username: profile.username\n      }\n    }).then(res => {\n      let temp_player_list = [];\n\n      for (let i = 0; i < res.data.length; i++) {\n        let temp_player = new Player(res.data[i].Username);\n        temp_player.draw_by_tiles(res.data[i].Tiles);\n        temp_player_list.push(temp_player);\n      }\n\n      const your_player = new Player(profile.username, true);\n      let drawn_tiles = your_player.draw();\n      your_player.tiles = drawn_tiles;\n      axios.put(\"http://localhost:5500/add_player\", {\n        username: your_player.username,\n        tiles: drawn_tiles,\n        room_id: gameState.room_id\n      });\n      temp_player_list.push(your_player);\n      socketRef.current.emit(\"emit_new_player\", {\n        username: your_player.username,\n        tiles: your_player.tiles,\n        room_id: gameState.room_id\n      });\n      socketRef.current.on(\"incoming_new_player\", res => {\n        let temp_player = new Player(res.username);\n        temp_player.draw_by_tiles(res.tiles);\n        setgameState(prevgamestate => ({ ...prevgamestate,\n          player_num: prevgamestate.player_num + 1\n        }));\n        setplayerlistState(prevplayerlist => [...prevplayerlist, temp_player]);\n      });\n      socketRef.current.on();\n      setgameState(prevgamestate => ({ ...prevgamestate,\n        player_num: prevgamestate.player_num + temp_player_list.length,\n        your_index: temp_player_list.length - 1\n      }));\n      setplayerlistState(prevplayerlist => [...prevplayerlist, ...temp_player_list]);\n      setrenderAction(true);\n    });\n  }, []);\n  useEffect(setgameState(prevgamestate => ({ ...prevgamestate,\n    player_turn: prevgamestate.turn_num % prevgamestate.player_num\n  })), [gamestateRef.current.turn_num]);\n  /*\r\n  useEffect(\r\n    setplayerlistState(prevplayerlist=>{\r\n      let newplayerlist=[...prevplayerlist]\r\n      for (let i=0;i<newplayerlist.length;i++){\r\n        (i==gameState.player_turn) ? newplayerlist.active=true : newplayerlist.active=false\r\n      }\r\n      return newplayerlist\r\n  })\r\n  ,[gameState.player_turn])*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Games_page\",\n    children: /*#__PURE__*/_jsxDEV(Joingame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n/*<div className=\"Main_divider\">\r\n<Alphabet_analytics />\r\n<Main_game />\r\n{renderAction && <Action_bar />}\r\n</div> */\n\n\n_s(Gamespage, \"CO8Gq3AtjeBpnIYwDKDvJAAfiRo=\", false, function () {\n  return [useParams];\n});\n\n_c = Gamespage;\nexport default Gamespage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamespage\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Gamespage.js"],"names":["React","useState","useContext","useEffect","useRef","axios","Popup","UserContext","Player","Link","useParams","io","Joingame","Action_bar","Alphabet_analytics","Main_game","sachet","analytics_data","GamesContext","BlocksContext","PlayerListContext","AnalyticsDataContext","Blocks","_","games_sachet","cloneDeep","Gamespage","profile","setprofile","socketRef","current","connect","boardState","setboardState","renderAction","setrenderAction","gameState","setgameState","room_id","gamestarted","socket","turn_num","player_turn","player_num","your_index","endgame","just_added","playerlistState","setplayerlistState","analyticsdataState","setanalyticsdataState","playerlistRef","gamestateRef","boardstateRef","console","log","get","params","username","then","res","temp_player_list","i","data","length","temp_player","Username","draw_by_tiles","Tiles","push","your_player","drawn_tiles","draw","tiles","put","emit","on","prevgamestate","prevplayerlist"],"mappings":"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","sourcesContent":["import './Gamespage.css';\r\nimport React, {useState,useContext,useEffect,useRef} from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport {UserContext} from '../UserContext.js';\r\nimport {Player} from './Player.js'\r\nimport {Link,useParams} from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Joingame from './Main_game/Joingame.js'\r\nimport Action_bar from './Action/Actionbar.js'\r\nimport Alphabet_analytics from './Alphabet_analytics/Alphabet_analytics.js'\r\nimport Main_game from './Main_game/Main_game.js' \r\nimport sachet, { analytics_data } from './Sachet.js'\r\nimport {GamesContext,BlocksContext,PlayerListContext,AnalyticsDataContext} from './GamesContext.js'\r\nimport {Blocks} from './Main_game/Board.js'\r\nimport _ from \"lodash\";\r\n\r\nvar games_sachet=_.cloneDeep(sachet)\r\nexport {games_sachet}\r\n\r\nfunction Gamespage() {\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const socketRef =useRef()\r\n    socketRef.current=io.connect(\"http://localhost:5500\")\r\n    const [boardState,setboardState]=useState(new Blocks())\r\n    const [renderAction,setrenderAction]=useState(false)\r\n    const [gameState,setgameState]=useState({\r\n      room_id:useParams().room_id,\r\n      gamestarted:false,\r\n      socket:socketRef,\r\n      turn_num:0,\r\n      player_turn:0,\r\n      player_num:0, \r\n      your_index:0,\r\n      endgame:false,\r\n      just_added:[]\r\n    })\r\n    const [playerlistState,setplayerlistState]=useState([])\r\n    const [analyticsdataState,setanalyticsdataState]=useState(analytics_data)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    console.log(\"Rerender\")\r\n    useEffect(()=>{\r\n      socketRef.current=io.connect(\"http://localhost:5500\")\r\n      axios.get('http://localhost:5500/get_added_players',{params: {room_id:gameState.room_id,username:profile.username}}).then((res)=>{\r\n\r\n        let temp_player_list=[]\r\n        for (let i=0;i<res.data.length;i++){\r\n          let temp_player=new Player(res.data[i].Username)\r\n          temp_player.draw_by_tiles(res.data[i].Tiles)\r\n          temp_player_list.push(temp_player)\r\n        }\r\n\r\n        const your_player=new Player(profile.username,true)\r\n        let drawn_tiles=your_player.draw()\r\n        your_player.tiles=drawn_tiles\r\n        axios.put(\"http://localhost:5500/add_player\",{\r\n          username:your_player.username,\r\n          tiles:drawn_tiles,\r\n          room_id:gameState.room_id\r\n        })\r\n        temp_player_list.push(your_player)\r\n        \r\n        \r\n        socketRef.current.emit(\"emit_new_player\",{username:your_player.username,tiles:your_player.tiles,room_id:gameState.room_id})\r\n        \r\n        socketRef.current.on(\"incoming_new_player\", (res)=>{\r\n          \r\n          let temp_player=new Player(res.username)\r\n          temp_player.draw_by_tiles(res.tiles)\r\n          setgameState(prevgamestate=>({...prevgamestate,\r\n            player_num: prevgamestate.player_num+1\r\n          }))\r\n          setplayerlistState(prevplayerlist=>[...prevplayerlist,temp_player])\r\n        })\r\n        socketRef.current.on()\r\n\r\n        setgameState(prevgamestate=>({...prevgamestate,\r\n          player_num: prevgamestate.player_num+temp_player_list.length,\r\n          your_index:temp_player_list.length-1\r\n        }))\r\n        setplayerlistState(prevplayerlist=>[...prevplayerlist,...temp_player_list])\r\n        setrenderAction(true)\r\n    })},[])\r\n\r\n    useEffect(\r\n      setgameState( prevgamestate=>({...prevgamestate,\r\n      player_turn:prevgamestate.turn_num%prevgamestate.player_num\r\n    }))\r\n    ,[gamestateRef.current.turn_num])\r\n    /*\r\n    useEffect(\r\n      setplayerlistState(prevplayerlist=>{\r\n        let newplayerlist=[...prevplayerlist]\r\n        for (let i=0;i<newplayerlist.length;i++){\r\n          (i==gameState.player_turn) ? newplayerlist.active=true : newplayerlist.active=false\r\n        }\r\n        return newplayerlist\r\n    })\r\n    ,[gameState.player_turn])*/\r\n\r\n    \r\n    \r\n      return (     \r\n        <div className=\"Games_page\">\r\n            <Joingame/>\r\n            {/*\r\n            <AnalyticsDataContext.Provider value={{analyticsdataState,setanalyticsdataState}}>\r\n              <GamesContext.Provider value={{gameState,setgameState}}>\r\n                <PlayerListContext.Provider value={{playerlistState,setplayerlistState}}>\r\n                  <BlocksContext.Provider value={{boardState,setboardState}}>\r\n                    <div className=\"Main_divider\">\r\n                      <Alphabet_analytics />\r\n                      <Main_game />\r\n                      {renderAction && <Action_bar />}\r\n                    </div> \r\n                  </BlocksContext.Provider>\r\n                </PlayerListContext.Provider>   \r\n              </GamesContext.Provider>   \r\n            </AnalyticsDataContext.Provider>                */}       \r\n        </div>\r\n      );\r\n  }\r\n\r\n  /*<div className=\"Main_divider\">\r\n  <Alphabet_analytics />\r\n  <Main_game />\r\n  {renderAction && <Action_bar />}\r\n</div> */\r\n  \r\nexport default Gamespage;"]},"metadata":{},"sourceType":"module"}