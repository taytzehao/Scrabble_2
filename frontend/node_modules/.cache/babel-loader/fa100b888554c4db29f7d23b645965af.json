{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TzeHaoTay\\\\Desktop\\\\CS\\\\scrabble2\\\\frontend\\\\src\\\\Games_page\\\\Main_game\\\\Challenge_button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useDrag } from 'react-dnd';\nimport axios from 'axios';\nimport './Tile_container.css';\nimport { DndProvider, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { GamesContext, PlayerListContext, BlocksContext } from '../GamesContext.js';\nimport { Tile } from '../Sachet.js';\nimport { SocketContext, UserContext } from '../../UserContext.js';\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Challenge_button(value) {\n  _s();\n\n  const websocket = useContext(SocketContext);\n  const {\n    profile,\n    setprofile\n  } = useContext(UserContext);\n  const {\n    gameState,\n    setgameState\n  } = useContext(GamesContext);\n  const {\n    playerlistState,\n    setplayerlistState\n  } = useContext(PlayerListContext);\n  const {\n    boardState,\n    setboardState\n  } = useContext(BlocksContext);\n  const playerlistRef = useRef(null);\n  const gamestateRef = useRef(null);\n  const boardstateRef = useRef(null);\n  playerlistRef.current = playerlistState;\n  gamestateRef.current = gameState;\n  boardstateRef.current = boardState;\n  const challengestyle = {\n    opacity: playerlistState[value.player_num].challenge_active ? 1 : 0.5\n  };\n\n  function challenge() {\n    websocket.current.emit('emit_challenge_player', {\n      room_id: gamestateRef.current.room_id,\n      challenger_username: playerlistRef.current[gamestateRef.current.your_index].username,\n      challenge_index: gamestateRef.current.challenge_index,\n      challenge_words: gamestateRef.current.challenge_words\n    });\n  }\n\n  useEffect(() => {\n    websocket.current.on(\"challenge_player\", socket_out => {\n      let alert_string;\n\n      if (socket_out.result.find(element => element.result == false)) {\n        alert_string = playerlistRef.current[gamestateRef.current.challenge_index].username + \" cannot play for the next turn. The following words are invalid: \\n\";\n\n        for (let false_word of socket_out.result) {\n          alert_string += false_word.word + \"\\n\";\n        }\n\n        alert(alert_string);\n        setgameState(prevgamestate => ({ ...prevgamestate,\n          challenge_index: undefined,\n          challenge_words: [],\n          skip_indexes: [...prevgamestate.skip_indexes, prevgamestate.challenge_index]\n        }));\n      } else {\n        alert_string = \"Challenge attempted on \" + playerlistRef.current[gamestateRef.current.challenge_index].username + \" by \" + socket_out.challenger_username + \". All words placed by \" + playerlistRef.current[gamestateRef.current.challenge_index].username + \" are correct.\";\n        alert(alert_string);\n        setgameState(prevgamestate => ({ ...prevgamestate,\n          challenge_index: undefined,\n          challenge_words: []\n        }));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    let your_index_challenge = gamestateRef.current.your_index == playerlistState.length - 1 ? 0 : gamestateRef.current.your_index + 1;\n    let temp_playerlist = [...playerlistRef.current];\n    console.log(\"CHANGE CHALLENGE STATE\", temp_playerlist);\n\n    if (gamestateRef.current.your_index != gamestateRef.current.challenge_index && (gamestateRef.current.challenge_index || gamestateRef.current.challenge_index == 0)) {\n      temp_playerlist[gamestateRef.current.your_index].challenge_active = true;\n      setplayerlistState(temp_playerlist);\n    } else {\n      temp_playerlist[gamestateRef.current.your_index].challenge_active = false;\n      setplayerlistState(temp_playerlist);\n    }\n  }, [, gameState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"challengebtn gamesbtn\",\n      onClick: challenge,\n      style: challengestyle,\n      disabled: !playerlistState[value.player_num].challenge_active,\n      children: \"Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Challenge_button, \"wZ8RXLADJ566+aBeQJ3QtBwjR+w=\");\n\n_c = Challenge_button;\nexport default Challenge_button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Challenge_button\");","map":{"version":3,"sources":["C:/Users/TzeHaoTay/Desktop/CS/scrabble2/frontend/src/Games_page/Main_game/Challenge_button.js"],"names":["React","useContext","useState","useEffect","useRef","useDrag","axios","DndProvider","useDrop","HTML5Backend","GamesContext","PlayerListContext","BlocksContext","Tile","SocketContext","UserContext","_","Challenge_button","value","websocket","profile","setprofile","gameState","setgameState","playerlistState","setplayerlistState","boardState","setboardState","playerlistRef","gamestateRef","boardstateRef","current","challengestyle","opacity","player_num","challenge_active","challenge","emit","room_id","challenger_username","your_index","username","challenge_index","challenge_words","on","socket_out","alert_string","result","find","element","false_word","word","alert","prevgamestate","undefined","skip_indexes","your_index_challenge","length","temp_playerlist","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,EAA4CC,MAA5C,QAAyD,OAAzD;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAAQC,WAAR,EAAoBC,OAApB,QAAkC,WAAlC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,YAAR,EAAqBC,iBAArB,EAAuCC,aAAvC,QAA2D,oBAA3D;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,sBAAzC;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAAA;;AAE5B,QAAMC,SAAS,GAAClB,UAAU,CAACa,aAAD,CAA1B;AACA,QAAM;AAACM,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAqBpB,UAAU,CAACc,WAAD,CAArC;AACA,QAAM;AAACO,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAyBtB,UAAU,CAACS,YAAD,CAAzC;AACA,QAAM;AAACc,IAAAA,eAAD;AAAiBC,IAAAA;AAAjB,MAAqCxB,UAAU,CAACU,iBAAD,CAArD;AACA,QAAM;AAACe,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAA2B1B,UAAU,CAACW,aAAD,CAA3C;AACA,QAAMgB,aAAa,GAACxB,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMyB,YAAY,GAACzB,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM0B,aAAa,GAAC1B,MAAM,CAAC,IAAD,CAA1B;AACAwB,EAAAA,aAAa,CAACG,OAAd,GAAsBP,eAAtB;AACAK,EAAAA,YAAY,CAACE,OAAb,GAAqBT,SAArB;AACAQ,EAAAA,aAAa,CAACC,OAAd,GAAsBL,UAAtB;AACA,QAAMM,cAAc,GAAC;AACjBC,IAAAA,OAAO,EAAET,eAAe,CAACN,KAAK,CAACgB,UAAP,CAAf,CAAkCC,gBAAnC,GAAwD,CAAxD,GAA2D;AADlD,GAArB;;AAIA,WAASC,SAAT,GAAoB;AAChBjB,IAAAA,SAAS,CAACY,OAAV,CAAkBM,IAAlB,CAAuB,uBAAvB,EACA;AACIC,MAAAA,OAAO,EAACT,YAAY,CAACE,OAAb,CAAqBO,OADjC;AAEIC,MAAAA,mBAAmB,EAACX,aAAa,CAACG,OAAd,CAAsBF,YAAY,CAACE,OAAb,CAAqBS,UAA3C,EAAuDC,QAF/E;AAGIC,MAAAA,eAAe,EAACb,YAAY,CAACE,OAAb,CAAqBW,eAHzC;AAIIC,MAAAA,eAAe,EAACd,YAAY,CAACE,OAAb,CAAqBY;AAJzC,KADA;AAOH;;AAEDxC,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,SAAS,CAACY,OAAV,CAAkBa,EAAlB,CAAqB,kBAArB,EAAyCC,UAAD,IAAc;AAClD,UAAIC,YAAJ;;AACA,UAAGD,UAAU,CAACE,MAAX,CAAkBC,IAAlB,CAAuBC,OAAO,IAAEA,OAAO,CAACF,MAAR,IAAgB,KAAhD,CAAH,EAA0D;AACtDD,QAAAA,YAAY,GAAClB,aAAa,CAACG,OAAd,CAAsBF,YAAY,CAACE,OAAb,CAAqBW,eAA3C,EAA4DD,QAA5D,GAAsE,qEAAnF;;AACA,aAAK,IAAIS,UAAT,IAAuBL,UAAU,CAACE,MAAlC,EAAyC;AAACD,UAAAA,YAAY,IAAGI,UAAU,CAACC,IAAX,GAAgB,IAA/B;AAAoC;;AAC9EC,QAAAA,KAAK,CAACN,YAAD,CAAL;AACAvB,QAAAA,YAAY,CAAC8B,aAAa,KAAG,EAAC,GAAGA,aAAJ;AACzBX,UAAAA,eAAe,EAACY,SADS;AAEzBX,UAAAA,eAAe,EAAC,EAFS;AAGzBY,UAAAA,YAAY,EAAC,CAAC,GAAGF,aAAa,CAACE,YAAlB,EAA+BF,aAAa,CAACX,eAA7C;AAHY,SAAH,CAAd,CAAZ;AAKH,OATD,MASK;AACDI,QAAAA,YAAY,GAAC,4BACDlB,aAAa,CAACG,OAAd,CAAsBF,YAAY,CAACE,OAAb,CAAqBW,eAA3C,EAA4DD,QAD3D,GACqE,MADrE,GAEDI,UAAU,CAACN,mBAFV,GAE8B,wBAF9B,GAGDX,aAAa,CAACG,OAAd,CAAsBF,YAAY,CAACE,OAAb,CAAqBW,eAA3C,EAA4DD,QAH3D,GAGsE,eAHnF;AAIAW,QAAAA,KAAK,CAACN,YAAD,CAAL;AACAvB,QAAAA,YAAY,CAAC8B,aAAa,KAAG,EAAC,GAAGA,aAAJ;AACzBX,UAAAA,eAAe,EAACY,SADS;AAEzBX,UAAAA,eAAe,EAAC;AAFS,SAAH,CAAd,CAAZ;AAIH;AACJ,KAtBD;AAuBH,GAxBQ,EAwBP,EAxBO,CAAT;AA0BAxC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIqD,oBAAoB,GAAI3B,YAAY,CAACE,OAAb,CAAqBS,UAArB,IAAiChB,eAAe,CAACiC,MAAhB,GAAuB,CAAzD,GAA8D,CAA9D,GACC5B,YAAY,CAACE,OAAb,CAAqBS,UAArB,GAAgC,CAD5D;AAEA,QAAIkB,eAAe,GAAC,CAAC,GAAG9B,aAAa,CAACG,OAAlB,CAApB;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCF,eAArC;;AACA,QAAG7B,YAAY,CAACE,OAAb,CAAqBS,UAArB,IAAiCX,YAAY,CAACE,OAAb,CAAqBW,eAAtD,KACEb,YAAY,CAACE,OAAb,CAAqBW,eAArB,IAAwCb,YAAY,CAACE,OAAb,CAAqBW,eAArB,IAAsC,CADhF,CAAH,EACsF;AAClFgB,MAAAA,eAAe,CAAC7B,YAAY,CAACE,OAAb,CAAqBS,UAAtB,CAAf,CAAiDL,gBAAjD,GAAkE,IAAlE;AACAV,MAAAA,kBAAkB,CAACiC,eAAD,CAAlB;AACD,KAJH,MAIO;AACHA,MAAAA,eAAe,CAAC7B,YAAY,CAACE,OAAb,CAAqBS,UAAtB,CAAf,CAAiDL,gBAAjD,GAAkE,KAAlE;AACAV,MAAAA,kBAAkB,CAACiC,eAAD,CAAlB;AACD;AACN,GAbQ,EAaP,GAAEpC,SAAF,CAbO,CAAT;AAeA,sBACI;AAAA,2BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,SAAS,EAAC,uBADlB;AAEQ,MAAA,OAAO,EAAEc,SAFjB;AAGQ,MAAA,KAAK,EAAEJ,cAHf;AAIQ,MAAA,QAAQ,EAAE,CAACR,eAAe,CAACN,KAAK,CAACgB,UAAP,CAAf,CAAkCC,gBAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA9EQlB,gB;;KAAAA,gB;AAgFT,eAAeA,gBAAf","sourcesContent":["import React,{useContext,useState,useEffect,useRef} from 'react';\r\nimport {useDrag} from 'react-dnd';\r\nimport axios from 'axios';\r\nimport './Tile_container.css'\r\nimport {DndProvider,useDrop} from 'react-dnd'\r\nimport {HTML5Backend} from 'react-dnd-html5-backend'\r\nimport {GamesContext,PlayerListContext,BlocksContext} from '../GamesContext.js'\r\nimport {Tile} from '../Sachet.js'\r\nimport {SocketContext, UserContext} from '../../UserContext.js';\r\nimport _ from \"lodash\";\r\n\r\n\r\nfunction Challenge_button(value){\r\n\r\n    const websocket=useContext(SocketContext)\r\n    const {profile,setprofile}=useContext(UserContext)\r\n    const {gameState,setgameState}=useContext(GamesContext)\r\n    const {playerlistState,setplayerlistState}=useContext(PlayerListContext)\r\n    const {boardState,setboardState}=useContext(BlocksContext)\r\n    const playerlistRef=useRef(null);\r\n    const gamestateRef=useRef(null);\r\n    const boardstateRef=useRef(null);\r\n    playerlistRef.current=playerlistState\r\n    gamestateRef.current=gameState\r\n    boardstateRef.current=boardState\r\n    const challengestyle={\r\n        opacity:(playerlistState[value.player_num].challenge_active) ?  1: 0.5 \r\n    }\r\n\r\n    function challenge(){\r\n        websocket.current.emit('emit_challenge_player',\r\n        {\r\n            room_id:gamestateRef.current.room_id,\r\n            challenger_username:playerlistRef.current[gamestateRef.current.your_index].username,\r\n            challenge_index:gamestateRef.current.challenge_index,\r\n            challenge_words:gamestateRef.current.challenge_words,\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        websocket.current.on(\"challenge_player\",(socket_out)=>{\r\n            let alert_string\r\n            if(socket_out.result.find(element=>element.result==false)){\r\n                alert_string=playerlistRef.current[gamestateRef.current.challenge_index].username +\" cannot play for the next turn. The following words are invalid: \\n\"\r\n                for (let false_word of socket_out.result){alert_string+= false_word.word+\"\\n\"}\r\n                alert(alert_string)\r\n                setgameState(prevgamestate=>({...prevgamestate,\r\n                    challenge_index:undefined,\r\n                    challenge_words:[],\r\n                    skip_indexes:[...prevgamestate.skip_indexes,prevgamestate.challenge_index]\r\n                }))\r\n            }else{\r\n                alert_string=\"Challenge attempted on \"+\r\n                            playerlistRef.current[gamestateRef.current.challenge_index].username +\" by \"+\r\n                            socket_out.challenger_username+\". All words placed by \"+\r\n                            playerlistRef.current[gamestateRef.current.challenge_index].username + \" are correct.\"\r\n                alert(alert_string)\r\n                setgameState(prevgamestate=>({...prevgamestate,\r\n                    challenge_index:undefined,\r\n                    challenge_words:[],\r\n                }))\r\n            }\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        let your_index_challenge = (gamestateRef.current.your_index==playerlistState.length-1) ? 0 :\r\n                                    gamestateRef.current.your_index+1\r\n        let temp_playerlist=[...playerlistRef.current]\r\n        console.log(\"CHANGE CHALLENGE STATE\",temp_playerlist)\r\n        if(gamestateRef.current.your_index!=gamestateRef.current.challenge_index && \r\n            (gamestateRef.current.challenge_index || gamestateRef.current.challenge_index==0)){ \r\n            temp_playerlist[gamestateRef.current.your_index].challenge_active=true\r\n            setplayerlistState(temp_playerlist)\r\n          }else{\r\n            temp_playerlist[gamestateRef.current.your_index].challenge_active=false\r\n            setplayerlistState(temp_playerlist)\r\n          }\r\n    },[,gameState])\r\n    \r\n    return(\r\n        <div>\r\n            <button type=\"button\" \r\n                    className=\"challengebtn gamesbtn\" \r\n                    onClick={challenge}\r\n                    style={challengestyle} \r\n                    disabled={!playerlistState[value.player_num].challenge_active} >\r\n            Challenge</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Challenge_button"]},"metadata":{},"sourceType":"module"}